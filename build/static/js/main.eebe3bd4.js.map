{"version":3,"file":"static/js/main.eebe3bd4.js","mappings":"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","sources":["../node_modules/lodash.throttle/index.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/react-dom/client.js","../node_modules/react-dom/index.js","../node_modules/react-scroll/modules/components/Button.js","../node_modules/react-scroll/modules/components/Element.js","../node_modules/react-scroll/modules/components/Link.js","../node_modules/react-scroll/modules/index.js","../node_modules/react-scroll/modules/mixins/Helpers.js","../node_modules/react-scroll/modules/mixins/animate-scroll.js","../node_modules/react-scroll/modules/mixins/cancel-events.js","../node_modules/react-scroll/modules/mixins/passive-event-listeners.js","../node_modules/react-scroll/modules/mixins/scroll-element.js","../node_modules/react-scroll/modules/mixins/scroll-events.js","../node_modules/react-scroll/modules/mixins/scroll-hash.js","../node_modules/react-scroll/modules/mixins/scroll-link.js","../node_modules/react-scroll/modules/mixins/scroll-spy.js","../node_modules/react-scroll/modules/mixins/scroller.js","../node_modules/react-scroll/modules/mixins/smooth.js","../node_modules/react-scroll/modules/mixins/utils.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react/index.js","../node_modules/react/jsx-runtime.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/index.js","../webpack/bootstrap","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/load script","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/jsonp chunk loading","components/Footer/Footer.js","components/NavMenu/NavMenu.js","components/BurguerMenu/BurguerMenu.js","components/Button/Button.js","components/Header/Header.js","components/Section1/Section1.js","components/Section2/Section2.js","components/Section3/Section3.js","components/Section4/Section4.js","components/PortugalMap/PortugalMap.js","components/Section5/Section5.js","components/Section6/Section6.js","../node_modules/@firebase/util/src/constants.ts","../node_modules/@firebase/util/src/assert.ts","../node_modules/@firebase/util/src/crypt.ts","../node_modules/@firebase/util/src/deepCopy.ts","../node_modules/@firebase/util/src/defaults.ts","../node_modules/@firebase/util/src/global.ts","../node_modules/@firebase/util/src/deferred.ts","../node_modules/@firebase/util/src/environment.ts","../node_modules/@firebase/util/src/errors.ts","../node_modules/@firebase/util/src/json.ts","../node_modules/@firebase/util/src/jwt.ts","../node_modules/@firebase/util/src/obj.ts","../node_modules/@firebase/util/src/sha1.ts","../node_modules/@firebase/util/src/validation.ts","../node_modules/@firebase/util/src/utf8.ts","../node_modules/@firebase/util/src/compat.ts","../node_modules/@firebase/component/src/component.ts","../node_modules/@firebase/component/src/constants.ts","../node_modules/@firebase/component/src/provider.ts","../node_modules/@firebase/component/src/component_container.ts","../node_modules/@firebase/logger/src/logger.ts","../node_modules/idb/build/wrap-idb-value.js","../node_modules/idb/build/index.js","../node_modules/@firebase/app/src/platformLoggerService.ts","../node_modules/@firebase/app/src/logger.ts","../node_modules/@firebase/app/src/constants.ts","../node_modules/@firebase/app/src/internal.ts","../node_modules/@firebase/app/src/errors.ts","../node_modules/@firebase/app/src/firebaseApp.ts","../node_modules/@firebase/app/src/api.ts","../node_modules/@firebase/app/src/indexeddb.ts","../node_modules/@firebase/app/src/heartbeatService.ts","../node_modules/@firebase/app/src/registerCoreComponents.ts","../node_modules/@firebase/app/src/index.ts","../node_modules/firebase/app/index.ts","../node_modules/@firebase/database/src/core/version.ts","../node_modules/@firebase/database/src/core/storage/DOMStorageWrapper.ts","../node_modules/@firebase/database/src/core/storage/MemoryStorage.ts","../node_modules/@firebase/database/src/core/storage/storage.ts","../node_modules/@firebase/database/src/core/util/util.ts","../node_modules/@firebase/database/src/core/AppCheckTokenProvider.ts","../node_modules/@firebase/database/src/core/AuthTokenProvider.ts","../node_modules/@firebase/database/src/realtime/Constants.ts","../node_modules/@firebase/database/src/core/RepoInfo.ts","../node_modules/@firebase/database/src/core/stats/StatsCollection.ts","../node_modules/@firebase/database/src/core/stats/StatsManager.ts","../node_modules/@firebase/database/src/realtime/polling/PacketReceiver.ts","../node_modules/@firebase/database/src/realtime/BrowserPollConnection.ts","../node_modules/@firebase/database/src/realtime/WebSocketConnection.ts","../node_modules/@firebase/database/src/realtime/TransportManager.ts","../node_modules/@firebase/database/src/realtime/Connection.ts","../node_modules/@firebase/database/src/core/ServerActions.ts","../node_modules/@firebase/database/src/core/util/EventEmitter.ts","../node_modules/@firebase/database/src/core/util/OnlineMonitor.ts","../node_modules/@firebase/database/src/core/util/Path.ts","../node_modules/@firebase/database/src/core/util/VisibilityMonitor.ts","../node_modules/@firebase/database/src/core/PersistentConnection.ts","../node_modules/@firebase/database/src/core/snap/Node.ts","../node_modules/@firebase/database/src/core/snap/indexes/Index.ts","../node_modules/@firebase/database/src/core/snap/indexes/KeyIndex.ts","../node_modules/@firebase/database/src/core/util/SortedMap.ts","../node_modules/@firebase/database/src/core/snap/comparators.ts","../node_modules/@firebase/database/src/core/snap/snap.ts","../node_modules/@firebase/database/src/core/snap/LeafNode.ts","../node_modules/@firebase/database/src/core/snap/indexes/PriorityIndex.ts","../node_modules/@firebase/database/src/core/snap/childSet.ts","../node_modules/@firebase/database/src/core/snap/IndexMap.ts","../node_modules/@firebase/database/src/core/snap/ChildrenNode.ts","../node_modules/@firebase/database/src/core/snap/nodeFromJSON.ts","../node_modules/@firebase/database/src/core/snap/indexes/PathIndex.ts","../node_modules/@firebase/database/src/core/snap/indexes/ValueIndex.ts","../node_modules/@firebase/database/src/core/view/Change.ts","../node_modules/@firebase/database/src/core/view/QueryParams.ts","../node_modules/@firebase/database/src/core/ReadonlyRestClient.ts","../node_modules/@firebase/util/src/query.ts","../node_modules/@firebase/database/src/core/SnapshotHolder.ts","../node_modules/@firebase/database/src/core/SparseSnapshotTree.ts","../node_modules/@firebase/database/src/core/stats/StatsListener.ts","../node_modules/@firebase/database/src/core/stats/StatsReporter.ts","../node_modules/@firebase/database/src/core/operation/Operation.ts","../node_modules/@firebase/database/src/core/operation/AckUserWrite.ts","../node_modules/@firebase/database/src/core/operation/Overwrite.ts","../node_modules/@firebase/database/src/core/operation/Merge.ts","../node_modules/@firebase/database/src/core/view/CacheNode.ts","../node_modules/@firebase/database/src/core/view/EventGenerator.ts","../node_modules/@firebase/database/src/core/view/ViewCache.ts","../node_modules/@firebase/database/src/core/util/ImmutableTree.ts","../node_modules/@firebase/database/src/core/CompoundWrite.ts","../node_modules/@firebase/database/src/core/WriteTree.ts","../node_modules/@firebase/database/src/core/view/ChildChangeAccumulator.ts","../node_modules/@firebase/database/src/core/view/CompleteChildSource.ts","../node_modules/@firebase/database/src/core/view/ViewProcessor.ts","../node_modules/@firebase/database/src/core/view/View.ts","../node_modules/@firebase/database/src/core/SyncPoint.ts","../node_modules/@firebase/database/src/core/SyncTree.ts","../node_modules/@firebase/database/src/core/util/ServerValues.ts","../node_modules/@firebase/database/src/core/util/Tree.ts","../node_modules/@firebase/database/src/core/util/validation.ts","../node_modules/@firebase/database/src/core/view/EventQueue.ts","../node_modules/@firebase/database/src/core/Repo.ts","../node_modules/@firebase/database/src/core/util/libs/parser.ts","../node_modules/@firebase/database/src/core/util/NextPushId.ts","../node_modules/@firebase/database/src/api/Reference_impl.ts","../node_modules/@firebase/database/src/api/Database.ts","../node_modules/@firebase/database/src/api/test_access.ts","../node_modules/@firebase/database/src/register.ts","../node_modules/@firebase/database/src/index.ts","config/firebase.js","../node_modules/@firebase/util/src/emulator.ts","components/Section7/Section7.js","App.js","reportWebVitals.js","index.js"],"sourcesContent":["/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = throttle;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),ca=require(\"scheduler\");function p(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\"Capture\",b)}\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\nvar ia=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qa(a,b,c,d){if(null===b||\"undefined\"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(ra,\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\nz.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for(\"react.element\"),wa=Symbol.for(\"react.portal\"),ya=Symbol.for(\"react.fragment\"),za=Symbol.for(\"react.strict_mode\"),Aa=Symbol.for(\"react.profiler\"),Ba=Symbol.for(\"react.provider\"),Ca=Symbol.for(\"react.context\"),Da=Symbol.for(\"react.forward_ref\"),Ea=Symbol.for(\"react.suspense\"),Fa=Symbol.for(\"react.suspense_list\"),Ga=Symbol.for(\"react.memo\"),Ha=Symbol.for(\"react.lazy\");Symbol.for(\"react.scope\");Symbol.for(\"react.debug_trace_mode\");\nvar Ia=Symbol.for(\"react.offscreen\");Symbol.for(\"react.legacy_hidden\");Symbol.for(\"react.cache\");Symbol.for(\"react.tracing_marker\");var Ja=Symbol.iterator;function Ka(a){if(null===a||\"object\"!==typeof a)return null;a=Ja&&a[Ja]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||\"\"}return\"\\n\"+La+a}var Na=!1;\nfunction Oa(a,b){if(!a||Na)return\"\";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\"string\"===typeof l.stack){for(var e=l.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\"\\n\"+e[g].replace(\" at new \",\" at \");a.displayName&&k.includes(\"<anonymous>\")&&(k=k.replace(\"<anonymous>\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Ma(a):\"\"}\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma(\"Lazy\");case 13:return Ma(\"Suspense\");case 19:return Ma(\"SuspenseList\");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return\"\"}}\nfunction Qa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ya:return\"Fragment\";case wa:return\"Portal\";case Aa:return\"Profiler\";case za:return\"StrictMode\";case Ea:return\"Suspense\";case Fa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||\"Context\")+\".Consumer\";case Ba:return(a._context.displayName||\"Context\")+\".Provider\";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\nb.name||\"\",a=\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||\"Memo\";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return\"Cache\";case 9:return(b.displayName||\"Context\")+\".Consumer\";case 10:return(b._context.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return a=b.render,a=a.displayName||a.name||\"\",b.displayName||(\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 5:return b;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return Qa(b);case 8:return b===za?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";\ncase 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 17:case 2:case 14:case 15:if(\"function\"===typeof b)return b.displayName||b.name||null;if(\"string\"===typeof b)return b}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"string\":case \"undefined\":return a;case \"object\":return a;default:return\"\"}}\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,\"checked\",b,!1)}\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?cb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction db(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction cb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var eb=Array.isArray;\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nfunction lb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?kb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar mb,nb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\"http://www.w3.org/2000/svg\"!==a.namespaceURI||\"innerHTML\"in a)a.innerHTML=b;else{mb=mb||document.createElement(\"div\");mb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(\"\"+b).trim():b+\"px\"}\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=rb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\"object\"!==typeof b.dangerouslySetInnerHTML||!(\"__html\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(p(62));}}\nfunction vb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,\"passive\",{get:function(){Lb=!0}});window.addEventListener(\"test\",Mb,Mb);window.removeEventListener(\"test\",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&\"function\"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction Sc(a,b){switch(a){case \"focusin\":case \"focusout\":Lc=null;break;case \"dragenter\":case \"dragleave\":Mc=null;break;case \"mouseover\":case \"mouseout\":Nc=null;break;case \"pointerover\":case \"pointerout\":Oc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Pc.delete(b.pointerId)}}\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction Uc(a,b,c,d,e){switch(b){case \"focusin\":return Lc=Tc(Lc,a,b,c,d,e),!0;case \"dragenter\":return Mc=Tc(Mc,a,b,c,d,e),!0;case \"mouseover\":return Nc=Tc(Nc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\nfunction jd(a){switch(a){case \"cancel\":case \"click\":case \"close\":case \"contextmenu\":case \"copy\":case \"cut\":case \"auxclick\":case \"dblclick\":case \"dragend\":case \"dragstart\":case \"drop\":case \"focusin\":case \"focusout\":case \"input\":case \"invalid\":case \"keydown\":case \"keypress\":case \"keyup\":case \"mousedown\":case \"mouseup\":case \"paste\":case \"pause\":case \"play\":case \"pointercancel\":case \"pointerdown\":case \"pointerup\":case \"ratechange\":case \"reset\":case \"resize\":case \"seeked\":case \"submit\":case \"touchcancel\":case \"touchend\":case \"touchstart\":case \"volumechange\":case \"change\":case \"selectionchange\":case \"textInput\":case \"compositionstart\":case \"compositionend\":case \"compositionupdate\":case \"beforeblur\":case \"afterblur\":case \"beforeinput\":case \"blur\":case \"fullscreenchange\":case \"focus\":case \"hashchange\":case \"popstate\":case \"select\":case \"selectstart\":return 1;case \"drag\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"mousemove\":case \"mouseout\":case \"mouseover\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"scroll\":case \"toggle\":case \"touchmove\":case \"wheel\":case \"mouseenter\":case \"mouseleave\":case \"pointerenter\":case \"pointerleave\":return 4;\ncase \"message\":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\nfunction od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&\"CompositionEvent\"in window,be=null;ia&&\"documentMode\"in document&&(be=document.documentMode);var ce=ia&&\"TextEvent\"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge;\nfunction Ie(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Pe=ia&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var We={animationend:Ve(\"Animation\",\"AnimationEnd\"),animationiteration:Ve(\"Animation\",\"AnimationIteration\"),animationstart:Ve(\"Animation\",\"AnimationStart\"),transitionend:Ve(\"Transition\",\"TransitionEnd\")},Xe={},Ye={};\nia&&(Ye=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),\"TransitionEvent\"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze(\"animationend\"),af=Ze(\"animationiteration\"),bf=Ze(\"animationstart\"),cf=Ze(\"transitionend\"),df=new Map,ef=\"abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,\"on\"+kf)}ff($e,\"onAnimationEnd\");ff(af,\"onAnimationIteration\");ff(bf,\"onAnimationStart\");ff(\"dblclick\",\"onDoubleClick\");ff(\"focusin\",\"onFocus\");ff(\"focusout\",\"onBlur\");ff(cf,\"onTransitionEnd\");ha(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);ha(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ha(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);\nha(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);fa(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));fa(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));fa(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);fa(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));fa(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));\nfa(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var lf=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),mf=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(lf));\nfunction nf(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+\"__bubble\";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf=\"_reactListening\"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){\"selectionchange\"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf(\"selectionchange\",!1,b))}}\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":n=\"focus\";k=Fd;break;case \"focusout\":n=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var t=0!==(b&4),J=!t&&\"scroll\"===a,x=t?null!==h?h+\"Capture\":null:h;t=[];for(var w=d,u;null!==\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F=\"onMouseLeave\";x=\"onMouseEnter\";w=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)t=Td,F=\"onPointerLeave\",x=\"onPointerEnter\",w=\"pointer\";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+\"leave\",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+\"enter\",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);\"focusout\"===a&&(xa=h._wrapperState)&&\nxa.controlled&&\"number\"===h.type&&cb(h,\"number\",h.value)}xa=d?ue(d):window;switch(a){case \"focusin\":if(me(xa)||\"true\"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case \"compositionstart\":var ba=\"onCompositionStart\";break b;case \"compositionend\":ba=\"onCompositionEnd\";\nbreak b;case \"compositionupdate\":ba=\"onCompositionUpdate\";break b}ba=void 0}else ie?ge(a,c)&&(ba=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(ba=\"onCompositionStart\");ba&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==ba?\"onCompositionEnd\"===ba&&ie&&($a=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),\n0<d.length&&(e=new Ld(\"onBeforeInput\",\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return(\"string\"===typeof a?a:\"\"+a).replace(xf,\"\\n\").replace(yf,\"\")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\nvar Cf=null,Df=null;function Ef(a,b){return\"textarea\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar Ff=\"function\"===typeof setTimeout?setTimeout:void 0,Gf=\"function\"===typeof clearTimeout?clearTimeout:void 0,Hf=\"function\"===typeof Promise?Promise:void 0,Jf=\"function\"===typeof queueMicrotask?queueMicrotask:\"undefined\"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,\"/$\"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else\"$\"!==c&&\"$?\"!==c&&\"$!\"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if(\"$\"===b||\"$!\"===b||\"$?\"===b)break;if(\"/$\"===b)return null}}return a}\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of=\"__reactFiber$\"+Nf,Pf=\"__reactProps$\"+Nf,uf=\"__reactContainer$\"+Nf,of=\"__reactEvents$\"+Nf,Qf=\"__reactListeners$\"+Nf,Rf=\"__reactHandles$\"+Nf;\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||\"Unknown\",e));return A({},c,d)}\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg=\"\";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType=\"DELETED\";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b=\"head\"!==b&&\"body\"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}yg=\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;function Lg(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var Mg=Uf(null),Ng=null,Og=null,Pg=null;function Qg(){Pg=Og=Ng=null}function Rg(a){var b=Mg.current;E(Mg);a._currentValue=b}\nfunction Sg(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}function Tg(a,b){Ng=a;Pg=Og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(Ug=!0),a.firstContext=null)}\nfunction Vg(a){var b=a._currentValue;if(Pg!==a)if(a={context:a,memoizedValue:b,next:null},null===Og){if(null===Ng)throw Error(p(308));Og=a;Ng.dependencies={lanes:0,firstContext:a}}else Og=Og.next=a;return b}var Wg=null;function Xg(a){null===Wg?Wg=[a]:Wg.push(a)}function Yg(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,Xg(b)):(c.next=e.next,e.next=c);b.interleaved=c;return Zg(a,d)}\nfunction Zg(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var $g=!1;function ah(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\nfunction bh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function ch(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction dh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return Zg(a,c)}e=d.interleaved;null===e?(b.next=b,Xg(d)):(b.next=e.next,e.next=b);d.interleaved=b;return Zg(a,c)}function eh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nfunction fh(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction gh(a,b,c,d){var e=a.updateQueue;$g=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if(\"function\"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r=\"function\"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:$g=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);hh|=g;a.lanes=g;a.memoizedState=q}}\nfunction ih(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(p(191,e));e.call(d)}}}var jh=(new aa.Component).refs;function kh(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar nh={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=L(),e=lh(a),f=ch(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=dh(a,f,e);null!==b&&(mh(b,a,e,d),eh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=L(),e=lh(a),f=ch(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=dh(a,f,e);null!==b&&(mh(b,a,e,d),eh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=L(),d=\nlh(a),e=ch(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=dh(a,e,d);null!==b&&(mh(b,a,d,c),eh(b,a,d))}};function oh(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\nfunction ph(a,b,c){var d=!1,e=Vf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=Vg(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=nh;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction qh(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&nh.enqueueReplaceState(b,b.state,null)}\nfunction rh(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=jh;ah(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=Vg(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(kh(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\n\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&nh.enqueueReplaceState(e,e.state,null),gh(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4194308)}\nfunction sh(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;b===jh&&(b=e.refs={});null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if(\"string\"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\nfunction th(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,\"[object Object]\"===a?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":a));}function uh(a){var b=a._init;return b(a._payload)}\nfunction vh(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=wh(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=xh(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||\"object\"===typeof f&&null!==f&&f.$$typeof===Ha&&uh(f)===b.type))return d=e(b,c.props),d.ref=sh(a,b,c),d.return=a,d;d=yh(c.type,c.key,c.props,null,a.mode,d);d.ref=sh(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=zh(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Ah(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if(\"string\"===typeof b&&\"\"!==b||\"number\"===typeof b)return b=xh(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=yh(b.type,b.key,b.props,null,a.mode,c),\nc.ref=sh(a,null,b),c.return=a,c;case wa:return b=zh(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Ah(b,a.mode,c,null),b.return=a,b;th(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c&&\"\"!==c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);th(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d&&\"\"!==d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);th(b,d)}return null}\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if(\"function\"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||\"object\"===typeof k&&null!==k&&k.$$typeof===Ha&&uh(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=sh(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Ah(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=yh(f.type,f.key,f.props,null,a.mode,h),h.ref=sh(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=zh(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);th(a,f)}return\"string\"===typeof f&&\"\"!==f||\"number\"===typeof f?(f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\n(c(a,d),d=xh(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Bh=vh(!0),Ch=vh(!1),Dh={},Eh=Uf(Dh),Fh=Uf(Dh),Gh=Uf(Dh);function Hh(a){if(a===Dh)throw Error(p(174));return a}function Ih(a,b){G(Gh,b);G(Fh,a);G(Eh,Dh);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(Eh);G(Eh,b)}function Jh(){E(Eh);E(Fh);E(Gh)}\nfunction Kh(a){Hh(Gh.current);var b=Hh(Eh.current);var c=lb(b,a.type);b!==c&&(G(Fh,a),G(Eh,c))}function Lh(a){Fh.current===a&&(E(Eh),E(Fh))}var M=Uf(0);\nfunction Mh(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Nh=[];\nfunction Oh(){for(var a=0;a<Nh.length;a++)Nh[a]._workInProgressVersionPrimary=null;Nh.length=0}var Ph=ua.ReactCurrentDispatcher,Qh=ua.ReactCurrentBatchConfig,Rh=0,N=null,O=null,P=null,Sh=!1,Th=!1,Uh=0,Vh=0;function Q(){throw Error(p(321));}function Wh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Xh(a,b,c,d,e,f){Rh=f;N=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Ph.current=null===a||null===a.memoizedState?Yh:Zh;a=c(d,e);if(Th){f=0;do{Th=!1;Uh=0;if(25<=f)throw Error(p(301));f+=1;P=O=null;b.updateQueue=null;Ph.current=$h;a=c(d,e)}while(Th)}Ph.current=ai;b=null!==O&&null!==O.next;Rh=0;P=O=N=null;Sh=!1;if(b)throw Error(p(300));return a}function bi(){var a=0!==Uh;Uh=0;return a}\nfunction ci(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===P?N.memoizedState=P=a:P=P.next=a;return P}function di(){if(null===O){var a=N.alternate;a=null!==a?a.memoizedState:null}else a=O.next;var b=null===P?N.memoizedState:P.next;if(null!==b)P=b,O=a;else{if(null===a)throw Error(p(310));O=a;a={memoizedState:O.memoizedState,baseState:O.baseState,baseQueue:O.baseQueue,queue:O.queue,next:null};null===P?N.memoizedState=P=a:P=P.next=a}return P}\nfunction ei(a,b){return\"function\"===typeof b?b(a):b}\nfunction fi(a){var b=di(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=O,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Rh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;N.lanes|=m;hh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(Ug=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,N.lanes|=f,hh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\nfunction gi(a){var b=di(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(Ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function hi(){}\nfunction ii(a,b){var c=N,d=di(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,Ug=!0);d=d.queue;ji(ki.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==P&&P.memoizedState.tag&1){c.flags|=2048;li(9,mi.bind(null,c,d,e,b),void 0,null);if(null===R)throw Error(p(349));0!==(Rh&30)||ni(c,b,e)}return e}function ni(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=N.updateQueue;null===b?(b={lastEffect:null,stores:null},N.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\nfunction mi(a,b,c,d){b.value=c;b.getSnapshot=d;oi(b)&&pi(a)}function ki(a,b,c){return c(function(){oi(b)&&pi(a)})}function oi(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function pi(a){var b=Zg(a,1);null!==b&&mh(b,a,1,-1)}\nfunction qi(a){var b=ci();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:ei,lastRenderedState:a};b.queue=a;a=a.dispatch=ri.bind(null,N,a);return[b.memoizedState,a]}\nfunction li(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=N.updateQueue;null===b?(b={lastEffect:null,stores:null},N.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function si(){return di().memoizedState}function ti(a,b,c,d){var e=ci();N.flags|=a;e.memoizedState=li(1|b,c,void 0,void 0===d?null:d)}\nfunction ui(a,b,c,d){var e=di();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&Wh(d,g.deps)){e.memoizedState=li(b,c,f,d);return}}N.flags|=a;e.memoizedState=li(1|b,c,f,d)}function vi(a,b){return ti(8390656,8,a,b)}function ji(a,b){return ui(2048,8,a,b)}function wi(a,b){return ui(4,2,a,b)}function xi(a,b){return ui(4,4,a,b)}\nfunction yi(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function zi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ui(4,4,yi.bind(null,b,a),c)}function Ai(){}function Bi(a,b){var c=di();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Wh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction Ci(a,b){var c=di();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Wh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function Di(a,b,c){if(0===(Rh&21))return a.baseState&&(a.baseState=!1,Ug=!0),a.memoizedState=c;He(c,b)||(c=yc(),N.lanes|=c,hh|=c,a.baseState=!0);return b}function Ei(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Qh.transition;Qh.transition={};try{a(!1),b()}finally{C=c,Qh.transition=d}}function Fi(){return di().memoizedState}\nfunction Gi(a,b,c){var d=lh(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Hi(a))Ii(b,c);else if(c=Yg(a,b,c,d),null!==c){var e=L();mh(c,a,d,e);Ji(c,b,d)}}\nfunction ri(a,b,c){var d=lh(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Hi(a))Ii(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,Xg(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=Yg(a,b,e,d);null!==c&&(e=L(),mh(c,a,d,e),Ji(c,b,d))}}\nfunction Hi(a){var b=a.alternate;return a===N||null!==b&&b===N}function Ii(a,b){Th=Sh=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Ji(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nvar ai={readContext:Vg,useCallback:Q,useContext:Q,useEffect:Q,useImperativeHandle:Q,useInsertionEffect:Q,useLayoutEffect:Q,useMemo:Q,useReducer:Q,useRef:Q,useState:Q,useDebugValue:Q,useDeferredValue:Q,useTransition:Q,useMutableSource:Q,useSyncExternalStore:Q,useId:Q,unstable_isNewReconciler:!1},Yh={readContext:Vg,useCallback:function(a,b){ci().memoizedState=[a,void 0===b?null:b];return a},useContext:Vg,useEffect:vi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ti(4194308,\n4,yi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ti(4194308,4,a,b)},useInsertionEffect:function(a,b){return ti(4,2,a,b)},useMemo:function(a,b){var c=ci();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=ci();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=Gi.bind(null,N,a);return[d.memoizedState,a]},useRef:function(a){var b=\nci();a={current:a};return b.memoizedState=a},useState:qi,useDebugValue:Ai,useDeferredValue:function(a){return ci().memoizedState=a},useTransition:function(){var a=qi(!1),b=a[0];a=Ei.bind(null,a[1]);ci().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=N,e=ci();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===R)throw Error(p(349));0!==(Rh&30)||ni(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;vi(ki.bind(null,d,\nf,a),[a]);d.flags|=2048;li(9,mi.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=ci(),b=R.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=\":\"+b+\"R\"+c;c=Uh++;0<c&&(b+=\"H\"+c.toString(32));b+=\":\"}else c=Vh++,b=\":\"+b+\"r\"+c.toString(32)+\":\";return a.memoizedState=b},unstable_isNewReconciler:!1},Zh={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:fi,useRef:si,useState:function(){return fi(ei)},\nuseDebugValue:Ai,useDeferredValue:function(a){var b=di();return Di(b,O.memoizedState,a)},useTransition:function(){var a=fi(ei)[0],b=di().memoizedState;return[a,b]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1},$h={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:gi,useRef:si,useState:function(){return gi(ei)},useDebugValue:Ai,useDeferredValue:function(a){var b=di();return null===\nO?b.memoizedState=a:Di(b,O.memoizedState,a)},useTransition:function(){var a=gi(ei)[0],b=di().memoizedState;return[a,b]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1};function Ki(a,b){try{var c=\"\",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e,digest:null}}function Li(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}\nfunction Mi(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Ni=\"function\"===typeof WeakMap?WeakMap:Map;function Oi(a,b,c){c=ch(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Pi||(Pi=!0,Qi=d);Mi(a,b)};return c}\nfunction Ri(a,b,c){c=ch(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Mi(a,b)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){Mi(a,b);\"function\"!==typeof d&&(null===Si?Si=new Set([this]):Si.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nfunction Ti(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Ni;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ui.bind(null,a,b,c),b.then(a,a))}function Vi(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\nfunction Wi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=ch(-1,1),b.tag=2,dh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Xi=ua.ReactCurrentOwner,Ug=!1;function Yi(a,b,c,d){b.child=null===a?Ch(b,null,c,d):Bh(b,a.child,c,d)}\nfunction Zi(a,b,c,d,e){c=c.render;var f=b.ref;Tg(b,e);d=Xh(a,b,c,d,f,e);c=bi();if(null!==a&&!Ug)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,$i(a,b,e);I&&c&&vg(b);b.flags|=1;Yi(a,b,d,e);return b.child}\nfunction aj(a,b,c,d,e){if(null===a){var f=c.type;if(\"function\"===typeof f&&!bj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,cj(a,b,f,d,e);a=yh(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return $i(a,b,e)}b.flags|=1;a=wh(f,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction cj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(Ug=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(Ug=!0);else return b.lanes=a.lanes,$i(a,b,e)}return dj(a,b,c,d,e)}\nfunction ej(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(fj,gj),gj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(fj,gj),gj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(fj,gj);gj|=d}else null!==\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(fj,gj),gj|=d;Yi(a,b,e,c);return b.child}function hj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function dj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);Tg(b,e);c=Xh(a,b,c,d,f,e);d=bi();if(null!==a&&!Ug)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,$i(a,b,e);I&&d&&vg(b);b.flags|=1;Yi(a,b,c,e);return b.child}\nfunction ij(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;Tg(b,e);if(null===b.stateNode)jj(a,b),ph(b,c,d),rh(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=Vg(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;q||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||\n(h!==d||k!==l)&&qh(b,g,d,l);$g=!1;var r=b.memoizedState;g.state=r;gh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||$g?(\"function\"===typeof m&&(kh(b,c,m,d),k=b.memoizedState),(h=$g||oh(b,c,h,d,r,k,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.flags|=4194308)):\n(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;bh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Lg(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=Vg(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m=\"function\"===typeof y||\"function\"===typeof g.getSnapshotBeforeUpdate)||\n\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&qh(b,g,d,k);$g=!1;r=b.memoizedState;g.state=r;gh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||$g?(\"function\"===typeof y&&(kh(b,c,y,d),n=b.memoizedState),(l=$g||oh(b,c,l,d,r,n,k)||!1)?(m||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&\ng.UNSAFE_componentWillUpdate(d,n,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\na.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return kj(a,b,c,d,f,e)}\nfunction kj(a,b,c,d,e,f){hj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),$i(a,b,f);d=b.stateNode;Xi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Bh(b,a.child,null,f),b.child=Bh(b,null,h,f)):Yi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function lj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);Ih(a,b.containerInfo)}\nfunction mj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Yi(a,b,c,d);return b.child}var nj={dehydrated:null,treeContext:null,retryLane:0};function oj(a){return{baseLanes:a,cachePool:null,transitions:null}}\nfunction pj(a,b,c){var d=b.pendingProps,e=M.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(M,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:\"$!\"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:\"hidden\",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\ng):f=qj(g,d,0,null),a=Ah(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=oj(c),b.memoizedState=nj,a):rj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return sj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:\"hidden\",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=wh(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=wh(h,f):(f=Ah(f,g,c,null),f.flags|=2);f.return=\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?oj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=nj;return d}f=a.child;a=f.sibling;d=wh(f,{mode:\"visible\",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\nfunction rj(a,b){b=qj({mode:\"visible\",children:b},a.mode,0,null);b.return=a;return a.child=b}function tj(a,b,c,d){null!==d&&Jg(d);Bh(b,a.child,null,c);a=rj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\nfunction sj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Li(Error(p(422))),tj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=qj({mode:\"visible\",children:d.children},e,0,null);f=Ah(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Bh(b,a.child,null,g);b.child.memoizedState=oj(g);b.memoizedState=nj;return f}if(0===(b.mode&1))return tj(a,b,g,null);if(\"$!\"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Li(f,d,void 0);return tj(a,b,g,d)}h=0!==(g&a.childLanes);if(Ug||h){d=R;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\n0!==e&&e!==f.retryLane&&(f.retryLane=e,Zg(a,e),mh(d,a,e,-1))}uj();d=Li(Error(p(421)));return tj(a,b,g,d)}if(\"$?\"===e.data)return b.flags|=128,b.child=a.child,b=vj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=rj(b,d.children);b.flags|=4096;return b}function wj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);Sg(a.return,b,c)}\nfunction xj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\nfunction yj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Yi(a,b,d.children,c);d=M.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&wj(a,c,b);else if(19===a.tag)wj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(M,d);if(0===(b.mode&1))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Mh(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);xj(b,!1,e,c,f);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Mh(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}xj(b,!0,c,null,f);break;case \"together\":xj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\nfunction jj(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function $i(a,b,c){null!==a&&(b.dependencies=a.dependencies);hh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=wh(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=wh(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\nfunction zj(a,b,c){switch(b.tag){case 3:lj(b);Ig();break;case 5:Kh(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:Ih(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Mg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(M,M.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return pj(a,b,c);G(M,M.current&1);a=$i(a,b,c);return null!==a?a.sibling:null}G(M,M.current&1);break;case 19:d=0!==(c&\nb.childLanes);if(0!==(a.flags&128)){if(d)return yj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(M,M.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,ej(a,b,c)}return $i(a,b,c)}var Aj,Bj,Cj,Dj;\nAj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Bj=function(){};\nCj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;Hh(Eh.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"select\":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\n(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\nc)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ea.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&D(\"scroll\",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Dj=function(a,b,c,d){c!==d&&(b.flags|=4)};\nfunction Ej(a,b){if(!I)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\nfunction Fj(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;Jh();E(Wf);E(H);Oh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Gj(zg),zg=null));Bj(a,b);S(b);return null;case 5:Lh(b);var e=Hh(Gh.current);\nc=b.type;if(null!==a&&null!=b.stateNode)Cj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=Hh(Eh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case \"dialog\":D(\"cancel\",d);D(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",d);break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],d);break;case \"source\":D(\"error\",d);break;case \"img\":case \"image\":case \"link\":D(\"error\",\nd);D(\"load\",d);break;case \"details\":D(\"toggle\",d);break;case \"input\":Za(d,f);D(\"invalid\",d);break;case \"select\":d._wrapperState={wasMultiple:!!f.multiple};D(\"invalid\",d);break;case \"textarea\":hb(d,f),D(\"invalid\",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\nh,a),e=[\"children\",\"\"+h]):ea.hasOwnProperty(g)&&null!=h&&\"onScroll\"===g&&D(\"scroll\",d)}switch(c){case \"input\":Va(d);db(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;\"http://www.w3.org/1999/xhtml\"===a&&(a=kb(c));\"http://www.w3.org/1999/xhtml\"===a?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\n\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;Aj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case \"dialog\":D(\"cancel\",a);D(\"close\",a);e=d;break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case \"source\":D(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":D(\"error\",\na);D(\"load\",a);e=d;break;case \"details\":D(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);D(\"invalid\",a);break;case \"option\":e=d;break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D(\"invalid\",a);break;case \"textarea\":hb(a,d);e=gb(a,d);D(\"invalid\",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?sb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==\nc||\"\"!==k)&&ob(a,k):\"number\"===typeof k&&ob(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ea.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&D(\"scroll\",a):null!=k&&ta(a,f,k,g))}switch(c){case \"input\":Va(a);db(a,d,!1);break;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\n!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case \"button\":case \"input\":case \"select\":case \"textarea\":d=!!d.autoFocus;break a;case \"img\":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Dj(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(p(166));c=Hh(Gh.current);Hh(Eh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(M);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Gj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(M.current&1)?0===T&&(T=3):uj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return Jh(),\nBj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return Rg(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(M);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Ej(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Mh(a);if(null!==g){b.flags|=128;Ej(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(M,M.current&1|2);return b.child}a=\na.sibling}null!==f.tail&&B()>Hj&&(b.flags|=128,d=!0,Ej(f,!1),b.lanes=4194304)}else{if(!d)if(a=Mh(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Ej(f,!0),null===f.tail&&\"hidden\"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Hj&&1073741824!==c&&(b.flags|=128,d=!0,Ej(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=M.current,G(M,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Ij(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(gj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\nfunction Jj(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return Jh(),E(Wf),E(H),Oh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Lh(b),null;case 13:E(M);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(M),null;case 4:return Jh(),null;case 10:return Rg(b.type._context),null;case 22:case 23:return Ij(),\nnull;case 24:return null;default:return null}}var Kj=!1,U=!1,Lj=\"function\"===typeof WeakSet?WeakSet:Set,V=null;function Mj(a,b){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Nj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Oj=!1;\nfunction Pj(a,b){Cf=dd;a=Me();if(Ne(a)){if(\"selectionStart\"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Lg(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent=\"\":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Oj;Oj=!1;return n}\nfunction Qj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Nj(b,c,f)}e=e.next}while(e!==d)}}function Rj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Sj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}\"function\"===typeof b?b(a):b.current=a}}\nfunction Tj(a){var b=a.alternate;null!==b&&(a.alternate=null,Tj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Uj(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Vj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Uj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}\nfunction Xj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Xj(a,b,c),a=a.sibling;null!==a;)Xj(a,b,c),a=a.sibling}var X=null,Yj=!1;function Zj(a,b,c){for(c=c.child;null!==c;)ak(a,b,c),c=c.sibling}\nfunction ak(a,b,c){if(lc&&\"function\"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Mj(c,b);case 6:var d=X,e=Yj;X=null;Zj(a,b,c);X=d;Yj=e;null!==X&&(Yj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Yj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Yj;X=c.stateNode.containerInfo;Yj=!0;\nZj(a,b,c);X=d;Yj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Nj(c,b,g):0!==(f&4)&&Nj(c,b,g));e=e.next}while(e!==d)}Zj(a,b,c);break;case 1:if(!U&&(Mj(c,b),d=c.stateNode,\"function\"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Zj(a,b,c);break;case 21:Zj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\nc.memoizedState,Zj(a,b,c),U=d):Zj(a,b,c);break;default:Zj(a,b,c)}}function bk(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Lj);b.forEach(function(b){var d=ck.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction dk(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Yj=!1;break a;case 3:X=h.stateNode.containerInfo;Yj=!0;break a;case 4:X=h.stateNode.containerInfo;Yj=!0;break a}h=h.return}if(null===X)throw Error(p(160));ak(f,g,e);X=null;Yj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)ek(b,a),b=b.sibling}\nfunction ek(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:dk(b,a);fk(a);if(d&4){try{Qj(3,a,a.return),Rj(3,a)}catch(t){W(a,a.return,t)}try{Qj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:dk(b,a);fk(a);d&512&&null!==c&&Mj(c,c.return);break;case 5:dk(b,a);fk(a);d&512&&null!==c&&Mj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,\"\")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\na.updateQueue=null;if(null!==k)try{\"input\"===h&&\"radio\"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];\"style\"===m?sb(e,q):\"dangerouslySetInnerHTML\"===m?nb(e,q):\"children\"===m?ob(e,q):ta(e,m,q,l)}switch(h){case \"input\":bb(e,f);break;case \"textarea\":ib(e,f);break;case \"select\":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:\"\",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:dk(b,a);fk(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:dk(b,a);fk(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:dk(b,a);fk(a);break;case 13:dk(b,a);fk(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\nnull!==e.alternate&&null!==e.alternate.memoizedState||(gk=B()));d&4&&bk(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,dk(b,a),U=l):dk(b,a);fk(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Qj(4,r,r.return);break;case 1:Mj(r,r.return);var n=r.stateNode;if(\"function\"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Mj(r,r.return);break;case 22:if(null!==r.memoizedState){hk(q);continue}}null!==y?(y.return=r,V=y):hk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty(\"display\")?k.display:null,h.style.display=\nrb(\"display\",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?\"\":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:dk(b,a);fk(a);d&4&&bk(a);break;case 21:break;default:dk(b,\na),fk(a)}}function fk(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Uj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,\"\"),d.flags&=-33);var f=Vj(a);Xj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Vj(a);Wj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function ik(a,b,c){V=a;jk(a,b,c)}\nfunction jk(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Kj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Kj;var l=U;Kj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?kk(e):null!==k?(k.return=g,V=k):kk(e);for(;null!==f;)V=f,jk(f,b,c),f=f.sibling;V=e;Kj=h;U=l}lk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):lk(a,b,c)}}\nfunction lk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Rj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Lg(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&ih(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\nb.child.stateNode;break;case 1:c=b.child.stateNode}ih(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case \"button\":case \"input\":case \"select\":case \"textarea\":k.autoFocus&&c.focus();break;case \"img\":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\ndefault:throw Error(p(163));}U||b.flags&512&&Sj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function hk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\nfunction kk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Rj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if(\"function\"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Sj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Sj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\nvar mk=Math.ceil,nk=ua.ReactCurrentDispatcher,ok=ua.ReactCurrentOwner,pk=ua.ReactCurrentBatchConfig,K=0,R=null,Y=null,Z=0,gj=0,fj=Uf(0),T=0,qk=null,hh=0,rk=0,sk=0,tk=null,uk=null,gk=0,Hj=Infinity,vk=null,Pi=!1,Qi=null,Si=null,wk=!1,xk=null,yk=0,zk=0,Ak=null,Bk=-1,Ck=0;function L(){return 0!==(K&6)?B():-1!==Bk?Bk:Bk=B()}\nfunction lh(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Ck&&(Ck=yc()),Ck;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function mh(a,b,c,d){if(50<zk)throw zk=0,Ak=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==R)a===R&&(0===(K&2)&&(rk|=c),4===T&&Dk(a,Z)),Ek(a,d),1===c&&0===K&&0===(b.mode&1)&&(Hj=B()+500,fg&&jg())}\nfunction Ek(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===R?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Fk.bind(null,a)):hg(Fk.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Gk(c,Hk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\nfunction Hk(a,b){Bk=-1;Ck=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Ik()&&a.callbackNode!==c)return null;var d=uc(a,a===R?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Jk(a,d);else{b=d;var e=K;K|=2;var f=Kk();if(R!==a||Z!==b)vk=null,Hj=B()+500,Lk(a,b);do try{Mk();break}catch(h){Nk(a,h)}while(1);Qg();nk.current=f;K=e;null!==Y?b=0:(R=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Ok(a,e)));if(1===b)throw c=qk,Lk(a,0),Dk(a,d),Ek(a,B()),c;if(6===b)Dk(a,d);\nelse{e=a.current.alternate;if(0===(d&30)&&!Pk(e)&&(b=Jk(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Ok(a,f))),1===b))throw c=qk,Lk(a,0),Dk(a,d),Ek(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Qk(a,uk,vk);break;case 3:Dk(a,d);if((d&130023424)===d&&(b=gk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){L();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Qk.bind(null,a,uk,vk),b);break}Qk(a,uk,vk);break;case 4:Dk(a,d);if((d&4194240)===\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*mk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Qk.bind(null,a,uk,vk),d);break}Qk(a,uk,vk);break;case 5:Qk(a,uk,vk);break;default:throw Error(p(329));}}}Ek(a,B());return a.callbackNode===c?Hk.bind(null,a):null}\nfunction Ok(a,b){var c=tk;a.current.memoizedState.isDehydrated&&(Lk(a,b).flags|=256);a=Jk(a,b);2!==a&&(b=uk,uk=c,null!==b&&Gj(b));return a}function Gj(a){null===uk?uk=a:uk.push.apply(uk,a)}\nfunction Pk(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\nfunction Dk(a,b){b&=~sk;b&=~rk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Fk(a){if(0!==(K&6))throw Error(p(327));Ik();var b=uc(a,0);if(0===(b&1))return Ek(a,B()),null;var c=Jk(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Ok(a,d))}if(1===c)throw c=qk,Lk(a,0),Dk(a,b),Ek(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Qk(a,uk,vk);Ek(a,B());return null}\nfunction Rk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Hj=B()+500,fg&&jg())}}function Sk(a){null!==xk&&0===xk.tag&&0===(K&6)&&Ik();var b=K;K|=1;var c=pk.transition,d=C;try{if(pk.transition=null,C=1,a)return a()}finally{C=d,pk.transition=c,K=b,0===(K&6)&&jg()}}function Ij(){gj=fj.current;E(fj)}\nfunction Lk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:Jh();E(Wf);E(H);Oh();break;case 5:Lh(d);break;case 4:Jh();break;case 13:E(M);break;case 19:E(M);break;case 10:Rg(d.type._context);break;case 22:case 23:Ij()}c=c.return}R=a;Y=a=wh(a.current,null);Z=gj=b;T=0;qk=null;sk=rk=hh=0;uk=tk=null;if(null!==Wg){for(b=\n0;b<Wg.length;b++)if(c=Wg[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}Wg=null}return a}\nfunction Nk(a,b){do{var c=Y;try{Qg();Ph.current=ai;if(Sh){for(var d=N.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Sh=!1}Rh=0;P=O=N=null;Th=!1;Uh=0;ok.current=null;if(null===c||null===c.return){T=1;qk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Vi(g);if(null!==y){y.flags&=-257;Wi(y,g,h,f,b);y.mode&1&&Ti(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Ti(f,l,b);uj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Vi(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Wi(J,g,h,f,b);Jg(Ki(k,h));break a}}f=k=Ki(k,h);4!==T&&(T=2);null===tk?tk=[f]:tk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\nb&=-b;f.lanes|=b;var x=Oi(f,k,b);fh(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&(\"function\"===typeof w.getDerivedStateFromError||null!==u&&\"function\"===typeof u.componentDidCatch&&(null===Si||!Si.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Ri(f,h,b);fh(f,F);break a}}f=f.return}while(null!==f)}Tk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Kk(){var a=nk.current;nk.current=ai;return null===a?ai:a}\nfunction uj(){if(0===T||3===T||2===T)T=4;null===R||0===(hh&268435455)&&0===(rk&268435455)||Dk(R,Z)}function Jk(a,b){var c=K;K|=2;var d=Kk();if(R!==a||Z!==b)vk=null,Lk(a,b);do try{Uk();break}catch(e){Nk(a,e)}while(1);Qg();K=c;nk.current=d;if(null!==Y)throw Error(p(261));R=null;Z=0;return T}function Uk(){for(;null!==Y;)Vk(Y)}function Mk(){for(;null!==Y&&!cc();)Vk(Y)}function Vk(a){var b=Wk(a.alternate,a,gj);a.memoizedProps=a.pendingProps;null===b?Tk(a):Y=b;ok.current=null}\nfunction Tk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Fj(c,b,gj),null!==c){Y=c;return}}else{c=Jj(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Qk(a,b,c){var d=C,e=pk.transition;try{pk.transition=null,C=1,Xk(a,b,c,d)}finally{pk.transition=e,C=d}return null}\nfunction Xk(a,b,c,d){do Ik();while(null!==xk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===R&&(Y=R=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||wk||(wk=!0,Gk(hc,function(){Ik();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=pk.transition;pk.transition=null;\nvar g=C;C=1;var h=K;K|=4;ok.current=null;Pj(a,c);ek(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;ik(c,a,e);dc();K=h;C=g;pk.transition=f}else a.current=c;wk&&(wk=!1,xk=a,yk=e);f=a.pendingLanes;0===f&&(Si=null);mc(c.stateNode,d);Ek(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Pi)throw Pi=!1,a=Qi,Qi=null,a;0!==(yk&1)&&0!==a.tag&&Ik();f=a.pendingLanes;0!==(f&1)?a===Ak?zk++:(zk=0,Ak=a):zk=0;jg();return null}\nfunction Ik(){if(null!==xk){var a=Dc(yk),b=pk.transition,c=C;try{pk.transition=null;C=16>a?16:a;if(null===xk)var d=!1;else{a=xk;xk=null;yk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Qj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Tj(m);if(m===\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Qj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Rj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&\"function\"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,pk.transition=b}}return!1}function Yk(a,b,c){b=Ki(c,b);b=Oi(a,b,1);a=dh(a,b,1);b=L();null!==a&&(Ac(a,1,b),Ek(a,b))}\nfunction W(a,b,c){if(3===a.tag)Yk(a,a,c);else for(;null!==b;){if(3===b.tag){Yk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if(\"function\"===typeof b.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Si||!Si.has(d))){a=Ki(c,a);a=Ri(b,a,1);b=dh(b,a,1);a=L();null!==b&&(Ac(b,1,a),Ek(b,a));break}}b=b.return}}\nfunction Ui(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=L();a.pingedLanes|=a.suspendedLanes&c;R===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-gk?Lk(a,0):sk|=c);Ek(a,b)}function Zk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=L();a=Zg(a,b);null!==a&&(Ac(a,b,c),Ek(a,c))}function vj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Zk(a,c)}\nfunction ck(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Zk(a,c)}var Wk;\nWk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)Ug=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return Ug=!1,zj(a,b,c);Ug=0!==(a.flags&131072)?!0:!1}else Ug=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;jj(a,b);a=b.pendingProps;var e=Yf(b,H.current);Tg(b,c);e=Xh(null,b,d,a,e,c);var f=bi();b.flags|=1;\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,ah(b),e.updater=nh,b.stateNode=e,e._reactInternals=b,rh(b,d,a,c),b=kj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Yi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{jj(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=$k(d);a=Lg(d,a);switch(e){case 0:b=dj(null,b,d,a,c);break a;case 1:b=ij(null,b,d,a,c);break a;case 11:b=Zi(null,b,d,a,c);break a;case 14:b=aj(null,b,d,Lg(d.type,a),c);break a}throw Error(p(306,\nd,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),dj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),ij(a,b,d,e,c);case 3:a:{lj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;bh(a,b);gh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\nf,b.memoizedState=f,b.flags&256){e=Ki(Error(p(423)),b);b=mj(a,b,d,c,e);break a}else if(d!==e){e=Ki(Error(p(424)),b);b=mj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Ch(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=$i(a,b,c);break a}Yi(a,b,d,c)}b=b.child}return b;case 5:return Kh(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\nhj(a,b),Yi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return pj(a,b,c);case 4:return Ih(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Bh(b,null,d,c):Yi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),Zi(a,b,d,e,c);case 7:return Yi(a,b,b.pendingProps,c),b.child;case 8:return Yi(a,b,b.pendingProps.children,c),b.child;case 12:return Yi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\ng=e.value;G(Mg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=$i(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=ch(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);Sg(f.return,\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);Sg(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Yi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,Tg(b,c),e=Vg(e),d=d(e),b.flags|=1,Yi(a,b,d,c),\nb.child;case 14:return d=b.type,e=Lg(d,b.pendingProps),e=Lg(d.type,e),aj(a,b,d,e,c);case 15:return cj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),jj(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,Tg(b,c),ph(b,d,e),rh(b,d,e,c),kj(null,b,d,!0,a,c);case 19:return yj(a,b,c);case 22:return ej(a,b,c)}throw Error(p(156,b.tag));};function Gk(a,b){return ac(a,b)}\nfunction al(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new al(a,b,c,d)}function bj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction $k(a){if(\"function\"===typeof a)return bj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\nfunction wh(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction yh(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)bj(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ya:return Ah(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return qj(c,e,f,b);default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,\"\"));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Ah(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function qj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function xh(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\nfunction zh(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction bl(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\nnull}function cl(a,b,c,d,e,f,g,h,k){a=new bl(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};ah(f);return a}function dl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction el(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\nfunction fl(a,b,c,d,e,f,g,h,k){a=cl(c,d,!0,a,e,f,g,h,k);a.context=el(null);c=a.current;d=L();e=lh(c);f=ch(d,e);f.callback=void 0!==b&&null!==b?b:null;dh(c,f,e);a.current.lanes=e;Ac(a,e,d);Ek(a,d);return a}function gl(a,b,c,d){var e=b.current,f=L(),g=lh(e);c=el(c);null===b.context?b.context=c:b.pendingContext=c;b=ch(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=dh(e,b,g);null!==a&&(mh(a,e,g,f),eh(a,e,g));return g}\nfunction hl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function il(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function jl(a,b){il(a,b);(a=a.alternate)&&il(a,b)}function kl(){return null}var ll=\"function\"===typeof reportError?reportError:function(a){console.error(a)};function ml(a){this._internalRoot=a}\nnl.prototype.render=ml.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));gl(a,b,null,null)};nl.prototype.unmount=ml.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Sk(function(){gl(null,a,null,null)});b[uf]=null}};function nl(a){this._internalRoot=a}\nnl.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function pl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function ql(){}\nfunction rl(a,b,c,d,e){if(e){if(\"function\"===typeof d){var f=d;d=function(){var a=hl(g);f.call(a)}}var g=fl(b,d,a,0,null,!1,!1,\"\",ql);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Sk();return g}for(;e=a.lastChild;)a.removeChild(e);if(\"function\"===typeof d){var h=d;d=function(){var a=hl(k);h.call(a)}}var k=cl(a,0,!1,null,null,!1,!1,\"\",ql);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Sk(function(){gl(b,k,c,d)});return k}\nfunction sl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if(\"function\"===typeof e){var h=e;e=function(){var a=hl(g);h.call(a)}}gl(b,g,a,e)}else g=rl(c,b,a,e,d);return hl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Ek(b,B()),0===(K&6)&&(Hj=B()+500,jg()))}break;case 13:Sk(function(){var b=Zg(a,1);if(null!==b){var c=L();mh(b,a,1,c)}}),jl(a,1)}};\nFc=function(a){if(13===a.tag){var b=Zg(a,134217728);if(null!==b){var c=L();mh(b,a,134217728,c)}jl(a,134217728)}};Gc=function(a){if(13===a.tag){var b=lh(a),c=Zg(a,b);if(null!==c){var d=L();mh(c,a,b,d)}jl(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\nyb=function(a,b,c){switch(b){case \"input\":bb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Rk;Hb=Sk;\nvar tl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Rk]},ul={findFiberByHostInstance:Wc,bundleType:0,version:\"18.2.0\",rendererPackageName:\"react-dom\"};\nvar vl={bundleType:ul.bundleType,version:ul.version,rendererPackageName:ul.rendererPackageName,rendererConfig:ul.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:ul.findFiberByHostInstance||\nkl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.2.0-next-9e3b772b8-20220608\"};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var wl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!wl.isDisabled&&wl.supportsFiber)try{kc=wl.inject(vl),lc=wl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=tl;\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!ol(b))throw Error(p(200));return dl(a,b,null,c)};exports.createRoot=function(a,b){if(!ol(a))throw Error(p(299));var c=!1,d=\"\",e=ll;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=cl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ml(b)};\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(\",\");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Sk(a)};exports.hydrate=function(a,b,c){if(!pl(b))throw Error(p(200));return sl(null,a,b,!0,c)};\nexports.hydrateRoot=function(a,b,c){if(!ol(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f=\"\",g=ll;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=fl(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\ne);return new nl(b)};exports.render=function(a,b,c){if(!pl(b))throw Error(p(200));return sl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!pl(a))throw Error(p(40));return a._reactRootContainer?(Sk(function(){sl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Rk;\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!pl(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return sl(a,b,c,!1,d)};exports.version=\"18.2.0-next-9e3b772b8-20220608\";\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _scrollLink = require('../mixins/scroll-link');\n\nvar _scrollLink2 = _interopRequireDefault(_scrollLink);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ButtonElement = function (_React$Component) {\n  _inherits(ButtonElement, _React$Component);\n\n  function ButtonElement() {\n    _classCallCheck(this, ButtonElement);\n\n    return _possibleConstructorReturn(this, (ButtonElement.__proto__ || Object.getPrototypeOf(ButtonElement)).apply(this, arguments));\n  }\n\n  _createClass(ButtonElement, [{\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement(\n        'button',\n        this.props,\n        this.props.children\n      );\n    }\n  }]);\n\n  return ButtonElement;\n}(_react2.default.Component);\n\n;\n\nexports.default = (0, _scrollLink2.default)(ButtonElement);","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _scrollElement = require('../mixins/scroll-element');\n\nvar _scrollElement2 = _interopRequireDefault(_scrollElement);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ElementWrapper = function (_React$Component) {\n  _inherits(ElementWrapper, _React$Component);\n\n  function ElementWrapper() {\n    _classCallCheck(this, ElementWrapper);\n\n    return _possibleConstructorReturn(this, (ElementWrapper.__proto__ || Object.getPrototypeOf(ElementWrapper)).apply(this, arguments));\n  }\n\n  _createClass(ElementWrapper, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      // Remove `parentBindings` and `name` from props\n      var newProps = _extends({}, this.props);\n      delete newProps.name;\n      if (newProps.parentBindings) {\n        delete newProps.parentBindings;\n      }\n\n      return _react2.default.createElement(\n        'div',\n        _extends({}, newProps, { ref: function ref(el) {\n            _this2.props.parentBindings.domNode = el;\n          } }),\n        this.props.children\n      );\n    }\n  }]);\n\n  return ElementWrapper;\n}(_react2.default.Component);\n\n;\n\nElementWrapper.propTypes = {\n  name: _propTypes2.default.string,\n  id: _propTypes2.default.string\n};\n\nexports.default = (0, _scrollElement2.default)(ElementWrapper);","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _scrollLink = require('../mixins/scroll-link');\n\nvar _scrollLink2 = _interopRequireDefault(_scrollLink);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar LinkElement = function (_React$Component) {\n  _inherits(LinkElement, _React$Component);\n\n  function LinkElement() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, LinkElement);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = LinkElement.__proto__ || Object.getPrototypeOf(LinkElement)).call.apply(_ref, [this].concat(args))), _this), _this.render = function () {\n      return _react2.default.createElement(\n        'a',\n        _this.props,\n        _this.props.children\n      );\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  return LinkElement;\n}(_react2.default.Component);\n\n;\n\nexports.default = (0, _scrollLink2.default)(LinkElement);","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Helpers = exports.ScrollElement = exports.ScrollLink = exports.animateScroll = exports.scrollSpy = exports.Events = exports.scroller = exports.Element = exports.Button = exports.Link = undefined;\n\nvar _Link = require('./components/Link.js');\n\nvar _Link2 = _interopRequireDefault(_Link);\n\nvar _Button = require('./components/Button.js');\n\nvar _Button2 = _interopRequireDefault(_Button);\n\nvar _Element = require('./components/Element.js');\n\nvar _Element2 = _interopRequireDefault(_Element);\n\nvar _scroller = require('./mixins/scroller.js');\n\nvar _scroller2 = _interopRequireDefault(_scroller);\n\nvar _scrollEvents = require('./mixins/scroll-events.js');\n\nvar _scrollEvents2 = _interopRequireDefault(_scrollEvents);\n\nvar _scrollSpy = require('./mixins/scroll-spy.js');\n\nvar _scrollSpy2 = _interopRequireDefault(_scrollSpy);\n\nvar _animateScroll = require('./mixins/animate-scroll.js');\n\nvar _animateScroll2 = _interopRequireDefault(_animateScroll);\n\nvar _scrollLink = require('./mixins/scroll-link.js');\n\nvar _scrollLink2 = _interopRequireDefault(_scrollLink);\n\nvar _scrollElement = require('./mixins/scroll-element.js');\n\nvar _scrollElement2 = _interopRequireDefault(_scrollElement);\n\nvar _Helpers = require('./mixins/Helpers.js');\n\nvar _Helpers2 = _interopRequireDefault(_Helpers);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.Link = _Link2.default;\nexports.Button = _Button2.default;\nexports.Element = _Element2.default;\nexports.scroller = _scroller2.default;\nexports.Events = _scrollEvents2.default;\nexports.scrollSpy = _scrollSpy2.default;\nexports.animateScroll = _animateScroll2.default;\nexports.ScrollLink = _scrollLink2.default;\nexports.ScrollElement = _scrollElement2.default;\nexports.Helpers = _Helpers2.default;\nexports.default = { Link: _Link2.default, Button: _Button2.default, Element: _Element2.default, scroller: _scroller2.default, Events: _scrollEvents2.default, scrollSpy: _scrollSpy2.default, animateScroll: _animateScroll2.default, ScrollLink: _scrollLink2.default, ScrollElement: _scrollElement2.default, Helpers: _Helpers2.default };","\"use strict\";\n\n/* DEPRECATED */\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar React = require('react');\nvar ReactDOM = require('react-dom');\n\nvar utils = require('./utils');\nvar scrollSpy = require('./scroll-spy');\nvar defaultScroller = require('./scroller');\nvar PropTypes = require('prop-types');\nvar scrollHash = require('./scroll-hash');\n\nvar protoTypes = {\n  to: PropTypes.string.isRequired,\n  containerId: PropTypes.string,\n  container: PropTypes.object,\n  activeClass: PropTypes.string,\n  spy: PropTypes.bool,\n  smooth: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  offset: PropTypes.number,\n  delay: PropTypes.number,\n  isDynamic: PropTypes.bool,\n  onClick: PropTypes.func,\n  duration: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n  absolute: PropTypes.bool,\n  onSetActive: PropTypes.func,\n  onSetInactive: PropTypes.func,\n  ignoreCancelEvents: PropTypes.bool,\n  hashSpy: PropTypes.bool,\n  spyThrottle: PropTypes.number\n};\n\nvar Helpers = {\n  Scroll: function Scroll(Component, customScroller) {\n\n    console.warn(\"Helpers.Scroll is deprecated since v1.7.0\");\n\n    var scroller = customScroller || defaultScroller;\n\n    var Scroll = function (_React$Component) {\n      _inherits(Scroll, _React$Component);\n\n      function Scroll(props) {\n        _classCallCheck(this, Scroll);\n\n        var _this = _possibleConstructorReturn(this, (Scroll.__proto__ || Object.getPrototypeOf(Scroll)).call(this, props));\n\n        _initialiseProps.call(_this);\n\n        _this.state = {\n          active: false\n        };\n        return _this;\n      }\n\n      _createClass(Scroll, [{\n        key: 'getScrollSpyContainer',\n        value: function getScrollSpyContainer() {\n          var containerId = this.props.containerId;\n          var container = this.props.container;\n\n          if (containerId) {\n            return document.getElementById(containerId);\n          }\n\n          if (container && container.nodeType) {\n            return container;\n          }\n\n          return document;\n        }\n      }, {\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n          if (this.props.spy || this.props.hashSpy) {\n            var scrollSpyContainer = this.getScrollSpyContainer();\n\n            if (!scrollSpy.isMounted(scrollSpyContainer)) {\n              scrollSpy.mount(scrollSpyContainer, this.props.spyThrottle);\n            }\n\n            if (this.props.hashSpy) {\n              if (!scrollHash.isMounted()) {\n                scrollHash.mount(scroller);\n              }\n              scrollHash.mapContainer(this.props.to, scrollSpyContainer);\n            }\n\n            if (this.props.spy) {\n              scrollSpy.addStateHandler(this.stateHandler);\n            }\n\n            scrollSpy.addSpyHandler(this.spyHandler, scrollSpyContainer);\n\n            this.setState({\n              container: scrollSpyContainer\n            });\n          }\n        }\n      }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n          scrollSpy.unmount(this.stateHandler, this.spyHandler);\n        }\n      }, {\n        key: 'render',\n        value: function render() {\n          var className = \"\";\n\n          if (this.state && this.state.active) {\n            className = ((this.props.className || \"\") + \" \" + (this.props.activeClass || \"active\")).trim();\n          } else {\n            className = this.props.className;\n          }\n\n          var props = _extends({}, this.props);\n\n          for (var prop in protoTypes) {\n            if (props.hasOwnProperty(prop)) {\n              delete props[prop];\n            }\n          }\n\n          props.className = className;\n          props.onClick = this.handleClick;\n\n          return React.createElement(Component, props);\n        }\n      }]);\n\n      return Scroll;\n    }(React.Component);\n\n    var _initialiseProps = function _initialiseProps() {\n      var _this2 = this;\n\n      this.scrollTo = function (to, props) {\n        scroller.scrollTo(to, _extends({}, _this2.state, props));\n      };\n\n      this.handleClick = function (event) {\n\n        /*\r\n         * give the posibility to override onClick\r\n         */\n\n        if (_this2.props.onClick) {\n          _this2.props.onClick(event);\n        }\n\n        /*\r\n         * dont bubble the navigation\r\n         */\n\n        if (event.stopPropagation) event.stopPropagation();\n        if (event.preventDefault) event.preventDefault();\n\n        /*\r\n         * do the magic!\r\n         */\n        _this2.scrollTo(_this2.props.to, _this2.props);\n      };\n\n      this.stateHandler = function () {\n        if (scroller.getActiveLink() !== _this2.props.to) {\n          if (_this2.state !== null && _this2.state.active && _this2.props.onSetInactive) {\n            _this2.props.onSetInactive();\n          }\n          _this2.setState({ active: false });\n        }\n      };\n\n      this.spyHandler = function (y) {\n\n        var scrollSpyContainer = _this2.getScrollSpyContainer();\n\n        if (scrollHash.isMounted() && !scrollHash.isInitialized()) {\n          return;\n        }\n\n        var to = _this2.props.to;\n        var element = null;\n        var elemTopBound = 0;\n        var elemBottomBound = 0;\n        var containerTop = 0;\n\n        if (scrollSpyContainer.getBoundingClientRect) {\n          var containerCords = scrollSpyContainer.getBoundingClientRect();\n          containerTop = containerCords.top;\n        }\n\n        if (!element || _this2.props.isDynamic) {\n          element = scroller.get(to);\n          if (!element) {\n            return;\n          }\n\n          var cords = element.getBoundingClientRect();\n          elemTopBound = cords.top - containerTop + y;\n          elemBottomBound = elemTopBound + cords.height;\n        }\n\n        var offsetY = y - _this2.props.offset;\n        var isInside = offsetY >= Math.floor(elemTopBound) && offsetY < Math.floor(elemBottomBound);\n        var isOutside = offsetY < Math.floor(elemTopBound) || offsetY >= Math.floor(elemBottomBound);\n        var activeLink = scroller.getActiveLink();\n\n        if (isOutside) {\n          if (to === activeLink) {\n            scroller.setActiveLink(void 0);\n          }\n\n          if (_this2.props.hashSpy && scrollHash.getHash() === to) {\n            scrollHash.changeHash();\n          }\n\n          if (_this2.props.spy && _this2.state.active) {\n            _this2.setState({ active: false });\n            _this2.props.onSetInactive && _this2.props.onSetInactive();\n          }\n\n          return scrollSpy.updateStates();\n        }\n\n        if (isInside && activeLink !== to) {\n          scroller.setActiveLink(to);\n\n          _this2.props.hashSpy && scrollHash.changeHash(to);\n\n          if (_this2.props.spy) {\n            _this2.setState({ active: true });\n            _this2.props.onSetActive && _this2.props.onSetActive(to);\n          }\n          return scrollSpy.updateStates();\n        }\n      };\n    };\n\n    ;\n\n    Scroll.propTypes = protoTypes;\n\n    Scroll.defaultProps = { offset: 0 };\n\n    return Scroll;\n  },\n  Element: function Element(Component) {\n\n    console.warn(\"Helpers.Element is deprecated since v1.7.0\");\n\n    var Element = function (_React$Component2) {\n      _inherits(Element, _React$Component2);\n\n      function Element(props) {\n        _classCallCheck(this, Element);\n\n        var _this3 = _possibleConstructorReturn(this, (Element.__proto__ || Object.getPrototypeOf(Element)).call(this, props));\n\n        _this3.childBindings = {\n          domNode: null\n        };\n        return _this3;\n      }\n\n      _createClass(Element, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n          if (typeof window === 'undefined') {\n            return false;\n          }\n          this.registerElems(this.props.name);\n        }\n      }, {\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate(prevProps) {\n          if (this.props.name !== prevProps.name) {\n            this.registerElems(this.props.name);\n          }\n        }\n      }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n          if (typeof window === 'undefined') {\n            return false;\n          }\n          defaultScroller.unregister(this.props.name);\n        }\n      }, {\n        key: 'registerElems',\n        value: function registerElems(name) {\n          defaultScroller.register(name, this.childBindings.domNode);\n        }\n      }, {\n        key: 'render',\n        value: function render() {\n          return React.createElement(Component, _extends({}, this.props, { parentBindings: this.childBindings }));\n        }\n      }]);\n\n      return Element;\n    }(React.Component);\n\n    ;\n\n    Element.propTypes = {\n      name: PropTypes.string,\n      id: PropTypes.string\n    };\n\n    return Element;\n  }\n};\n\nmodule.exports = Helpers;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _utils = require('./utils');\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _smooth = require('./smooth');\n\nvar _smooth2 = _interopRequireDefault(_smooth);\n\nvar _cancelEvents = require('./cancel-events');\n\nvar _cancelEvents2 = _interopRequireDefault(_cancelEvents);\n\nvar _scrollEvents = require('./scroll-events');\n\nvar _scrollEvents2 = _interopRequireDefault(_scrollEvents);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\r\n * Gets the easing type from the smooth prop within options.\r\n */\nvar getAnimationType = function getAnimationType(options) {\n  return _smooth2.default[options.smooth] || _smooth2.default.defaultEasing;\n};\n/*\r\n * Function helper\r\n */\nvar functionWrapper = function functionWrapper(value) {\n  return typeof value === 'function' ? value : function () {\n    return value;\n  };\n};\n/*\r\n * Wraps window properties to allow server side rendering\r\n */\nvar currentWindowProperties = function currentWindowProperties() {\n  if (typeof window !== 'undefined') {\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame;\n  }\n};\n\n/*\r\n * Helper function to never extend 60fps on the webpage.\r\n */\nvar requestAnimationFrameHelper = function () {\n  return currentWindowProperties() || function (callback, element, delay) {\n    window.setTimeout(callback, delay || 1000 / 60, new Date().getTime());\n  };\n}();\n\nvar makeData = function makeData() {\n  return {\n    currentPosition: 0,\n    startPosition: 0,\n    targetPosition: 0,\n    progress: 0,\n    duration: 0,\n    cancel: false,\n\n    target: null,\n    containerElement: null,\n    to: null,\n    start: null,\n    delta: null,\n    percent: null,\n    delayTimeout: null\n  };\n};\n\nvar currentPositionX = function currentPositionX(options) {\n  var containerElement = options.data.containerElement;\n  if (containerElement && containerElement !== document && containerElement !== document.body) {\n    return containerElement.scrollLeft;\n  } else {\n    var supportPageOffset = window.pageXOffset !== undefined;\n    var isCSS1Compat = (document.compatMode || \"\") === \"CSS1Compat\";\n    return supportPageOffset ? window.pageXOffset : isCSS1Compat ? document.documentElement.scrollLeft : document.body.scrollLeft;\n  }\n};\n\nvar currentPositionY = function currentPositionY(options) {\n  var containerElement = options.data.containerElement;\n  if (containerElement && containerElement !== document && containerElement !== document.body) {\n    return containerElement.scrollTop;\n  } else {\n    var supportPageOffset = window.pageXOffset !== undefined;\n    var isCSS1Compat = (document.compatMode || \"\") === \"CSS1Compat\";\n    return supportPageOffset ? window.pageYOffset : isCSS1Compat ? document.documentElement.scrollTop : document.body.scrollTop;\n  }\n};\n\nvar scrollContainerWidth = function scrollContainerWidth(options) {\n  var containerElement = options.data.containerElement;\n  if (containerElement && containerElement !== document && containerElement !== document.body) {\n    return containerElement.scrollWidth - containerElement.offsetWidth;\n  } else {\n    var body = document.body;\n    var html = document.documentElement;\n\n    return Math.max(body.scrollWidth, body.offsetWidth, html.clientWidth, html.scrollWidth, html.offsetWidth);\n  }\n};\n\nvar scrollContainerHeight = function scrollContainerHeight(options) {\n  var containerElement = options.data.containerElement;\n  if (containerElement && containerElement !== document && containerElement !== document.body) {\n    return containerElement.scrollHeight - containerElement.offsetHeight;\n  } else {\n    var body = document.body;\n    var html = document.documentElement;\n\n    return Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);\n  }\n};\n\nvar animateScroll = function animateScroll(easing, options, timestamp) {\n  var data = options.data;\n\n  // Cancel on specific events\n  if (!options.ignoreCancelEvents && data.cancel) {\n    if (_scrollEvents2.default.registered['end']) {\n      _scrollEvents2.default.registered['end'](data.to, data.target, data.currentPositionY);\n    }\n    return;\n  };\n\n  data.delta = Math.round(data.targetPosition - data.startPosition);\n\n  if (data.start === null) {\n    data.start = timestamp;\n  }\n\n  data.progress = timestamp - data.start;\n\n  data.percent = data.progress >= data.duration ? 1 : easing(data.progress / data.duration);\n\n  data.currentPosition = data.startPosition + Math.ceil(data.delta * data.percent);\n\n  if (data.containerElement && data.containerElement !== document && data.containerElement !== document.body) {\n    if (options.horizontal) {\n      data.containerElement.scrollLeft = data.currentPosition;\n    } else {\n      data.containerElement.scrollTop = data.currentPosition;\n    }\n  } else {\n    if (options.horizontal) {\n      window.scrollTo(data.currentPosition, 0);\n    } else {\n      window.scrollTo(0, data.currentPosition);\n    }\n  }\n\n  if (data.percent < 1) {\n    var easedAnimate = animateScroll.bind(null, easing, options);\n    requestAnimationFrameHelper.call(window, easedAnimate);\n    return;\n  }\n\n  if (_scrollEvents2.default.registered['end']) {\n    _scrollEvents2.default.registered['end'](data.to, data.target, data.currentPosition);\n  }\n};\n\nvar setContainer = function setContainer(options) {\n  options.data.containerElement = !options ? null : options.containerId ? document.getElementById(options.containerId) : options.container && options.container.nodeType ? options.container : document;\n};\n\nvar animateTopScroll = function animateTopScroll(scrollOffset, options, to, target) {\n  options.data = options.data || makeData();\n\n  window.clearTimeout(options.data.delayTimeout);\n\n  var setCancel = function setCancel() {\n    options.data.cancel = true;\n  };\n  _cancelEvents2.default.subscribe(setCancel);\n\n  setContainer(options);\n\n  options.data.start = null;\n  options.data.cancel = false;\n  options.data.startPosition = options.horizontal ? currentPositionX(options) : currentPositionY(options);\n  options.data.targetPosition = options.absolute ? scrollOffset : scrollOffset + options.data.startPosition;\n\n  if (options.data.startPosition === options.data.targetPosition) {\n    if (_scrollEvents2.default.registered['end']) {\n      _scrollEvents2.default.registered['end'](options.data.to, options.data.target, options.data.currentPosition);\n    }\n    return;\n  }\n\n  options.data.delta = Math.round(options.data.targetPosition - options.data.startPosition);\n\n  options.data.duration = functionWrapper(options.duration)(options.data.delta);\n  options.data.duration = isNaN(parseFloat(options.data.duration)) ? 1000 : parseFloat(options.data.duration);\n  options.data.to = to;\n  options.data.target = target;\n\n  var easing = getAnimationType(options);\n  var easedAnimate = animateScroll.bind(null, easing, options);\n\n  if (options && options.delay > 0) {\n    options.data.delayTimeout = window.setTimeout(function () {\n      if (_scrollEvents2.default.registered['begin']) {\n        _scrollEvents2.default.registered['begin'](options.data.to, options.data.target);\n      }\n      requestAnimationFrameHelper.call(window, easedAnimate);\n    }, options.delay);\n    return;\n  }\n\n  if (_scrollEvents2.default.registered['begin']) {\n    _scrollEvents2.default.registered['begin'](options.data.to, options.data.target);\n  }\n  requestAnimationFrameHelper.call(window, easedAnimate);\n};\n\nvar proceedOptions = function proceedOptions(options) {\n  options = _extends({}, options);\n  options.data = options.data || makeData();\n  options.absolute = true;\n  return options;\n};\n\nvar scrollToTop = function scrollToTop(options) {\n  animateTopScroll(0, proceedOptions(options));\n};\n\nvar scrollTo = function scrollTo(toPosition, options) {\n  animateTopScroll(toPosition, proceedOptions(options));\n};\n\nvar scrollToBottom = function scrollToBottom(options) {\n  options = proceedOptions(options);\n  setContainer(options);\n  animateTopScroll(options.horizontal ? scrollContainerWidth(options) : scrollContainerHeight(options), options);\n};\n\nvar scrollMore = function scrollMore(toPosition, options) {\n  options = proceedOptions(options);\n  setContainer(options);\n  var currentPosition = options.horizontal ? currentPositionX(options) : currentPositionY(options);\n  animateTopScroll(toPosition + currentPosition, options);\n};\n\nexports.default = {\n  animateTopScroll: animateTopScroll,\n  getAnimationType: getAnimationType,\n  scrollToTop: scrollToTop,\n  scrollToBottom: scrollToBottom,\n  scrollTo: scrollTo,\n  scrollMore: scrollMore\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _passiveEventListeners = require('./passive-event-listeners');\n\nvar events = ['mousedown', 'mousewheel', 'touchmove', 'keydown'];\n\nexports.default = {\n  subscribe: function subscribe(cancelEvent) {\n    return typeof document !== 'undefined' && events.forEach(function (event) {\n      return (0, _passiveEventListeners.addPassiveEventListener)(document, event, cancelEvent);\n    });\n  }\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\r\n * Tell the browser that the event listener won't prevent a scroll.\r\n * Allowing the browser to continue scrolling without having to\r\n * to wait for the listener to return.\r\n */\nvar addPassiveEventListener = exports.addPassiveEventListener = function addPassiveEventListener(target, eventName, listener) {\n  var listenerName = listener.name;\n  if (!listenerName) {\n    listenerName = eventName;\n    console.warn('Listener must be a named function.');\n  }\n\n  if (!attachedListeners.has(eventName)) attachedListeners.set(eventName, new Set());\n  var listeners = attachedListeners.get(eventName);\n  if (listeners.has(listenerName)) return;\n\n  var supportsPassiveOption = function () {\n    var supportsPassiveOption = false;\n    try {\n      var opts = Object.defineProperty({}, 'passive', {\n        get: function get() {\n          supportsPassiveOption = true;\n        }\n      });\n      window.addEventListener('test', null, opts);\n    } catch (e) {}\n    return supportsPassiveOption;\n  }();\n  target.addEventListener(eventName, listener, supportsPassiveOption ? { passive: true } : false);\n  listeners.add(listenerName);\n};\n\nvar removePassiveEventListener = exports.removePassiveEventListener = function removePassiveEventListener(target, eventName, listener) {\n  target.removeEventListener(eventName, listener);\n  attachedListeners.get(eventName).delete(listener.name || eventName);\n};\n\nvar attachedListeners = new Map();","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _scroller = require('./scroller');\n\nvar _scroller2 = _interopRequireDefault(_scroller);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nexports.default = function (Component) {\n  var Element = function (_React$Component) {\n    _inherits(Element, _React$Component);\n\n    function Element(props) {\n      _classCallCheck(this, Element);\n\n      var _this = _possibleConstructorReturn(this, (Element.__proto__ || Object.getPrototypeOf(Element)).call(this, props));\n\n      _this.childBindings = {\n        domNode: null\n      };\n      return _this;\n    }\n\n    _createClass(Element, [{\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        if (typeof window === 'undefined') {\n          return false;\n        }\n        this.registerElems(this.props.name);\n      }\n    }, {\n      key: 'componentDidUpdate',\n      value: function componentDidUpdate(prevProps) {\n        if (this.props.name !== prevProps.name) {\n          this.registerElems(this.props.name);\n        }\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        if (typeof window === 'undefined') {\n          return false;\n        }\n        _scroller2.default.unregister(this.props.name);\n      }\n    }, {\n      key: 'registerElems',\n      value: function registerElems(name) {\n        _scroller2.default.register(name, this.childBindings.domNode);\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        return _react2.default.createElement(Component, _extends({}, this.props, { parentBindings: this.childBindings }));\n      }\n    }]);\n\n    return Element;\n  }(_react2.default.Component);\n\n  ;\n\n  Element.propTypes = {\n    name: _propTypes2.default.string,\n    id: _propTypes2.default.string\n  };\n\n  return Element;\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar Events = {\n\tregistered: {},\n\tscrollEvent: {\n\t\tregister: function register(evtName, callback) {\n\t\t\tEvents.registered[evtName] = callback;\n\t\t},\n\t\tremove: function remove(evtName) {\n\t\t\tEvents.registered[evtName] = null;\n\t\t}\n\t}\n};\n\nexports.default = Events;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _passiveEventListeners = require('./passive-event-listeners');\n\nvar _utils = require('./utils');\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar scrollHash = {\n  mountFlag: false,\n  initialized: false,\n  scroller: null,\n  containers: {},\n\n  mount: function mount(scroller) {\n    this.scroller = scroller;\n\n    this.handleHashChange = this.handleHashChange.bind(this);\n    window.addEventListener('hashchange', this.handleHashChange);\n\n    this.initStateFromHash();\n    this.mountFlag = true;\n  },\n  mapContainer: function mapContainer(to, container) {\n    this.containers[to] = container;\n  },\n  isMounted: function isMounted() {\n    return this.mountFlag;\n  },\n  isInitialized: function isInitialized() {\n    return this.initialized;\n  },\n  initStateFromHash: function initStateFromHash() {\n    var _this = this;\n\n    var hash = this.getHash();\n    if (hash) {\n      window.setTimeout(function () {\n        _this.scrollTo(hash, true);\n        _this.initialized = true;\n      }, 10);\n    } else {\n      this.initialized = true;\n    }\n  },\n  scrollTo: function scrollTo(to, isInit) {\n    var scroller = this.scroller;\n    var element = scroller.get(to);\n    if (element && (isInit || to !== scroller.getActiveLink())) {\n      var container = this.containers[to] || document;\n      scroller.scrollTo(to, { container: container });\n    }\n  },\n  getHash: function getHash() {\n    return _utils2.default.getHash();\n  },\n  changeHash: function changeHash(to, saveHashHistory) {\n    if (this.isInitialized() && _utils2.default.getHash() !== to) {\n      _utils2.default.updateHash(to, saveHashHistory);\n    }\n  },\n  handleHashChange: function handleHashChange() {\n    this.scrollTo(this.getHash());\n  },\n  unmount: function unmount() {\n    this.scroller = null;\n    this.containers = null;\n    window.removeEventListener('hashchange', this.handleHashChange);\n  }\n};\n\nexports.default = scrollHash;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _scrollSpy = require('./scroll-spy');\n\nvar _scrollSpy2 = _interopRequireDefault(_scrollSpy);\n\nvar _scroller = require('./scroller');\n\nvar _scroller2 = _interopRequireDefault(_scroller);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _scrollHash = require('./scroll-hash');\n\nvar _scrollHash2 = _interopRequireDefault(_scrollHash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar protoTypes = {\n  to: _propTypes2.default.string.isRequired,\n  containerId: _propTypes2.default.string,\n  container: _propTypes2.default.object,\n  activeClass: _propTypes2.default.string,\n  activeStyle: _propTypes2.default.object,\n  spy: _propTypes2.default.bool,\n  horizontal: _propTypes2.default.bool,\n  smooth: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.string]),\n  offset: _propTypes2.default.number,\n  delay: _propTypes2.default.number,\n  isDynamic: _propTypes2.default.bool,\n  onClick: _propTypes2.default.func,\n  duration: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.func]),\n  absolute: _propTypes2.default.bool,\n  onSetActive: _propTypes2.default.func,\n  onSetInactive: _propTypes2.default.func,\n  ignoreCancelEvents: _propTypes2.default.bool,\n  hashSpy: _propTypes2.default.bool,\n  saveHashHistory: _propTypes2.default.bool,\n  spyThrottle: _propTypes2.default.number\n};\n\nexports.default = function (Component, customScroller) {\n\n  var scroller = customScroller || _scroller2.default;\n\n  var Link = function (_React$PureComponent) {\n    _inherits(Link, _React$PureComponent);\n\n    function Link(props) {\n      _classCallCheck(this, Link);\n\n      var _this = _possibleConstructorReturn(this, (Link.__proto__ || Object.getPrototypeOf(Link)).call(this, props));\n\n      _initialiseProps.call(_this);\n\n      _this.state = {\n        active: false\n      };\n      return _this;\n    }\n\n    _createClass(Link, [{\n      key: 'getScrollSpyContainer',\n      value: function getScrollSpyContainer() {\n        var containerId = this.props.containerId;\n        var container = this.props.container;\n\n        if (containerId && !container) {\n          return document.getElementById(containerId);\n        }\n\n        if (container && container.nodeType) {\n          return container;\n        }\n\n        return document;\n      }\n    }, {\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        if (this.props.spy || this.props.hashSpy) {\n          var scrollSpyContainer = this.getScrollSpyContainer();\n\n          if (!_scrollSpy2.default.isMounted(scrollSpyContainer)) {\n            _scrollSpy2.default.mount(scrollSpyContainer, this.props.spyThrottle);\n          }\n\n          if (this.props.hashSpy) {\n            if (!_scrollHash2.default.isMounted()) {\n              _scrollHash2.default.mount(scroller);\n            }\n            _scrollHash2.default.mapContainer(this.props.to, scrollSpyContainer);\n          }\n\n          _scrollSpy2.default.addSpyHandler(this.spyHandler, scrollSpyContainer);\n\n          this.setState({\n            container: scrollSpyContainer\n          });\n        }\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        _scrollSpy2.default.unmount(this.stateHandler, this.spyHandler);\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var className = \"\";\n\n        if (this.state && this.state.active) {\n          className = ((this.props.className || \"\") + \" \" + (this.props.activeClass || \"active\")).trim();\n        } else {\n          className = this.props.className;\n        }\n\n        var style = {};\n\n        if (this.state && this.state.active) {\n          style = _extends({}, this.props.style, this.props.activeStyle);\n        } else {\n          style = _extends({}, this.props.style);\n        }\n\n        var props = _extends({}, this.props);\n\n        for (var prop in protoTypes) {\n          if (props.hasOwnProperty(prop)) {\n            delete props[prop];\n          }\n        }\n\n        props.className = className;\n        props.style = style;\n        props.onClick = this.handleClick;\n\n        return _react2.default.createElement(Component, props);\n      }\n    }]);\n\n    return Link;\n  }(_react2.default.PureComponent);\n\n  var _initialiseProps = function _initialiseProps() {\n    var _this2 = this;\n\n    this.scrollTo = function (to, props) {\n      scroller.scrollTo(to, _extends({}, _this2.state, props));\n    };\n\n    this.handleClick = function (event) {\n\n      /*\r\n       * give the posibility to override onClick\r\n       */\n\n      if (_this2.props.onClick) {\n        _this2.props.onClick(event);\n      }\n\n      /*\r\n       * dont bubble the navigation\r\n       */\n\n      if (event.stopPropagation) event.stopPropagation();\n      if (event.preventDefault) event.preventDefault();\n\n      /*\r\n       * do the magic!\r\n       */\n      _this2.scrollTo(_this2.props.to, _this2.props);\n    };\n\n    this.spyHandler = function (x, y) {\n      var scrollSpyContainer = _this2.getScrollSpyContainer();\n\n      if (_scrollHash2.default.isMounted() && !_scrollHash2.default.isInitialized()) {\n        return;\n      }\n\n      var horizontal = _this2.props.horizontal;\n\n      var to = _this2.props.to;\n      var element = null;\n      var isInside = void 0;\n      var isOutside = void 0;\n\n      if (horizontal) {\n        var elemLeftBound = 0;\n        var elemRightBound = 0;\n        var containerLeft = 0;\n\n        if (scrollSpyContainer.getBoundingClientRect) {\n          var containerCords = scrollSpyContainer.getBoundingClientRect();\n          containerLeft = containerCords.left;\n        }\n\n        if (!element || _this2.props.isDynamic) {\n          element = scroller.get(to);\n          if (!element) {\n            return;\n          }\n\n          var cords = element.getBoundingClientRect();\n          elemLeftBound = cords.left - containerLeft + x;\n          elemRightBound = elemLeftBound + cords.width;\n        }\n\n        var offsetX = x - _this2.props.offset;\n        isInside = offsetX >= Math.floor(elemLeftBound) && offsetX < Math.floor(elemRightBound);\n        isOutside = offsetX < Math.floor(elemLeftBound) || offsetX >= Math.floor(elemRightBound);\n      } else {\n        var elemTopBound = 0;\n        var elemBottomBound = 0;\n        var containerTop = 0;\n\n        if (scrollSpyContainer.getBoundingClientRect) {\n          var _containerCords = scrollSpyContainer.getBoundingClientRect();\n          containerTop = _containerCords.top;\n        }\n\n        if (!element || _this2.props.isDynamic) {\n          element = scroller.get(to);\n          if (!element) {\n            return;\n          }\n\n          var _cords = element.getBoundingClientRect();\n          elemTopBound = _cords.top - containerTop + y;\n          elemBottomBound = elemTopBound + _cords.height;\n        }\n\n        var offsetY = y - _this2.props.offset;\n        isInside = offsetY >= Math.floor(elemTopBound) && offsetY < Math.floor(elemBottomBound);\n        isOutside = offsetY < Math.floor(elemTopBound) || offsetY >= Math.floor(elemBottomBound);\n      }\n\n      var activeLink = scroller.getActiveLink();\n\n      if (isOutside) {\n        if (to === activeLink) {\n          scroller.setActiveLink(void 0);\n        }\n\n        if (_this2.props.hashSpy && _scrollHash2.default.getHash() === to) {\n          var _props$saveHashHistor = _this2.props.saveHashHistory,\n              saveHashHistory = _props$saveHashHistor === undefined ? false : _props$saveHashHistor;\n\n          _scrollHash2.default.changeHash(\"\", saveHashHistory);\n        }\n\n        if (_this2.props.spy && _this2.state.active) {\n          _this2.setState({ active: false });\n          _this2.props.onSetInactive && _this2.props.onSetInactive(to, element);\n        }\n      }\n\n      if (isInside && (activeLink !== to || _this2.state.active === false)) {\n        scroller.setActiveLink(to);\n\n        var _props$saveHashHistor2 = _this2.props.saveHashHistory,\n            _saveHashHistory = _props$saveHashHistor2 === undefined ? false : _props$saveHashHistor2;\n\n        _this2.props.hashSpy && _scrollHash2.default.changeHash(to, _saveHashHistory);\n\n        if (_this2.props.spy) {\n          _this2.setState({ active: true });\n          _this2.props.onSetActive && _this2.props.onSetActive(to, element);\n        }\n      }\n    };\n  };\n\n  ;\n\n  Link.propTypes = protoTypes;\n\n  Link.defaultProps = { offset: 0 };\n\n  return Link;\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = require('lodash.throttle');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _passiveEventListeners = require('./passive-event-listeners');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// The eventHandler will execute at a rate of 15fps by default\nvar eventThrottler = function eventThrottler(eventHandler) {\n  var throttleAmount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 66;\n  return (0, _lodash2.default)(eventHandler, throttleAmount);\n};\n\nvar scrollSpy = {\n\n  spyCallbacks: [],\n  spySetState: [],\n  scrollSpyContainers: [],\n\n  mount: function mount(scrollSpyContainer, throttle) {\n    if (scrollSpyContainer) {\n      var eventHandler = eventThrottler(function (event) {\n        scrollSpy.scrollHandler(scrollSpyContainer);\n      }, throttle);\n      scrollSpy.scrollSpyContainers.push(scrollSpyContainer);\n      (0, _passiveEventListeners.addPassiveEventListener)(scrollSpyContainer, 'scroll', eventHandler);\n    }\n  },\n  isMounted: function isMounted(scrollSpyContainer) {\n    return scrollSpy.scrollSpyContainers.indexOf(scrollSpyContainer) !== -1;\n  },\n  currentPositionX: function currentPositionX(scrollSpyContainer) {\n    if (scrollSpyContainer === document) {\n      var supportPageOffset = window.pageYOffset !== undefined;\n      var isCSS1Compat = (document.compatMode || \"\") === \"CSS1Compat\";\n      return supportPageOffset ? window.pageXOffset : isCSS1Compat ? document.documentElement.scrollLeft : document.body.scrollLeft;\n    } else {\n      return scrollSpyContainer.scrollLeft;\n    }\n  },\n  currentPositionY: function currentPositionY(scrollSpyContainer) {\n    if (scrollSpyContainer === document) {\n      var supportPageOffset = window.pageXOffset !== undefined;\n      var isCSS1Compat = (document.compatMode || \"\") === \"CSS1Compat\";\n      return supportPageOffset ? window.pageYOffset : isCSS1Compat ? document.documentElement.scrollTop : document.body.scrollTop;\n    } else {\n      return scrollSpyContainer.scrollTop;\n    }\n  },\n  scrollHandler: function scrollHandler(scrollSpyContainer) {\n    var callbacks = scrollSpy.scrollSpyContainers[scrollSpy.scrollSpyContainers.indexOf(scrollSpyContainer)].spyCallbacks || [];\n    callbacks.forEach(function (c) {\n      return c(scrollSpy.currentPositionX(scrollSpyContainer), scrollSpy.currentPositionY(scrollSpyContainer));\n    });\n  },\n  addStateHandler: function addStateHandler(handler) {\n    scrollSpy.spySetState.push(handler);\n  },\n  addSpyHandler: function addSpyHandler(handler, scrollSpyContainer) {\n    var container = scrollSpy.scrollSpyContainers[scrollSpy.scrollSpyContainers.indexOf(scrollSpyContainer)];\n\n    if (!container.spyCallbacks) {\n      container.spyCallbacks = [];\n    }\n\n    container.spyCallbacks.push(handler);\n\n    handler(scrollSpy.currentPositionX(scrollSpyContainer), scrollSpy.currentPositionY(scrollSpyContainer));\n  },\n  updateStates: function updateStates() {\n    scrollSpy.spySetState.forEach(function (s) {\n      return s();\n    });\n  },\n  unmount: function unmount(stateHandler, spyHandler) {\n    scrollSpy.scrollSpyContainers.forEach(function (c) {\n      return c.spyCallbacks && c.spyCallbacks.length && c.spyCallbacks.indexOf(spyHandler) > -1 && c.spyCallbacks.splice(c.spyCallbacks.indexOf(spyHandler), 1);\n    });\n\n    if (scrollSpy.spySetState && scrollSpy.spySetState.length && scrollSpy.spySetState.indexOf(stateHandler) > -1) {\n      scrollSpy.spySetState.splice(scrollSpy.spySetState.indexOf(stateHandler), 1);\n    }\n\n    document.removeEventListener('scroll', scrollSpy.scrollHandler);\n  },\n\n\n  update: function update() {\n    return scrollSpy.scrollSpyContainers.forEach(function (c) {\n      return scrollSpy.scrollHandler(c);\n    });\n  }\n};\n\nexports.default = scrollSpy;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _utils = require('./utils');\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _animateScroll = require('./animate-scroll');\n\nvar _animateScroll2 = _interopRequireDefault(_animateScroll);\n\nvar _scrollEvents = require('./scroll-events');\n\nvar _scrollEvents2 = _interopRequireDefault(_scrollEvents);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar __mapped = {};\nvar __activeLink = void 0;\n\nexports.default = {\n\n  unmount: function unmount() {\n    __mapped = {};\n  },\n\n  register: function register(name, element) {\n    __mapped[name] = element;\n  },\n\n  unregister: function unregister(name) {\n    delete __mapped[name];\n  },\n\n  get: function get(name) {\n    return __mapped[name] || document.getElementById(name) || document.getElementsByName(name)[0] || document.getElementsByClassName(name)[0];\n  },\n\n  setActiveLink: function setActiveLink(link) {\n    return __activeLink = link;\n  },\n\n  getActiveLink: function getActiveLink() {\n    return __activeLink;\n  },\n\n  scrollTo: function scrollTo(to, props) {\n\n    var target = this.get(to);\n\n    if (!target) {\n      console.warn(\"target Element not found\");\n      return;\n    }\n\n    props = _extends({}, props, { absolute: false });\n\n    var containerId = props.containerId;\n    var container = props.container;\n\n    var containerElement = void 0;\n    if (containerId) {\n      containerElement = document.getElementById(containerId);\n    } else if (container && container.nodeType) {\n      containerElement = container;\n    } else {\n      containerElement = document;\n    }\n\n    props.absolute = true;\n\n    var horizontal = props.horizontal;\n    var scrollOffset = _utils2.default.scrollOffset(containerElement, target, horizontal) + (props.offset || 0);\n\n    /*\r\n     * if animate is not provided just scroll into the view\r\n     */\n    if (!props.smooth) {\n      if (_scrollEvents2.default.registered['begin']) {\n        _scrollEvents2.default.registered['begin'](to, target);\n      }\n\n      if (containerElement === document) {\n        if (props.horizontal) {\n          window.scrollTo(scrollOffset, 0);\n        } else {\n          window.scrollTo(0, scrollOffset);\n        }\n      } else {\n        containerElement.scrollTop = scrollOffset;\n      }\n\n      if (_scrollEvents2.default.registered['end']) {\n        _scrollEvents2.default.registered['end'](to, target);\n      }\n\n      return;\n    }\n\n    /*\r\n     * Animate scrolling\r\n     */\n\n    _animateScroll2.default.animateTopScroll(scrollOffset, props, to, target);\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  /*\r\n   * https://github.com/oblador/angular-scroll (duScrollDefaultEasing)\r\n   */\n  defaultEasing: function defaultEasing(x) {\n    if (x < 0.5) {\n      return Math.pow(x * 2, 2) / 2;\n    }\n    return 1 - Math.pow((1 - x) * 2, 2) / 2;\n  },\n  /*\r\n   * https://gist.github.com/gre/1650294\r\n   */\n  // no easing, no acceleration\n  linear: function linear(x) {\n    return x;\n  },\n  // accelerating from zero velocity\n  easeInQuad: function easeInQuad(x) {\n    return x * x;\n  },\n  // decelerating to zero velocity\n  easeOutQuad: function easeOutQuad(x) {\n    return x * (2 - x);\n  },\n  // acceleration until halfway, then deceleration\n  easeInOutQuad: function easeInOutQuad(x) {\n    return x < .5 ? 2 * x * x : -1 + (4 - 2 * x) * x;\n  },\n  // accelerating from zero velocity \n  easeInCubic: function easeInCubic(x) {\n    return x * x * x;\n  },\n  // decelerating to zero velocity π\n  easeOutCubic: function easeOutCubic(x) {\n    return --x * x * x + 1;\n  },\n  // acceleration until halfway, then deceleration \n  easeInOutCubic: function easeInOutCubic(x) {\n    return x < .5 ? 4 * x * x * x : (x - 1) * (2 * x - 2) * (2 * x - 2) + 1;\n  },\n  // accelerating from zero velocity \n  easeInQuart: function easeInQuart(x) {\n    return x * x * x * x;\n  },\n  // decelerating to zero velocity \n  easeOutQuart: function easeOutQuart(x) {\n    return 1 - --x * x * x * x;\n  },\n  // acceleration until halfway, then deceleration\n  easeInOutQuart: function easeInOutQuart(x) {\n    return x < .5 ? 8 * x * x * x * x : 1 - 8 * --x * x * x * x;\n  },\n  // accelerating from zero velocity\n  easeInQuint: function easeInQuint(x) {\n    return x * x * x * x * x;\n  },\n  // decelerating to zero velocity\n  easeOutQuint: function easeOutQuint(x) {\n    return 1 + --x * x * x * x * x;\n  },\n  // acceleration until halfway, then deceleration \n  easeInOutQuint: function easeInOutQuint(x) {\n    return x < .5 ? 16 * x * x * x * x * x : 1 + 16 * --x * x * x * x * x;\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar updateHash = function updateHash(hash, historyUpdate) {\n  var hashVal = hash.indexOf(\"#\") === 0 ? hash.substring(1) : hash;\n  var hashToUpdate = hashVal ? \"#\" + hashVal : \"\";\n  var curLoc = window && window.location;\n  var urlToPush = hashToUpdate ? curLoc.pathname + curLoc.search + hashToUpdate : curLoc.pathname + curLoc.search;\n  historyUpdate ? history.pushState(history.state, \"\", urlToPush) : history.replaceState(history.state, \"\", urlToPush);\n};\n\nvar getHash = function getHash() {\n  return window.location.hash.replace(/^#/, \"\");\n};\n\nvar filterElementInContainer = function filterElementInContainer(container) {\n  return function (element) {\n    return container.contains ? container != element && container.contains(element) : !!(container.compareDocumentPosition(element) & 16);\n  };\n};\n\nvar isPositioned = function isPositioned(element) {\n  return getComputedStyle(element).position !== \"static\";\n};\n\nvar getElementOffsetInfoUntil = function getElementOffsetInfoUntil(element, predicate) {\n  var offsetTop = element.offsetTop;\n  var currentOffsetParent = element.offsetParent;\n\n  while (currentOffsetParent && !predicate(currentOffsetParent)) {\n    offsetTop += currentOffsetParent.offsetTop;\n    currentOffsetParent = currentOffsetParent.offsetParent;\n  }\n\n  return { offsetTop: offsetTop, offsetParent: currentOffsetParent };\n};\n\nvar scrollOffset = function scrollOffset(c, t, horizontal) {\n  if (horizontal) {\n    return c === document ? t.getBoundingClientRect().left + (window.scrollX || window.pageXOffset) : getComputedStyle(c).position !== \"static\" ? t.offsetLeft : t.offsetLeft - c.offsetLeft;\n  } else {\n    if (c === document) {\n      return t.getBoundingClientRect().top + (window.scrollY || window.pageYOffset);\n    }\n\n    // The offsetParent of an element, according to MDN, is its nearest positioned\n    // (an element whose position is anything other than static) ancestor. The offsetTop\n    // of an element is taken with respect to its offsetParent which may not neccessarily\n    // be its parentElement except the parent itself is positioned.\n\n    // So if containerElement is positioned, then it must be an offsetParent somewhere\n    // If it happens that targetElement is a descendant of the containerElement, and there\n    // is not intermediate positioned element between the two of them, i.e.\n    // targetElement\"s offsetParent is the same as the containerElement, then the\n    // distance between the two will be the offsetTop of the targetElement.\n    // If, on the other hand, there are intermediate positioned elements between the\n    // two entities, the distance between the targetElement and the containerElement\n    // will be the accumulation of the offsetTop of the element and that of its\n    // subsequent offsetParent until the containerElement is reached, since it\n    // will also be an offsetParent at some point due to the fact that it is positioned.\n\n    // If the containerElement is not positioned, then it can\"t be an offsetParent,\n    // which means that the offsetTop of the targetElement would not be with respect to it.\n    // However, if the two of them happen to have the same offsetParent, then\n    // the distance between them will be the difference between their offsetTop\n    // since they are both taken with respect to the same entity.\n    // The last resort would be to accumulate their offsetTop until a common\n    // offsetParent is reached (usually the document) and taking the difference\n    // between the accumulated offsetTops\n\n    if (isPositioned(c)) {\n      if (t.offsetParent !== c) {\n        var isContainerElementOrDocument = function isContainerElementOrDocument(e) {\n          return e === c || e === document;\n        };\n\n        var _getElementOffsetInfo = getElementOffsetInfoUntil(t, isContainerElementOrDocument),\n            offsetTop = _getElementOffsetInfo.offsetTop,\n            offsetParent = _getElementOffsetInfo.offsetParent;\n\n        if (offsetParent !== c) {\n          throw new Error(\"Seems containerElement is not an ancestor of the Element\");\n        }\n\n        return offsetTop;\n      }\n\n      return t.offsetTop;\n    }\n\n    if (t.offsetParent === c.offsetParent) {\n      return t.offsetTop - c.offsetTop;\n    }\n\n    var isDocument = function isDocument(e) {\n      return e === document;\n    };\n    return getElementOffsetInfoUntil(t, isDocument).offsetTop - getElementOffsetInfoUntil(c, isDocument).offsetTop;\n  }\n};\n\nexports.default = {\n  updateHash: updateHash,\n  getHash: getHash,\n  filterElementInContainer: filterElementInContainer,\n  scrollOffset: scrollOffset\n};","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};exports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;\nexports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=function(){throw Error(\"act(...) is not supported in production builds of React.\");};\nexports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};exports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};\nexports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};exports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};\nexports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.2.0\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"937969f4\" + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"portu-go-react-app:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkportu_go_react_app\"] = self[\"webpackChunkportu_go_react_app\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","import React, { useState, useEffect } from 'react';\r\nimport './Footer.scss';\r\n\r\nconst Footer = () => {\r\n    const [facebookIcon, setFacebookIcon] = useState('images/ic-facebook-black-btn.svg');\r\n    const [linkedInIcon, setLinkedInIcon] = useState('images/ic-linked-in-black-btn.svg');\r\n    const [instagramIcon, setInstagramIcon] = useState('images/ic-instagram-black-btn.svg');\r\n    const [twitterIcon, setTwitterIcon] = useState('images/ic-x-twitter-black-btn.svg');\r\n    const [discordIcon, setDiscordIcon] = useState('images/ic-discord-black-btn.svg');\r\n\r\n    useEffect(() => {\r\n        const handleIcons = () => {\r\n            if (window.innerWidth > 768) {\r\n                setFacebookIcon('images/ic-facebook-alt-btn.svg');\r\n                setLinkedInIcon('images/ic-linked-in-alt-btn.svg');\r\n                setInstagramIcon('images/ic-instagram-alt-btn.svg');\r\n                setTwitterIcon('images/ic-x-twitter-alt-btn.svg');\r\n                setDiscordIcon('images/ic-discord-alt-btn.svg');\r\n            } else {\r\n                // Set the icons for smaller screens if needed\r\n                setFacebookIcon('images/ic-facebook-black-btn.svg');\r\n                setLinkedInIcon('images/ic-linked-in-black-btn.svg');\r\n                setInstagramIcon('images/ic-instagram-black-btn.svg');\r\n                setTwitterIcon('images/ic-x-twitter-black-btn.svg');\r\n                setDiscordIcon('images/ic-discord-black-btn.svg');\r\n            }\r\n        };\r\n\r\n        // Add event listener\r\n        window.addEventListener('resize', handleIcons);\r\n\r\n        // Call the resize handler initially to set the correct icons\r\n        handleIcons();\r\n\r\n        // Cleanup the event listener\r\n        return () => window.removeEventListener('resize', handleIcons);\r\n    }, []);\r\n\r\n    return(\r\n        <footer>\r\n            <div className='footer__div-1'>\r\n                <div className='footer__div-1__social-medias'>\r\n                    <a href='.'><img src={facebookIcon} alt='Ícone do Facebook' /></a>\r\n                    <a href='.'><img src={linkedInIcon} alt='Ícone do LinkedIn' /></a>\r\n                    <a href='.'><img src={instagramIcon} alt='Ícone do Instagram' /></a>\r\n                    <a href='.'><img src={twitterIcon} alt='Ícone do Twitter' /></a>\r\n                    <a href='.'><img src={discordIcon} alt='Ícone do Discord' /></a>\r\n                </div>\r\n                <div className='footer__div-1__navigation-map'>\r\n                    <ul>\r\n                        <li>PortuGO</li>\r\n                        <li><a href='.'>Boas-vindas</a></li>\r\n                        <li><a href='.'>Quem somos nós</a></li>\r\n                        <li><a href='.'>Benefícios para condutores</a></li>\r\n                        <li><a href='.'>Nossos resultados</a></li>\r\n                        <li><a href='.'>Onde operamos</a></li>\r\n                        <li><a href='.'>Instale nossa app</a></li>\r\n                        <li><a href='.'>Contacte-nos</a></li>\r\n                    </ul>\r\n                    <ul>\r\n                        <li>Utilizador</li>\r\n                        <li><a href='.'>Iniciar sessão</a></li>\r\n                        <li><a href='.'>Termos & Condições</a></li>\r\n                        <li><a href='.'>Privacidade</a></li>\r\n                        <li><a href='.'>Cookies</a></li>\r\n                    </ul>\r\n                </div>\r\n                <div className='footer__div-1__btn-container'>\r\n                    <a href=\"https://www.apple.com/app-store/\">\r\n                        <img src=\"./images/vecteezy_app-store-download-button-in-black-colors-download-on-the_12871375_299.png\" alt=\"Botão para a App Store\"/>\r\n                    </a>\r\n                    <a href=\"https://play.google.com/store/games?hl=en&gl=US&pli=1\">\r\n                        <img src=\"./images/vecteezy_google-play-store-download-button-in-black-colors-download_12871365_180.png\" alt=\"Botão para a Play Store\"/>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n            <div className='footer__div-2'>\r\n                <div className='footer__div-2__logos-container'>\r\n                    <img src='images/logo-portu-go-black.png' alt='Logo da PortuGO' />\r\n                    <img src='images/logo-blue-topper-technologies-black.png' alt='Logo da Blue Topper Technologies' />\r\n                </div>\r\n                <div className='footer__div-2__copyright-text'>\r\n                    <p>Copyright © 2023 Leonardo Coelho</p>\r\n                    <p>Todos os direitos reservados</p>\r\n                </div>\r\n                <img className='footer__div-2__copyright-img' src='images/cc_by-nc-nd.svg.png' alt='Creative Commons: BY/NC/ND' />\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport { Link } from 'react-scroll';\r\nimport './NavMenu.scss';\r\n\r\n// Link icons:\r\nconst icSection1 = <svg className='nav-menu__links__link__icon' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\"><path d=\"M240-200h120v-240h240v240h120v-360L480-740 240-560v360Zm-80 80v-480l320-240 320 240v480H520v-240h-80v240H160Zm320-350Z\"/></svg>;\r\nconst icSection2 = <svg className='nav-menu__links__link__icon' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\"><path d=\"M478-240q21 0 35.5-14.5T528-290q0-21-14.5-35.5T478-340q-21 0-35.5 14.5T428-290q0 21 14.5 35.5T478-240Zm-36-154h74q0-33 7.5-52t42.5-52q26-26 41-49.5t15-56.5q0-56-41-86t-97-30q-57 0-92.5 30T342-618l66 26q5-18 22.5-39t53.5-21q32 0 48 17.5t16 38.5q0 20-12 37.5T506-526q-44 39-54 59t-10 73Zm38 314q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z\"/></svg>;\r\nconst icSection3 = <svg className='nav-menu__links__link__icon' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\"><path d=\"M640-520q17 0 28.5-11.5T680-560q0-17-11.5-28.5T640-600q-17 0-28.5 11.5T600-560q0 17 11.5 28.5T640-520Zm-320-80h200v-80H320v80ZM180-120q-34-114-67-227.5T80-580q0-92 64-156t156-64h200q29-38 70.5-59t89.5-21q25 0 42.5 17.5T720-820q0 6-1.5 12t-3.5 11q-4 11-7.5 22.5T702-751l91 91h87v279l-113 37-67 224H480v-80h-80v80H180Zm60-80h80v-80h240v80h80l62-206 98-33v-141h-40L620-720q0-20 2.5-38.5T630-796q-29 8-51 27.5T547-720H300q-58 0-99 41t-41 99q0 98 27 191.5T240-200Zm240-298Z\"/></svg>;\r\nconst icSection4 = <svg className='nav-menu__links__link__icon' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\"><path d=\"M280-120v-80h160v-124q-49-11-87.5-41.5T296-442q-75-9-125.5-65.5T120-640v-40q0-33 23.5-56.5T200-760h80v-80h400v80h80q33 0 56.5 23.5T840-680v40q0 76-50.5 132.5T664-442q-18 46-56.5 76.5T520-324v124h160v80H280Zm0-408v-152h-80v40q0 38 22 68.5t58 43.5Zm200 128q50 0 85-35t35-85v-240H360v240q0 50 35 85t85 35Zm200-128q36-13 58-43.5t22-68.5v-40h-80v152Zm-200-52Z\"/></svg>;\r\nconst icSection5 = <svg className='nav-menu__links__link__icon' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\"><path d=\"M200-120v-680h360l16 80h224v400H520l-16-80H280v280h-80Zm300-440Zm86 160h134v-240H510l-16-80H280v240h290l16 80Z\"/></svg>;\r\nconst icSection6 = <svg className='nav-menu__links__link__icon' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\"><path d=\"M480-320 280-520l56-58 104 104v-326h80v326l104-104 56 58-200 200ZM240-160q-33 0-56.5-23.5T160-240v-120h80v120h480v-120h80v120q0 33-23.5 56.5T720-160H240Z\"/></svg>;\r\nconst icSection7 = <svg className='nav-menu__links__link__icon' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\"><path d=\"M440-120v-80h320v-284q0-117-81.5-198.5T480-764q-117 0-198.5 81.5T200-484v244h-40q-33 0-56.5-23.5T80-320v-80q0-21 10.5-39.5T120-469l3-53q8-68 39.5-126t79-101q47.5-43 109-67T480-840q68 0 129 24t109 66.5Q766-707 797-649t40 126l3 52q19 9 29.5 27t10.5 38v92q0 20-10.5 38T840-249v49q0 33-23.5 56.5T760-120H440Zm-80-280q-17 0-28.5-11.5T320-440q0-17 11.5-28.5T360-480q17 0 28.5 11.5T400-440q0 17-11.5 28.5T360-400Zm240 0q-17 0-28.5-11.5T560-440q0-17 11.5-28.5T600-480q17 0 28.5 11.5T640-440q0 17-11.5 28.5T600-400Zm-359-62q-7-106 64-182t177-76q89 0 156.5 56.5T720-519q-91-1-167.5-49T435-698q-16 80-67.5 142.5T241-462Z\"/></svg>;\r\n\r\n// Guest user icon:\r\nconst guestUserIcon = <svg className='nav-menu__user-container__user-icon' viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 37.6667C29.757 37.6667 37.6666 29.757 37.6666 20C37.6666 10.243 29.757 2.33334 20 2.33334C10.243 2.33334 2.33331 10.243 2.33331 20C2.33331 29.757 10.243 37.6667 20 37.6667Z\" fill=\"#D9D9D9\"/><path d=\"M33 31C32.0464 32.7553 30.2847 34.2745 27.957 35.3488C25.6292 36.4232 22.8495 37 20 37C17.1505 37 14.3708 36.4232 12.043 35.3488C9.71526 34.2745 7.95356 32.7553 7 31\" fill=\"#868E96\"/><path d=\"M7.12122 32.0933C8.06588 29.4331 9.81115 27.1307 12.1172 25.5024C14.4233 23.8742 17.177 23 20 23C22.8229 23 25.5767 23.8742 27.8827 25.5024C30.1888 27.1307 31.9341 29.4331 32.8787 32.0933\" fill=\"#868E96\"/><path d=\"M20 23C24.2342 23 27.6666 19.5675 27.6666 15.3333C27.6666 11.0991 24.2342 7.66666 20 7.66666C15.7658 7.66666 12.3333 11.0991 12.3333 15.3333C12.3333 19.5675 15.7658 23 20 23Z\" fill=\"#868E96\"/></svg>;\r\n\r\n\r\n\r\n\r\nconst NavMenu = () => {\r\n    return(\r\n        <>\r\n            <div className='darken-bg' />\r\n            <div className='nav-menu'>\r\n                <div className='nav-menu__user-container'>\r\n                    {guestUserIcon}\r\n                    <p className='nav-menu__user-container__user-text'>Clique para cadastrar-se</p>\r\n                </div>\r\n                <div className='nav-menu__links'>\r\n                    <Link className='nav-menu__links__link' to=\"section-1\">{icSection1} Boas-vindas</Link>\r\n                    <Link className='nav-menu__links__link' to=\"section-2\">{icSection2} Quem somos nós</Link>\r\n                    <Link className='nav-menu__links__link' to=\"section-3\">{icSection3} Benefícios para condutores</Link>\r\n                    <Link className='nav-menu__links__link' to=\"section-4\">{icSection4} Nossos resultados</Link>\r\n                    <Link className='nav-menu__links__link' to=\"section-5\">{icSection5} Onde operamos</Link>\r\n                    <Link className='nav-menu__links__link' to=\"section-6\">{icSection6} Instale nossa app</Link>\r\n                    <Link className='nav-menu__links__link' to=\"section-7\">{icSection7} Contacte-nos</Link>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NavMenu;","import React, { useState } from 'react';\r\nimport NavMenu from '../NavMenu/NavMenu.js';\r\nimport './BurguerMenu.scss';\r\n\r\nconst BurguerMenu = ({ color, onToggle }) => {\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const handleMenuToggle = () => {\r\n        // Logic to determine if the menu is opened or closed\r\n        onToggle(!isOpen); // Call the callback with the menu status\r\n    }\r\n\r\n    const setOpenedState = () => {\r\n        setIsOpen(!isOpen);\r\n        handleMenuToggle();\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div className={isOpen ? 'menu-button-open' : 'menu-button'} onClick={setOpenedState}>\r\n                <div className={'menu-button-burguer ' + color} />\r\n                <div className={'menu-button-burguer ' + color} />\r\n                <div className={'menu-button-burguer ' + color} />\r\n            </div>\r\n            {isOpen && <div className='bg-circle'/>}\r\n            {isOpen && <NavMenu className='nav-menu' />}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BurguerMenu;","import './Button.scss';\r\n\r\nconst Button = ({ styleType, text, icon, link }) => {\r\n    return(\r\n        <button href={link} className={`btn ${styleType}`}>\r\n            {icon && <img className='btn__icon' src={icon} alt='Ícone do botão'/>}\r\n            <p className='btn__text'>{text}</p>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button;","import './Header.scss';\r\nimport BurguerMenu from '../BurguerMenu/BurguerMenu.js';\r\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\r\nimport Button from '../Button/Button.js';\r\n\r\nconst Header = () => {\r\n    const [isMenuOpen, setIsMenuOpen] = useState(false); // Check if the burguer menu is open or closed\r\n    const headerRef = useRef();\r\n    const [lastScrollY, setLastScrollY] = useState(window.scrollY);\r\n    const [cumulativeUpScroll, setCumulativeUpScroll] = useState(0);\r\n    const scrollThreshold = 70; // Amount of upward scroll needed for the header to appear\r\n    const [logo, setLogo] = useState('./images/logo-portu-go-black.png');\r\n    const [headerStyle, setHeaderStyle] = useState('header header-top');\r\n    const [hamburguerColor, setHamburguerColor] = useState('menu-button-burguer--black');\r\n    \r\n    const toggleBodyScroll = useCallback((shouldScroll) => {\r\n        if (shouldScroll) {\r\n            headerRef.current.style.top = `-${headerRef.current.offsetHeight}px`;\r\n            document.body.style.overflow = 'visible'; // Re-enable scrolling\r\n        } else {\r\n            document.body.style.overflow = 'hidden'; // Disable scrolling\r\n        }\r\n    }, []);\r\n\r\n    const toggleMenu = useCallback((isOpen) => {\r\n        setIsMenuOpen(isOpen); // Callback to update the menu state\r\n        toggleBodyScroll(!isOpen); // Disable scrolling when menu is open, enable when closed\r\n    }, [toggleBodyScroll]);\r\n\r\n    const handleScroll = useCallback(() => {\r\n        const currentScrollY = window.scrollY;\r\n\r\n        // Only enables the responsive scrolling when navigation menu is off\r\n        if (!isMenuOpen) { \r\n            if (currentScrollY > lastScrollY) {\r\n                // Scrolling down\r\n                headerRef.current.style.top = `-${headerRef.current.offsetHeight}px`;\r\n                setCumulativeUpScroll(0); // Reset cumulative upward scroll\r\n                setLogo('./images/logo-portu-go-white.png');\r\n                setHeaderStyle('header header-scrolling');\r\n                setHamburguerColor('menu-button-burguer--white');\r\n            } else if(currentScrollY <= 0) {\r\n                setLogo('./images/logo-portu-go-black.png');\r\n                setHeaderStyle('header header-top');\r\n                setHamburguerColor('menu-button-burguer--black');\r\n            } else {\r\n                // Scrolling up\r\n                const upScroll = lastScrollY - currentScrollY;\r\n                setCumulativeUpScroll(prev => prev + upScroll);\r\n                if (cumulativeUpScroll > scrollThreshold) {\r\n                    headerRef.current.style.top = '0px';\r\n                }\r\n            }\r\n        }\r\n        setLastScrollY(currentScrollY);\r\n    }, [isMenuOpen, lastScrollY, cumulativeUpScroll]);\r\n  \r\n    useEffect(() => {\r\n            window.addEventListener('scroll', handleScroll, { passive: true });\r\n    \r\n            return () => {\r\n                window.removeEventListener('scroll', handleScroll);\r\n            };\r\n    },  [handleScroll])\r\n\r\n    return (\r\n        <header className={headerStyle} ref={headerRef}>\r\n            <img className='header__logo' src={logo} alt='Logo da PortuGO' />\r\n            <div className='header__btns-container'>\r\n                <Button styleType={'btn--style-2'} text={'Inscreva-se'} icon={''}/>\r\n                <BurguerMenu className='header__btns-container__burguer-menu' color={hamburguerColor} onToggle={toggleMenu} />\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import './Section1.scss';\r\nimport React from 'react';\r\n\r\nconst Section1 = ({ title }) => {\r\n    return(\r\n        <section className=\"section-1\">\r\n            <h1 className='section-1__title'>{title}</h1>\r\n            <p className='section-1__text'>\r\n                <span>PortuGO</span> é uma aplicação de transporte urbano adaptada para suas necessidades. \r\n                Basta pedir um veículo em nossa app, que enviaremos um motorista bem-avaliado para atender ao seu chamado. \r\n            </p>\r\n            <div className='section-1__btn-container'>\r\n                <a href=\"https://www.apple.com/app-store/\">\r\n                    <img src=\"./images/vecteezy_app-store-download-button-in-white-colors-download-on-the_12871374_558.png\" alt=\"Botão para a App Store\"/>\r\n                </a>\r\n                <a href=\"https://play.google.com/store/games?hl=en&gl=US&pli=1\">\r\n                    <img src=\"./images/vecteezy_google-play-store-download-button-in-white-colors-download_12871364_282.png\" alt=\"Botão para a Play Store\"/>\r\n                </a>\r\n            </div>\r\n        </section>  \r\n    )\r\n}\r\n\r\nexport default Section1;","import React from 'react';\r\nimport Button from '../Button/Button.js'\r\nimport './Section2.scss';\r\n\r\nconst Section2 = ({title, imgSrc, imgName}) => {\r\n\r\n    return(\r\n        <section className=\"section-2\">\r\n            <div className='section-2__texts'>\r\n                <h1 className='section-2__texts__title'>{title}</h1>\r\n                <p className='section-2__texts__text'>\r\n                    Na PortuGO, somos pioneiros da inovação em mobilidade urbana, \r\n                    dedicados a redefinir as vias do transporte moderno em Portugal. \r\n                    Nossa missão é oferecer uma alternativa de transporte acessível \r\n                    e de alta qualidade que se adapte às necessidades dinâmicas dos \r\n                    passageiros do século XXI.\r\n                </p>\r\n                <p className='section-2__texts__text'>\r\n                    Com uma frota de veículos modernos e uma interface de aplicativo intuitiva, \r\n                    garantimos um serviço eficiente e confortável para cada viagem.\r\n                </p>\r\n                <Button styleType={'btn--style-1'} text={'Saiba mais'} icon={''} />\r\n            </div>\r\n            <img className='section-2__img' src={imgSrc} alt={imgName} />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Section2;","import './Section3.scss';\r\n\r\nconst Section3 = ({ title }) => {\r\n    return(\r\n        <section className='section-3'>\r\n            <h1 className='section-3__title'>{title}</h1>\r\n            <div className=\"section-3__benefits\">\r\n                <div className=\"section-3__benefits__benefit\">\r\n                    <img className=\"section-3__benefits__benefit__img\" src='images/ic-calendar-clock.svg' alt='Ícone de calendário' />\r\n                    <div className=\"section-3__benefits__benefit__texts\">\r\n                        <h2 className=\"section-3__benefits__benefit__texts__title\">Decida sua jornada</h2>\r\n                        <p className=\"section-3__benefits__benefit__texts__text\">\r\n                            És livre para decidir seu horário de trabalho. Seja pela manhã, tarde ou noite, \r\n                            deixamos que você tenha autonomia completa para conduzir em nossa app a qualquer hora.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"section-3__benefits__benefit\">\r\n                    <img className=\"section-3__benefits__benefit__img\" src='images/ic-payments.svg' alt='Ícone de dinheiro' />\r\n                    <div className=\"section-3__benefits__benefit__texts\">\r\n                        <h2 className=\"section-3__benefits__benefit__texts__title\">Ganhe por viagem</h2>\r\n                        <p className=\"section-3__benefits__benefit__texts__text\">\r\n                            Nossos motoristas são pagos a cada viagem realizada — e não no final de mês. \r\n                            Nossa app também possui um sistema de gorjeta, que permite passageiros concederem \r\n                            um bônus aos motoristas.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"section-3__benefits__benefit\">\r\n                    <img className=\"section-3__benefits__benefit__img\" src='images/ic_partner_exchange.svg'  alt='Ícone de colaboração' />\r\n                    <div className=\"section-3__benefits__benefit__texts\">\r\n                        <h2 className=\"section-3__benefits__benefit__texts__title\">Parceiros dos trabalhadores</h2>\r\n                        <p className=\"section-3__benefits__benefit__texts__text\">\r\n                            Acreditamos numa troca justa entre nossas frotas e a nossa companhia. \r\n                            Somos reconhecidos como a melhor app de transporte urbano para motoristas em toda Portugal. \r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Section3;","import './Section4.scss';\r\n\r\nconst Section4 = ({ title }) => {\r\n\r\n    return(\r\n        <>\r\n            <h1 className='section-4__title'>{title}</h1>\r\n            <section className='section-4'>\r\n                <div className='section-4__achivements'>\r\n                    <div className='section-4__achivements__achivement'>\r\n                        <img className='section-4__achivements__achivement__icon' src='images/ic-achivement-1.svg' alt='Ícone de transferência' />\r\n                        <div className='section-4__achivements__achivement__texts'>\r\n                            <h5 className='section-4__achivements__achivement__texts__title'>300 mil</h5>\r\n                            <h6 className='section-4__achivements__achivement__texts__text'>dispositivos com nossa app</h6>\r\n                        </div>\r\n                    </div>\r\n                    <div className='section-4__achivements__achivement'>\r\n                        <img className='section-4__achivements__achivement__icon' src='images/ic-achivement-2.svg' alt='Ícone de um veículo' />\r\n                        <div className='section-4__achivements__achivement__texts'>\r\n                            <h5 className='section-4__achivements__achivement__texts__title'>1 milhão</h5>\r\n                            <h6 className='section-4__achivements__achivement__texts__text'>corridas concluídas</h6>\r\n                        </div>\r\n                    </div>\r\n                    <div className='section-4__achivements__achivement'>\r\n                        <img className='section-4__achivements__achivement__icon' src='images/ic-achivement-3.svg' alt='Ícone de estrela' />\r\n                        <div className='section-4__achivements__achivement__texts'>\r\n                            <h5 className='section-4__achivements__achivement__texts__title'>5/5</h5>\r\n                            <h6 className='section-4__achivements__achivement__texts__text'>nas avaliações da Google Play</h6>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <img className='section-4__img' src='images/pexels-andrea-piacquadio-bg-transparent.png' alt='Cliente a utilizar a aplicação' />\r\n            </section>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Section4;","import React, { useState, useEffect } from 'react';\r\nimport './PortugalMap.scss';\r\n\r\nconst PortugalMap = () => {\r\n    // State for dynamic viewBox\r\n    const [height, setHeight] = useState(\"304\");\r\n    const [width, setWidth] = useState(\"150\");\r\n\r\n    // Effect hook to listen for window resize and adjust viewBox\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            if (window.innerWidth > 768) {\r\n                setWidth(\"300\");\r\n                setHeight(\"608\");\r\n            } \r\n            else {\r\n                setWidth(\"150\");\r\n                setHeight(\"304\");     \r\n            }\r\n        };\r\n\r\n        // Add event listener\r\n        window.addEventListener('resize', handleResize);\r\n\r\n        // Call handler right away so state gets updated with initial window size\r\n        handleResize();\r\n\r\n        // Remove event listener on cleanup\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    return (\r\n        <svg className='portugal-map-svg' width={width} height={height} viewBox={\"0 0 150 304\"} fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M81.0468 59.7667C81.363 59.7949 81.7012 59.7499 82.0062 59.8511C82.4014 59.9918 82.8368 60.0536 83.0846 59.6373C83.4466 59.2717 83.8413 58.8216 84.4003 58.816C84.5759 58.8278 84.869 58.951 85.0948 58.9623C85.0604 59.0748 85.066 59.1873 85.1061 59.2942C85.0779 59.1985 85.0779 59.0973 85.1061 58.996C85.5127 59.0185 85.8464 58.7147 86.2467 58.7879C86.6589 58.9454 87.1281 59.0016 87.5742 58.9623C88.0875 58.9623 88.2919 58.1184 88.7769 58.2478C88.7544 58.2309 88.7318 58.214 88.7154 58.1915C88.9802 57.8202 89.1044 56.9314 89.7148 57.4602C90.1835 57.9778 90.6183 57.3252 90.7702 56.892C91.2388 56.3688 92.013 56.7907 92.5997 56.6163C93.052 56.4363 93.074 55.6206 93.6499 55.7331C94.1355 55.9356 94.6324 56.0707 95.0954 56.3238C95.677 56.4926 96.1971 56.8076 96.3495 57.4264C96.5579 57.9215 96.9481 58.2647 96.9255 58.8216C97.4789 58.9173 97.3942 59.823 98.0266 59.7724C98.5523 59.7892 99.1169 59.6036 99.6189 59.6992C100.268 60.138 99.4382 60.6162 99.3812 61.1169C99.2123 61.6851 98.8679 62.1351 98.8109 62.7483C98.6132 63.2603 98.7945 63.8285 98.4557 64.2729C98.1446 64.4811 98.4162 64.9705 98.2632 65.128C98.297 65.1168 98.3309 65.0999 98.3654 65.0718C98.7267 65.3249 98.0768 65.4431 98.2298 65.73C97.9695 66.0844 98.5856 66.2757 98.3654 66.6245C98.6415 66.7876 98.6754 67.5077 98.179 67.5471C97.7838 67.6314 97.4337 67.367 97.0379 67.4064C96.3659 67.3895 96.9588 68.0252 96.7674 68.374C96.5523 68.661 96.8182 68.5991 97.0266 68.6159C97.4111 68.7003 97.428 69.246 97.8854 69.291C98.3089 69.1729 98.642 69.4992 98.9074 69.8142C99.0994 70.118 98.7324 70.5231 98.7155 70.855C98.5009 71.2263 98.9136 71.6538 98.5912 71.9632C98.3258 72.177 97.9362 72.1995 97.6483 72.3964C97.546 72.7846 97.1626 73.3134 96.7392 73.2965C96.4512 73.1052 96.1632 73.0265 95.8357 73.0321C95.5698 72.7508 95.1186 73.049 94.9153 72.824C94.8927 72.7396 94.8583 72.6552 94.825 72.5708C94.9272 72.8971 94.882 73.2403 94.5816 73.5497C94.1242 74.1404 94.7228 74.4385 95.1073 74.7873C95.576 75.063 95.7228 75.4455 95.4348 75.9181C95.2874 76.4357 95.0503 76.987 94.6719 77.3583C94.6443 77.8927 94.1694 78.309 93.9323 78.7309C93.6561 79.3385 93.0514 78.7872 92.8763 78.3372C92.4585 78.1403 91.9955 77.9208 91.9898 77.3583C91.5274 77.0601 91.4252 76.4976 90.8216 76.3682C90.4771 75.7381 89.7544 76.1431 89.2349 75.8731C88.9238 75.7212 88.5059 75.3218 88.4777 75.9012C88.0429 76.3288 87.4839 76.7507 87.4782 77.4145C87.5347 77.6846 87.4782 78.084 87.2693 78.0727C87.5347 78.3147 86.9582 78.8772 86.9074 79.2204C86.8057 79.7661 86.2303 79.9742 86.0666 80.4637C85.9424 80.79 85.8577 81.0487 86.2919 81.1219C86.4952 81.5832 87.1389 81.3694 87.5008 81.6901C87.8848 81.9263 88.2462 82.2583 88.3478 82.7027C88.3591 83.0515 87.9977 83.4678 87.6702 83.6366C87.4669 83.8447 87.1445 83.9966 87.1564 84.2779C87.2919 84.2554 87.4331 84.3735 87.4782 84.5929C87.5347 84.9867 87.8503 85.1499 88.1615 85.2793C88.2123 85.7968 88.6866 85.8925 89.1044 85.7856C89.4545 85.7912 90.2563 86.0837 89.6465 86.4269C89.2738 86.5169 89.1044 87.1414 89.1778 87.5014C89.4941 87.6927 89.9226 88.1034 89.3472 88.2946C89.0937 88.4071 88.9125 88.7391 88.6979 88.7278L88.7097 88.739L88.7606 88.7841C88.7668 89.341 88.7775 89.9148 88.3032 90.3143C88.1677 90.7981 87.9864 91.2819 87.8289 91.7544C87.8509 92.1876 87.2806 92.8064 87.9864 92.9527C87.8848 93.2678 87.2863 93.1215 87.1903 93.5603C86.8515 93.4421 86.5917 93.3521 86.2642 93.4984C85.7334 93.1552 85.2196 93.6953 84.6888 93.7797C84.1355 93.6109 84.2145 94.5504 83.6335 94.3366C83.136 94.6123 82.4923 94.3197 82.2043 94.9667C81.8379 95.4449 81.1998 95.4055 80.7086 95.6812C80.5053 95.6812 80.324 95.7262 80.3077 95.6249C80.201 95.8443 80.0253 96.0525 79.8898 96.2606C79.4099 96.2325 79.2969 96.9976 78.8509 96.8963C78.5798 96.8963 78.3257 96.9807 78.049 96.8288C77.7323 96.75 77.0044 96.84 77.3263 97.2845C77.0609 97.5151 76.6543 97.7514 76.2647 97.7064C75.7289 97.8302 75.4178 98.3646 75.0112 98.7134C74.5708 98.9553 74.3506 99.3941 73.9209 99.6642C73.6504 99.9004 73.4409 100.221 73.1027 100.396C73.0908 100.379 73.0801 100.362 73.0682 100.345C73.0908 100.435 73.097 100.531 73.0626 100.637C72.887 100.969 72.656 101.267 72.4132 101.543C72.1478 101.841 71.8429 101.746 71.5098 101.808C70.9903 102.106 70.8209 102.871 70.1777 102.983C69.8214 103.118 69.5391 103.45 69.1834 103.619C68.8051 103.844 68.359 103.895 67.9299 103.867C67.5798 103.816 67.512 104.176 67.2918 104.339C67.2523 104.401 67.1676 104.395 67.1055 104.407C66.6938 104.322 66.5069 104.66 66.3375 104.98C66.2703 105.341 65.9818 105.194 65.7333 105.239C65.2082 105.526 64.8299 106.01 64.4408 106.449C64.2827 106.809 64.023 106.55 63.853 106.353C63.447 106.302 63.639 106.674 63.7119 106.876C63.5199 107.062 63.4019 106.336 63.0744 106.55C62.7073 106.674 62.425 106.381 62.1201 106.218C61.7085 105.931 61.8999 106.893 61.4651 106.82C61.3014 106.724 61.3409 106.691 61.4081 106.646C61.3691 106.657 61.3352 106.612 61.3064 106.488C61.1088 106.044 60.5724 106.544 60.2392 106.302C59.7932 106.533 59.4312 106.904 58.997 107.174C58.613 107.546 58.0088 107.512 57.879 106.944C57.2528 106.843 57.01 106.162 56.6204 105.729C56.2646 105.346 55.7395 105.222 55.237 105.234C55.1579 105.414 54.9998 105.813 54.7852 105.47C54.6215 104.98 54.2996 104.598 53.7688 104.525C53.7914 104.12 53.7073 103.535 53.8592 103.101C53.4809 102.494 54.7344 102.5 54.2991 101.875C54.1466 101.616 54.6384 101.352 54.7457 101.11C54.8925 100.812 55.1969 100.969 55.3776 100.801C55.1523 100.452 55.5639 99.9623 55.2482 99.6473C55.0337 99.2872 54.5989 99.0228 54.6215 98.5784C54.4639 98.0777 54.9038 97.8077 55.3217 97.7008C55.3951 97.6502 55.508 97.622 55.5424 97.532C56.0783 97.4307 56.4623 97.0088 56.9597 96.8119C57.3776 96.4688 57.5187 97.4814 57.8682 96.9413C58.0382 96.8007 58.2466 96.7219 58.4617 96.6657C57.9699 96.3337 57.7723 95.7881 57.4848 95.2986C57.3042 94.9948 56.5532 95.2761 56.7903 94.6629C56.5475 94.1285 56.7903 93.4253 56.3386 92.9696C56.0681 92.6208 55.6271 91.867 56.0958 91.6138C56.1184 91.3044 56.4289 91.7263 56.5475 91.3775C56.9597 91.0568 57.333 91.5632 57.6373 91.0794C57.9992 91.0118 58.3268 90.8206 58.6373 90.8881C58.5413 90.8093 58.4899 90.6968 58.5244 90.5112C58.53 90.483 58.5357 90.4493 58.5413 90.4212C58.5187 90.4549 58.4899 90.4774 58.4623 90.4943C58.0388 90.3424 57.7564 89.9486 57.3211 89.8304C57.0557 89.566 56.4007 90.0273 56.4289 89.3579C56.3555 88.7503 56.6271 88.2496 56.683 87.6195C56.0619 87.3158 56.7446 86.1287 55.9546 86.1906C55.7113 85.8531 55.5249 85.5887 55.1641 85.4312C54.9332 84.9586 55.277 84.3623 54.8987 83.9347C54.5148 83.3496 55.6949 83.5353 56.0111 83.299C56.5136 83.0346 57.1404 82.6633 57.5074 82.3876C57.0162 82.1514 57.8914 82.1289 57.7559 81.6844C57.9309 81.4257 57.5916 80.9643 58.1342 81.0375C58.1732 80.7449 58.3544 80.4974 58.303 80.1542C58.4103 80.0192 58.5916 79.9461 58.7892 79.9349C58.6537 79.8786 58.6136 79.7829 58.7892 79.5692C59.0427 78.9447 59.1161 78.2471 58.6029 77.6789C58.5458 77.3245 58.3482 77.0883 58.1449 76.807C58.6362 76.7057 59.0936 76.0587 59.534 76.6157C60.0648 76.807 60.4883 77.6058 61.1489 77.1782C61.6006 76.8745 61.8095 75.8618 62.3849 76.5988C62.9496 77.0151 63.582 77.4933 64.237 76.9589C64.6266 76.8801 64.9654 76.9645 64.8299 76.4582C64.9095 75.8675 64.2539 75.4343 64.294 74.8042C64.0733 74.461 63.6221 74.3317 63.9321 73.8704C64.0337 73.6003 64.0388 73.2346 64.0789 72.9083C63.757 72.3008 63.1924 71.3388 64.1241 71.0238C64.2997 70.5118 64.7057 70.0393 65.084 69.9436C64.8976 69.6173 65.3494 69.3473 65.5244 69.1223L65.5978 69.1673C65.3663 68.9254 65.3437 68.5147 65.4905 68.194C65.9485 67.9071 64.9936 67.2208 65.084 67.9127C64.7791 68.3797 64.294 68.6216 64.1529 69.1785C63.8474 69.5611 63.5939 70.3093 63.0061 69.848C62.4645 69.5667 61.9112 69.3417 61.3635 69.066C60.9117 68.8072 60.6294 68.3909 60.3527 67.9803C59.9688 67.7215 59.1557 68.0421 59.1613 67.4796C58.936 67.3164 58.8056 66.7876 59.2127 66.8214C59.2127 66.3432 59.534 65.6625 58.958 65.4206C59.0377 64.7792 58.3934 65.0493 58.1054 64.768C58.2692 64.3573 59.1161 64.5992 59.3025 64.031C59.5967 63.9967 59.9123 63.9916 60.0478 63.6091C60.3132 63.069 61.0021 63.0015 61.4933 63.2153C61.9456 63.6147 62.5267 63.2434 62.9953 63.6091C63.7356 63.8172 64.3392 63.204 64.8417 62.7652C64.9891 62.709 65.1359 62.7034 65.2652 62.6021C65.7683 63.024 66.3217 63.204 66.9711 63.1759C67.3827 63.3284 68.027 62.754 68.2811 63.0184C68.2692 62.9846 68.2528 62.9509 68.2359 62.9227C68.608 62.7427 68.9587 62.5064 69.3934 62.4896C69.9637 62.3433 70.224 61.6401 70.8333 61.6063C71.3189 61.6795 71.5278 60.9594 72.0304 61.2294C72.4652 61.4826 72.9338 61.3363 73.3856 61.3925C73.8147 61.5107 74.0067 61.055 74.001 60.7006C74.0067 60.4306 74.5149 60.5487 74.4245 60.1605C74.5262 60.0311 74.6272 59.6542 74.7012 59.7273C74.6668 59.5136 74.7407 59.2998 74.9779 59.1423C75.5363 59.0016 76.158 59.3842 76.739 59.3898C77.1625 59.6148 77.8802 60.048 77.9192 59.2374C78.1625 58.4891 78.7498 59.333 79.1676 59.3949C79.5911 59.4286 80.0598 59.3611 80.4381 59.5861C80.6397 59.6486 80.843 59.7099 81.0468 59.7667Z\" fill=\"#BAC8FF\" stroke=\"white\" stroke-width=\"1.77165\"/>\r\n            <path d=\"M69.1721 156.628C69.1388 156.611 69.0992 156.594 69.0597 156.583C69.342 156.521 69.6187 156.324 69.9519 156.279C69.6808 155.947 69.2912 155.446 69.551 155.058C69.6351 154.451 70.4544 154.282 70.6012 153.64C71.0919 153.084 70.6628 152.115 71.4138 151.851C71.7413 152.537 72.3059 151.486 72.7068 152.11C73.4578 152.07 73.848 152.797 74.503 153.027C75.2817 153.274 75.5527 154 76.2754 154.372C76.7786 154.209 76.7729 153.174 77.3539 152.858C77.2867 152.527 77.3991 152.229 77.5634 151.801C77.4561 151.266 78.2574 151.345 78.0767 150.946C77.5002 150.901 77.9807 150.299 77.7774 149.984C77.507 150.378 77.411 149.618 77.0101 149.506C77.1795 149.247 76.7334 149.224 76.7893 148.999C76.5521 148.74 76.3494 148.515 76.3946 148.065C76.6538 147.525 75.6831 147.784 75.8638 147.3C75.4798 147.098 75.1862 146.749 74.6554 146.777C74.4691 146.648 74.6837 146.096 74.1523 146.136C74.4635 145.77 73.7068 146.012 73.6221 145.584C73.0575 145.157 72.9389 146.147 72.4307 145.804C71.8152 145.933 71.0981 145.073 71.7023 144.712C71.708 144.037 71.5329 143.272 71.612 142.558C71.4595 142.035 71.6515 141.073 70.957 140.904C70.743 141.241 70.1608 141.753 69.6588 141.517C69.4217 140.583 68.3883 141.264 67.8852 140.78C67.6763 141.039 67.3369 141.191 67.0439 141.438C67.394 142.057 67.281 142.794 66.8745 143.362C66.4849 143.812 67.2472 144.6 66.8293 145.011C66.1235 145.472 66.355 146.299 66.7333 146.873C67.2923 147.081 66.6204 147.694 66.9315 147.773C67.5126 147.936 66.8412 148.245 66.5532 148.026C66.0337 148.493 65.4239 148.33 64.8079 148.442L64.8304 148.482C64.6497 148.234 64.3002 148.527 64.0574 148.352C63.7689 148.493 63.4984 148.572 63.1929 148.476C62.9614 148.167 62.7079 147.756 62.2669 147.773L62.2613 147.823C62.1822 147.891 62.1257 147.964 62.0862 148.049C62.1252 147.936 62.1534 147.846 62.1534 147.778C61.2669 147.778 60.7587 146.974 59.8044 147.098C59.6017 146.985 59.5904 146.58 59.2178 146.659C58.7773 146.687 59.4154 146.108 59.2234 145.832C59.6469 145.427 59.0986 144.988 59.1274 144.555C58.9467 144.071 59.6921 143.514 59.2906 143.165C59.071 143.368 58.6418 143.165 58.9241 142.901C59.2968 142.698 58.8903 142.288 59.1613 142.046C58.7892 141.838 58.9524 141.202 59.342 141.14C59.342 140.898 59.4606 140.527 59.3589 140.285C59.2121 139.897 58.7711 139.694 58.7096 139.25C58.6588 138.693 58.0602 139.284 57.9473 139.531C57.6079 139.852 57.6418 139.031 57.303 139.407C56.9591 139.205 56.7728 138.884 56.9812 138.541C56.9303 138.372 56.8795 138.198 56.8344 138.024C56.4504 137.832 56.0043 138.282 55.6203 137.967C55.338 137.742 54.6774 137.517 54.5362 137.9C54.9207 138.243 55.124 138.704 54.8417 139.182C54.8298 139.469 55.2482 140.195 54.7169 140.009C54.4854 139.711 54.2087 139.143 53.8643 139.677C53.4012 139.897 53.0399 140.443 52.526 140.488C52.1929 140.105 51.696 139.993 51.2386 140.246C50.7987 140.257 50.5949 140.628 50.5328 141.045C50.3244 141.281 50.2166 141.523 50.3696 141.258C50.1488 140.825 49.2459 142.057 49.3306 141.135C49.15 140.909 49.8157 140.291 49.1776 140.021C48.8671 139.419 48.7993 138.687 48.8162 137.995C48.7874 137.253 48.2516 136.611 48.3244 135.824C48.0082 135.402 47.6982 136.223 47.3425 136.263C47.0771 136.488 47.0432 137.242 46.7496 136.611C46.4277 136.004 46.0607 136.431 45.9817 136.904C45.4396 137.18 45.3097 137.934 44.7507 138.226C43.932 138.13 43.5762 139.362 42.6784 139.025C42.3509 138.665 42.2436 138.372 41.679 138.361C41.0522 138.31 40.4424 138.822 39.8947 139.166C39.2792 139.121 39.138 139.722 39.2227 140.246C38.8275 140.741 39.4599 141.191 39.33 141.601C39.7592 141.759 40.1431 142.322 39.4091 142.119C38.963 142.839 39.8213 143.098 40.3464 143.312C40.8264 143.458 41.6338 143.717 40.9845 144.307C40.7981 144.932 40.8038 145.815 39.9681 146.068C39.6124 146.569 38.483 146.518 38.2177 147.058C38.1725 147.891 39.1832 148.386 38.788 149.252C38.8444 150.023 38.8275 151.058 39.6349 151.458L39.6519 151.469C39.4825 151.441 39.3187 151.587 39.2002 151.789C38.8218 152.02 38.8218 152.431 38.4887 152.695C38.5395 153.24 37.9127 153.229 37.7603 153.662C37.4667 153.815 37.0658 153.381 36.8399 153.139C36.4277 152.74 36.0494 153.539 36.1905 153.904C36.2583 154.365 36.4446 154.748 36.6818 155.131C36.5858 155.446 37.2352 155.969 36.7834 156.081C36.3712 156.02 35.9477 156.081 35.6202 156.357C35.7106 156.447 35.7501 156.588 35.7783 156.728C35.5525 156.002 34.4683 155.986 33.8133 155.98C33.0398 156.143 32.2267 156.363 31.4248 156.43C30.7586 156.126 30.0019 156.166 29.7309 156.886C29.7704 156.959 29.8043 157.038 29.8382 157.117C29.7196 156.908 29.5276 156.79 29.1832 156.915C28.7371 157.707 28.2741 158.512 27.7602 159.271C27.6755 159.828 27.2464 160.272 27.3424 160.824C27.077 161.46 26.3034 160.891 25.9364 161.251C25.7783 161.493 25.3774 161.617 25.4508 161.128C25.5016 161.336 25.3717 161.853 25.1572 162.118C24.9991 162.652 24.5473 163.187 24.7506 163.761C24.9991 164.222 24.8748 164.818 25.2757 165.189C25.5807 165.786 24.5869 166.484 25.0725 166.967C25.6145 167.232 25.8065 167.732 25.5185 168.272C25.4621 168.57 25.1628 169.471 25.6258 169.369C26.1284 168.953 26.5519 169.318 26.9471 169.662C27.348 170.101 27.9353 169.949 28.387 170.078C28.6919 170.534 29.1211 169.785 29.4147 169.572C29.8551 169.397 30.6287 169.499 30.4932 169.392C30.0019 169.578 30.7473 170.523 31.1425 170.641C31.8314 170.9 32.4638 171.131 32.7066 172.003C32.6671 172.2 32.7518 172.318 32.8873 172.38C32.7631 172.397 32.6897 172.463 32.7518 172.667C32.5655 173.077 32.0403 173.066 31.7862 173.37C31.487 173.015 31.1595 173.634 30.8997 173.212C30.5779 173.1 30.3407 172.797 30.0019 173.078C29.5954 172.943 29.4937 173.297 29.3469 173.567C29.1436 173.894 28.7484 173.787 28.5282 173.769C28.4322 174.22 28.9912 174.591 29.3751 174.714C29.5897 174.878 29.6631 175.165 29.9398 175.255C30.0753 175.632 29.9793 176.301 30.5383 176.341C31.0296 176.341 31.2272 176.965 31.662 177.173C32.125 177.404 32.6501 177.359 33.0962 177.623C33.2939 177.848 33.6044 178.22 33.6665 178.422C33.0285 178.613 33.8867 179.058 33.9489 179.44C34.1183 179.761 34.2989 180.077 34.4175 180.414C34.3159 180.464 34.2142 180.498 34.107 180.537C33.356 180.666 33.2317 181.528 32.8026 182.023C32.9551 182.051 31.933 182.259 31.3401 182.135C30.6851 182.001 30.6117 182.54 31.1764 182.72C31.7636 182.861 31.4023 183.182 31.1933 183.587C30.3238 183.829 31.0409 185.005 30.3351 185.218C29.2792 185.724 31.3063 185.752 31.1482 186.241C30.5892 186.788 29.3639 186.658 29.2735 187.536C29.7648 188.542 28.3249 188.807 28.4604 189.78C28.4604 190.771 27.4948 191.321 27.1448 192.165C26.9641 192.812 26.0776 193.06 26.0776 193.757C26.4954 194.23 26.9132 194.708 27.3254 195.186C27.6304 195.4 27.444 195.783 27.4723 196.098C27.3706 196.429 27.6925 196.654 27.811 196.935C28.0934 197.178 27.8449 197.42 27.6981 197.661C27.9014 197.926 27.636 198.488 28.195 198.455C28.483 197.476 28.8895 199.214 29.5163 198.668C30.2617 198.365 30.8602 197.797 31.6225 197.543C32.4412 197.543 32.5824 198.86 33.339 198.725C33.7399 199.225 34.3328 199.31 34.9427 199.018C35.5186 199.535 36.0663 198.989 36.3938 198.494C37.2634 197.915 35.9364 197.555 36.0381 196.88C36.4842 195.541 37.7038 194.545 37.941 193.117C38.3983 192.756 38.5395 194.253 39.1889 194.207C39.3357 194.168 39.426 194.05 39.4712 193.887C39.6124 194.534 40.0246 195.046 40.7868 194.748C40.9619 193.91 41.9161 192.981 42.6954 193.217C42.2041 193.965 42.2098 194.764 42.2267 195.726C42.159 196.21 41.5096 196.711 42.4526 196.851C43.0963 197.701 44.1578 196.773 44.9653 197.504C45.5751 197.02 45.5864 196.047 46.4729 195.878C46.8569 194.95 47.9693 195.158 48.3645 195.759C49.3871 195.388 49.6802 194.337 50.194 193.583C50.7931 193.195 50.9343 194.814 51.4871 193.814C52.08 193.52 52.3284 193.167 52.2211 192.7C52.9665 191.49 54.0167 194.348 54.7112 192.632C55.1065 191.659 55.1122 192.418 55.587 192.666C55.801 192.193 55.9874 191.018 56.2132 192.07C56.5069 192.689 57.4724 193.116 57.7604 193.156C56.9806 193.92 58.709 195.023 59.3188 194.079C59.8327 193.662 60.2844 194.748 60.6175 195.085C60.0472 195.709 60.9281 196.109 61.2443 195.468C62.2155 195.412 61.2048 196.633 62.1585 196.795C62.7119 197.161 63.4634 197.206 63.2658 196.306C64.2421 195.67 63.9321 194.574 62.8135 194.377C63.119 195.051 62.1246 195.322 62.2607 194.415C62.2545 193.482 60.7757 193.684 61.3064 192.615C61.9727 192.255 62.8197 191.681 61.7587 191.254C60.9174 190.404 59.4832 190.742 58.5571 189.876C57.7491 189.853 56.936 189.134 57.9473 188.571C58.6695 187.806 59.2121 186.506 58.8959 185.511C58.6531 185.28 59.6525 184.864 59.8897 185.145C60.5673 184.684 59.5227 184.583 59.4606 183.953C59.2127 183.413 58.4724 184.437 58.3764 183.531C57.3036 183.143 58.3256 180.762 57.1003 181.101C55.9591 180.876 56.9535 179.148 55.6542 179.064C55.0613 178.738 54.5136 178.35 53.9377 178.35C54.2482 178.063 54.1522 177.601 54.6717 177.343C55.1184 176.521 55.6887 175.699 56.0721 174.918C56.8626 174.484 57.6305 173.95 58.4041 173.55C59.4764 173.528 59.8778 172.172 60.7982 171.716C61.4758 171.531 61.346 170.76 61.9157 170.489C61.8875 170.422 61.8541 170.354 61.8197 170.298C62.3172 170.619 63.3505 169.292 62.6503 168.735C62.8756 167.97 63.604 167.188 64.4736 167.255C64.2703 168.11 66.3369 168.329 66.2805 167.283C66.5284 166.36 67.5453 165.848 67.7712 164.836C68.8722 164.515 67.7542 162.99 68.7875 162.828C69.8604 163.035 69.7029 161.309 70.8768 161.826C71.5544 161.41 72.3505 160.465 72.2766 159.632C71.7181 159.244 70.9897 159.262 70.5098 158.519C69.726 158.254 69.2969 157.398 69.1721 156.628Z\" fill=\"#BAC8FF\" stroke=\"white\" stroke-width=\"1.77165\"/>\r\n            <path d=\"M79.6063 190.132C79.3466 190.025 79.0812 189.935 78.8102 189.862C77.9293 189.828 77.071 189.57 76.1625 189.575C75.8576 189.237 75.4623 189.13 75.0496 189.141C75.1687 189.068 75.2195 188.922 75.1399 188.63C75.0439 188.146 74.6204 187.752 74.8067 187.352C74.4121 187.144 73.7621 187.004 73.8474 186.402C73.3787 186.317 73.2709 185.158 72.7237 185.518C72.2494 185.8 71.6452 185.361 71.5436 186.12C71.1139 186.683 70.442 187.021 69.8773 187.313C69.4482 186.807 68.4775 187.831 68.6243 186.891C69.1658 186.385 68.6125 185.817 69.019 185.21C69.019 184.444 67.6639 184.776 67.7773 183.864C67.7598 183.229 66.9072 183.679 66.6757 183.139C65.9699 182.774 65.7615 183.808 65.6655 184.298C65.5808 184.844 65.9134 185.665 65.0331 185.67C63.9264 186.182 64.7113 184.714 64.2539 184.326C64.0388 183.926 64.6938 183.262 63.9264 183.353C63.5424 183.223 63.0676 183.161 63.0399 182.61C62.4978 182.211 62.4408 183.493 61.9275 182.875C61.2217 182.807 60.6401 183.949 60.2725 184.585L60.2217 184.681L60.1822 184.731C60.1601 185.108 59.7135 185.255 59.465 185.018C59.2279 185.294 58.4204 185.249 59.019 185.66C59.0585 186.363 58.827 187.05 58.5785 187.708C58.3809 188.383 57.5684 188.658 57.4379 189.323C57.9122 189.834 58.7592 189.851 59.3346 190.295C60.0015 190.672 60.7976 190.622 61.4583 190.942C61.6616 191.432 62.8417 191.623 62.0455 192.118C61.3962 192.304 60.7638 193.372 61.6559 193.626C62.3448 193.682 62.198 194.88 62.5424 195.044C63.0337 194.993 62.7677 194.424 62.9264 194.391C63.5362 194.262 63.7344 195.523 64.1178 195.178C63.8519 195.566 63.5645 195.933 63.2652 196.303C63.2482 196.675 63.2533 197.384 62.6774 196.985C62.6717 197.176 62.8129 197.35 62.9541 197.53C62.8129 197.362 62.6661 197.199 62.6774 196.985C61.8592 196.934 61.5368 196.157 61.6384 195.55C61.08 195.223 60.6847 196.337 60.3967 195.493C61.0066 194.875 59.8829 194.228 59.482 193.907C58.9399 195.071 56.9529 194.042 57.7654 193.153C57.2742 193.165 56.1223 192.27 55.9811 191.555C55.8569 192.174 55.4052 193.254 55.1285 192.057C54.7389 192.951 53.8467 193.733 53.1296 192.591C52.8411 191.994 51.7631 192.731 52.2826 193.26C51.622 193.659 50.8936 194.66 50.5435 193.507C49.5215 193.766 49.6796 195.415 48.4712 195.684C48.0195 195.797 47.5056 194.66 46.8619 195.442C46.094 196.033 45.4898 196.573 45.0437 197.472C45.3261 197.67 47.0257 197.534 46.7264 198.508C46.5231 198.57 46.382 198.705 46.382 198.975C46.1843 199.537 46.7321 199.993 46.9918 200.533C47.0991 201.119 47.7936 201.439 47.4768 202.075C46.8506 202.171 46.1838 201.917 45.5627 202.221C44.9077 202.424 44.1736 202.278 43.5807 202.711C43.3492 202.976 43.3436 203.414 42.9935 203.701C42.7789 204.275 42.0392 204.106 41.7738 204.584C41.3221 205.045 40.972 205.518 40.5711 205.996C40.1758 206.261 39.5321 206.66 39.9556 207.15C40.1476 207.667 40.1476 208.393 40.5429 208.876C40.6332 209.304 40.4638 210.035 41.1188 209.777C41.7512 209.535 42.3836 209.861 42.8805 210.233C43.1064 210.412 43.3379 210.137 43.5581 210.075C43.5638 210.846 44.1793 211.212 45.0714 211.037C45.9353 211.065 45.4102 212.641 46.4096 211.893C47.5333 211.285 45.2182 210.176 46.8444 210.064C47.3978 210.47 47.7592 211.145 48.4932 210.582C49.504 210.317 49.5548 212.123 50.7518 211.487C51.474 211.161 52.1635 209.8 53.0839 210.266C53.2188 211.363 54.3092 211.904 54.6875 212.821C54.823 213.817 56.1725 214.981 55.0658 215.656C54.6994 216.556 56.1725 216.68 56.6412 216.179C56.6356 216.241 56.6248 216.308 56.6068 216.371C56.6915 216.438 56.5622 216.585 56.6186 216.663C57.0252 217.26 56.4385 217.023 56.0709 217.17C56.3532 217.474 56.6412 218.132 56.1725 218.452C55.9523 219.116 55.303 219.549 55.1449 220.241C55.6982 219.994 56.19 220.072 56.7716 220.123C57.6525 219.976 57.2793 221.321 57.8388 221.254C58.5729 221.411 59.3239 221.693 60.1257 221.665C61.08 221.518 61.3566 222.559 62.0004 223.009C62.5481 223.583 62.5424 222.272 63.0619 222.767C63.2149 223.414 63.8185 224.089 64.4397 223.431C64.7835 222.79 65.3538 222.857 65.9021 223.206C66.512 223.673 67.1382 222.672 67.7768 223.212C68.1607 223.482 68.4482 223.944 68.9626 223.977C69.6006 224.506 70.3064 223.645 70.8372 223.386C71.5035 223.741 72.2144 224.005 72.8412 224.41C72.8412 224.455 72.8982 224.455 72.9767 224.433C72.8751 224.556 72.9377 224.669 73.3782 224.775C74.2252 224.928 74.6876 225.546 75.2585 226.07C75.7435 226.322 76.5227 226.322 76.5402 227.077C76.9293 227.2 77.1444 227.318 77.3195 227.048C78.0479 227.144 78.6922 227.802 79.5499 227.442C80.5154 227.02 81.193 227.971 82.0343 228.257C82.2822 229.214 83.4799 229.416 84.293 229.743C84.9926 230.345 85.9248 229.647 86.6357 229.501C87.3698 229.388 87.6069 230.53 88.2337 229.782C88.8435 229.973 89.3178 231.053 90.0807 230.508C90.9553 230.316 91.791 230.614 92.6555 230.727C93.0338 230.829 92.345 230.018 92.9717 229.867C93.7284 229.816 94.9932 228.876 94.389 228.196C94.5985 228.28 94.7961 228.139 94.9028 227.74C95.4844 227.397 95.7278 226.884 95.8294 226.254C96.2693 225.967 97.3026 225.951 96.812 225.18L96.7098 225.09C97.0147 225.298 97.3026 225.326 97.2744 224.769C97.2179 224.55 96.5567 224.314 97.2066 224.274C97.6019 224.837 98.0197 223.639 98.4207 224.348C99.1609 224.483 99.5663 224.033 99.7871 223.369C99.8775 223.037 100.199 222.755 100.357 223.222C100.951 223.144 101.261 222.474 101.939 222.649C102.255 222.204 102.994 222.418 102.729 223.026C103.344 223.222 102.334 224.144 103.22 224.123C103.887 224.454 103.396 225.416 104.073 225.832C104.451 226.519 105.259 226.654 105.908 226.952C106.8 226.918 106.579 228.038 106.382 228.578C106.931 229.011 107.28 229.608 107.472 230.26C107.67 230.71 108.054 231.739 108.534 231.542C108.697 230.923 109.788 231.784 109.788 230.833C109.878 230.53 110.206 230.603 110.443 230.569C110.002 229.415 109.551 228.274 109.059 227.142C108.924 226.569 108.822 225.978 108.664 225.416C108.337 225.135 107.936 224.921 107.648 224.606C107.111 223.723 106.614 222.812 106.055 221.95C105.378 221.14 104.656 220.37 104.012 219.543C103.622 218.952 103.238 218.367 102.854 217.776C102.842 217.523 102.928 217.242 102.876 217C102.374 216.724 101.888 216.409 101.381 216.156C101.11 216.122 100.816 215.992 100.556 216.01L100.539 216.021L100.59 215.987C100.037 215.992 100.551 215.694 100.72 215.492C101.053 215.154 101.42 214.833 101.73 214.485C101.781 214.113 101.922 213.736 101.933 213.371C101.589 213.444 101.228 213.613 100.883 213.72C100.934 213.067 100.99 212.42 101.041 211.767C101.29 211.548 101.6 211.357 101.82 211.115C101.792 210.671 101.645 210.192 101.674 209.765C102.193 209.191 102.662 208.578 103.046 207.909C103.244 207.267 103.351 206.581 103.61 205.962C103.757 205.709 104.04 205.495 104.136 205.214C103.814 205.073 103.43 205.011 103.091 204.899C103.051 203.559 103.012 202.221 102.973 200.882C103.102 200.645 103.317 200.443 103.413 200.201C103.458 199.937 103.176 199.498 103.464 199.363C103.91 199.098 104.424 198.93 104.83 198.615C104.966 198.39 105.434 198.176 105.35 197.934C105.135 197.591 104.87 197.343 104.57 197.276C104.847 197.074 104.994 196.415 104.497 196.544C104.254 195.959 105.191 195.7 105.118 195.177C105.52 194.637 104.808 194.148 105.198 193.602C105.745 193.568 105.254 193.388 105.028 193.253C104.769 193.326 104.622 193.658 104.469 193.18C104.277 192.735 103.256 192.061 103.233 192.893C103.509 193.472 102.804 192.938 102.566 193.236C102.436 193.674 102.081 193.692 101.861 193.297C101.341 192.515 101.059 193.798 100.5 193.781C100.003 194.102 100.534 194.552 100.375 194.929C99.9181 195.092 99.4777 195.367 98.9864 195.508C99.2179 194.99 98.5121 195.08 98.3032 195.373C97.8571 195.289 98.393 194.939 98.2242 194.72C97.7888 194.867 97.428 195.154 97.0378 195.39C97.2016 195.221 97.2016 194.968 97.0096 194.703C97.2123 194.225 96.7216 194.045 96.6595 193.657C96.6476 193.156 96.1739 192.925 95.7843 192.707C95.773 192.403 96.3433 192.504 96.5804 192.538C96.4449 192.313 96.3772 192.02 96.3145 191.812C96.0265 191.863 95.8746 191.166 95.773 191.598C95.5691 191.514 95.6883 190.979 95.6375 190.743C95.2812 190.18 96.1903 189.483 95.3834 189.112C94.9316 188.645 94.3218 188.465 93.808 188.127C94.175 187.84 94.4291 187.559 93.8306 187.272C94.197 187.013 93.6047 186.309 94.1807 186.321C94.6041 185.978 94.3382 185.905 93.9435 185.736C93.8532 184.994 92.7346 185.669 92.8481 185.174C93.136 184.442 92.3342 184.774 91.9841 184.707C91.459 184.802 91.3009 184.302 90.9621 183.891C90.9503 183.109 90.0191 183.514 90.2789 184.099C89.6403 183.981 90.053 184.577 90.1541 184.988C90.9446 185.759 89.2851 186.158 89.2506 186.513C89.1383 186.934 88.1383 186.417 87.6815 186.484C87.0428 186.941 86.7724 187.61 86.1507 188.009C85.6538 188.763 86.2077 188.088 86.625 187.986C86.9073 188.29 86.0891 188.313 86.241 188.74C85.507 189.235 84.7786 188.251 83.9937 188.037C83.4014 188.718 82.193 188.628 81.8034 187.694C81.5662 187.851 81.3455 188.954 80.7757 189.242C80.3178 190.091 79.3296 188.892 79.1721 189.933C79.3183 190.002 79.4595 190.064 79.6063 190.132Z\" fill=\"#BAC8FF\"/>\r\n            <path d=\"M62.6774 196.985C63.2533 197.384 63.2482 196.675 63.2652 196.303C63.5645 195.933 63.8519 195.566 64.1178 195.178C63.7344 195.523 63.5362 194.262 62.9264 194.391C62.7677 194.424 63.0337 194.993 62.5424 195.044C62.198 194.88 62.3448 193.682 61.6559 193.626C60.7638 193.372 61.3962 192.304 62.0455 192.118C62.8417 191.623 61.6616 191.432 61.4583 190.942C60.7976 190.622 60.0015 190.672 59.3346 190.295C58.7592 189.851 57.9122 189.834 57.4379 189.323C57.5684 188.658 58.3809 188.383 58.5785 187.708C58.827 187.05 59.0585 186.363 59.019 185.66C58.4204 185.249 59.2279 185.294 59.4651 185.018C59.7135 185.255 60.1601 185.108 60.1822 184.731L60.2217 184.681L60.2725 184.585C60.6401 183.949 61.2217 182.807 61.9275 182.875C62.4408 183.493 62.4978 182.211 63.0399 182.61C63.0676 183.161 63.5424 183.223 63.9264 183.353C64.6938 183.262 64.0388 183.926 64.2539 184.326C64.7113 184.714 63.9264 186.182 65.0331 185.67C65.9134 185.665 65.5808 184.844 65.6655 184.298C65.7615 183.808 65.9699 182.774 66.6757 183.139C66.9072 183.679 67.7598 183.229 67.7773 183.864C67.6639 184.776 69.019 184.444 69.019 185.21C68.6125 185.817 69.1658 186.385 68.6243 186.891C68.4775 187.831 69.4482 186.807 69.8773 187.313C70.442 187.021 71.1139 186.683 71.5436 186.12C71.6452 185.361 72.2494 185.8 72.7237 185.518C73.2709 185.158 73.3787 186.317 73.8474 186.402C73.7621 187.004 74.4121 187.144 74.8067 187.352C74.6204 187.752 75.0439 188.146 75.1399 188.63C75.2195 188.922 75.1687 189.068 75.0496 189.141C75.4623 189.13 75.8576 189.237 76.1625 189.575C77.071 189.57 77.9293 189.828 78.8102 189.862C79.0812 189.935 79.3466 190.025 79.6063 190.132C79.4595 190.064 79.3183 190.002 79.1721 189.933C79.3296 188.892 80.3178 190.091 80.7757 189.242C81.3455 188.954 81.5662 187.851 81.8034 187.694C82.193 188.628 83.4014 188.718 83.9937 188.037C84.7786 188.251 85.507 189.235 86.241 188.74C86.0891 188.313 86.9073 188.29 86.625 187.986C86.2077 188.088 85.6538 188.763 86.1507 188.009C86.7724 187.61 87.0428 186.941 87.6815 186.484C88.1383 186.417 89.1383 186.934 89.2506 186.513C89.2851 186.158 90.9446 185.759 90.1541 184.988C90.053 184.577 89.6403 183.981 90.2789 184.099C90.0191 183.514 90.9503 183.109 90.9621 183.891C91.3009 184.302 91.459 184.802 91.9841 184.707C92.3342 184.774 93.136 184.442 92.8481 185.174C92.7346 185.669 93.8532 184.994 93.9435 185.736C94.3382 185.905 94.6041 185.978 94.1807 186.321C93.6047 186.309 94.197 187.013 93.8306 187.272C94.4291 187.559 94.175 187.84 93.808 188.127C94.3218 188.465 94.9316 188.645 95.3834 189.112C96.1903 189.483 95.2812 190.18 95.6375 190.743C95.6883 190.979 95.5691 191.514 95.773 191.598C95.8746 191.166 96.0265 191.863 96.3145 191.812C96.3772 192.02 96.4449 192.313 96.5804 192.538C96.3433 192.504 95.773 192.403 95.7843 192.707C96.1739 192.925 96.6476 193.156 96.6595 193.657C96.7216 194.045 97.2123 194.225 97.0096 194.703C97.2016 194.968 97.2016 195.221 97.0378 195.39C97.428 195.154 97.7888 194.867 98.2242 194.72C98.393 194.939 97.8571 195.289 98.3032 195.373C98.5121 195.08 99.2179 194.99 98.9864 195.508C99.4777 195.367 99.9181 195.092 100.375 194.929C100.534 194.552 100.003 194.102 100.5 193.781C101.059 193.798 101.341 192.515 101.861 193.297C102.081 193.692 102.436 193.674 102.566 193.236C102.804 192.938 103.509 193.472 103.233 192.893C103.256 192.061 104.277 192.735 104.469 193.18C104.622 193.658 104.769 193.326 105.028 193.253C105.254 193.388 105.745 193.568 105.198 193.602C104.808 194.148 105.52 194.637 105.118 195.177C105.191 195.7 104.254 195.959 104.497 196.544C104.994 196.415 104.847 197.074 104.57 197.276C104.87 197.343 105.135 197.591 105.35 197.934C105.434 198.176 104.966 198.39 104.83 198.615C104.424 198.93 103.91 199.098 103.464 199.363C103.176 199.498 103.458 199.937 103.413 200.201C103.317 200.443 103.102 200.645 102.973 200.882C103.012 202.221 103.051 203.559 103.091 204.899C103.43 205.011 103.814 205.073 104.136 205.214C104.04 205.495 103.757 205.709 103.61 205.962C103.351 206.581 103.244 207.267 103.046 207.909C102.662 208.578 102.193 209.191 101.674 209.765C101.645 210.192 101.792 210.671 101.82 211.115C101.6 211.357 101.29 211.548 101.041 211.767C100.99 212.42 100.934 213.067 100.883 213.72C101.228 213.613 101.589 213.444 101.933 213.371C101.922 213.736 101.781 214.113 101.73 214.485C101.42 214.833 101.053 215.154 100.72 215.492C100.551 215.694 100.037 215.992 100.59 215.987L100.539 216.021L100.556 216.01C100.816 215.992 101.11 216.122 101.381 216.156C101.888 216.409 102.374 216.724 102.876 217C102.928 217.242 102.842 217.523 102.854 217.776C103.238 218.367 103.622 218.952 104.012 219.543C104.656 220.37 105.378 221.14 106.055 221.95C106.614 222.812 107.111 223.723 107.648 224.606C107.936 224.921 108.337 225.135 108.664 225.416C108.822 225.978 108.924 226.569 109.059 227.142C109.551 228.274 110.002 229.415 110.443 230.569C110.206 230.603 109.878 230.53 109.788 230.833C109.788 231.784 108.697 230.923 108.534 231.542C108.054 231.739 107.67 230.71 107.472 230.26C107.28 229.608 106.931 229.011 106.382 228.578C106.579 228.038 106.8 226.918 105.908 226.952C105.259 226.654 104.451 226.519 104.073 225.832C103.396 225.416 103.887 224.454 103.22 224.123C102.334 224.144 103.344 223.222 102.729 223.026C102.994 222.418 102.255 222.204 101.939 222.649C101.261 222.474 100.951 223.144 100.357 223.222C100.199 222.755 99.8775 223.037 99.7871 223.369C99.5663 224.033 99.1609 224.483 98.4207 224.348C98.0198 223.639 97.6019 224.837 97.2066 224.274C96.5567 224.314 97.2179 224.55 97.2744 224.769C97.3026 225.326 97.0147 225.298 96.7097 225.09L96.812 225.18C97.3026 225.951 96.2693 225.967 95.8294 226.254C95.7278 226.884 95.4844 227.397 94.9028 227.74C94.7961 228.139 94.5985 228.28 94.389 228.196C94.9932 228.876 93.7284 229.816 92.9717 229.867C92.345 230.018 93.0338 230.829 92.6555 230.727C91.791 230.614 90.9553 230.316 90.0807 230.508C89.3178 231.053 88.8435 229.973 88.2337 229.782C87.6069 230.53 87.3698 229.388 86.6357 229.501C85.9248 229.647 84.9926 230.345 84.293 229.743C83.4799 229.416 82.2822 229.214 82.0343 228.257C81.193 227.971 80.5154 227.02 79.5499 227.442C78.6921 227.802 78.0479 227.144 77.3195 227.048C77.1444 227.318 76.9293 227.2 76.5402 227.077C76.5227 226.322 75.7435 226.322 75.2585 226.07C74.6876 225.546 74.2252 224.928 73.3782 224.775C72.9377 224.669 72.8751 224.556 72.9767 224.433C72.8982 224.455 72.8412 224.455 72.8412 224.41C72.2144 224.005 71.5035 223.741 70.8372 223.386C70.3064 223.645 69.6006 224.506 68.9626 223.977C68.4482 223.944 68.1608 223.482 67.7768 223.212C67.1382 222.672 66.512 223.673 65.9021 223.206C65.3538 222.857 64.7835 222.79 64.4397 223.431C63.8185 224.089 63.2149 223.414 63.0619 222.767C62.5424 222.272 62.5481 223.583 62.0004 223.009C61.3566 222.559 61.08 221.518 60.1257 221.665C59.3239 221.693 58.5729 221.411 57.8388 221.254C57.2793 221.321 57.6525 219.976 56.7716 220.123C56.19 220.072 55.6982 219.994 55.1449 220.241C55.303 219.549 55.9523 219.116 56.1725 218.452C56.6412 218.132 56.3532 217.474 56.0709 217.17C56.4385 217.023 57.0252 217.26 56.6186 216.663C56.5622 216.585 56.6915 216.438 56.6068 216.371C56.6248 216.308 56.6356 216.241 56.6412 216.179C56.1725 216.68 54.6994 216.556 55.0658 215.656C56.1725 214.981 54.823 213.817 54.6875 212.821C54.3092 211.904 53.2188 211.363 53.0839 210.266C52.1635 209.8 51.474 211.161 50.7518 211.487C49.5548 212.123 49.504 210.317 48.4932 210.582C47.7592 211.145 47.3978 210.47 46.8444 210.064C45.2182 210.176 47.5333 211.285 46.4096 211.893C45.4102 212.641 45.9353 211.065 45.0714 211.037C44.1793 211.212 43.5638 210.846 43.5581 210.075C43.3379 210.137 43.1064 210.412 42.8805 210.233C42.3836 209.861 41.7512 209.535 41.1188 209.777C40.4638 210.035 40.6332 209.304 40.5429 208.876C40.1476 208.393 40.1476 207.667 39.9556 207.15C39.5321 206.66 40.1758 206.261 40.5711 205.996C40.972 205.518 41.3221 205.045 41.7738 204.584C42.0392 204.106 42.7789 204.275 42.9935 203.701C43.3436 203.414 43.3492 202.976 43.5807 202.711C44.1736 202.278 44.9077 202.424 45.5627 202.221C46.1838 201.917 46.8506 202.171 47.4768 202.075C47.7936 201.439 47.0991 201.119 46.9918 200.533C46.7321 199.993 46.1843 199.537 46.382 198.975C46.382 198.705 46.5231 198.57 46.7264 198.508C47.0257 197.534 45.3261 197.67 45.0437 197.472C45.4898 196.573 46.094 196.033 46.8619 195.442C47.5056 194.66 48.0195 195.797 48.4712 195.684C49.6796 195.415 49.5215 193.766 50.5435 193.507C50.8936 194.66 51.622 193.659 52.2826 193.26C51.7631 192.731 52.8411 191.994 53.1296 192.591C53.8467 193.733 54.7389 192.951 55.1285 192.057C55.4052 193.254 55.8569 192.174 55.9811 191.555C56.1223 192.27 57.2742 193.165 57.7654 193.153C56.9529 194.042 58.9399 195.071 59.482 193.907C59.8829 194.228 61.0066 194.875 60.3967 195.493C60.6847 196.337 61.08 195.223 61.6384 195.55C61.5368 196.157 61.8592 196.934 62.6774 196.985ZM62.6774 196.985C62.6717 197.176 62.8129 197.35 62.9541 197.53C62.8129 197.362 62.6661 197.199 62.6774 196.985Z\" stroke=\"white\" stroke-width=\"1.77165\"/>\r\n            <path d=\"M32.8088 182.022C33.2323 181.526 33.3565 180.666 34.1075 180.536C34.7851 180.379 33.9156 179.625 33.8252 179.214C33.6445 178.904 33.0912 178.533 33.7179 178.365C33.334 177.886 32.9556 177.323 32.2668 177.38C31.7642 177.256 31.3407 176.992 31.0076 176.587C30.6575 176.238 29.9573 176.306 30.0138 175.608C30.0477 175.158 29.5621 175.04 29.3757 174.714C28.9861 174.702 28.1956 173.87 28.6755 173.763C29.4096 174.117 29.3701 172.846 30.0364 173.06C30.5446 172.632 30.9511 173.65 31.4311 173.257C31.6682 173.263 31.9223 173.504 32.0635 173.122C32.6902 173.1 32.933 172.413 32.6677 171.923C32.4587 171.418 32.1369 170.838 31.5835 170.894C31.2899 170.601 30.6518 170.574 30.5558 170.073C30.2679 169.808 30.3921 169.179 29.7992 169.421C29.3023 169.487 29.0821 170.028 28.6417 170.247C28.4271 170.152 28.1391 169.842 27.7947 170.05C27.1961 169.954 26.7557 169.487 26.2814 169.15C25.8749 169.179 25.5361 169.347 25.3271 169.622C25.4118 169.33 25.4175 169.015 25.4175 168.7C25.4288 168.272 25.8071 167.839 25.6038 167.422C25.3384 167.243 25.0222 166.798 24.7964 166.781C24.4011 167.062 23.9437 166.584 23.5485 166.781C23.0855 166.533 22.9895 165.83 22.4248 165.723C21.8771 165.645 21.6456 166.23 21.2221 166.443C20.9623 166.488 20.7647 166.652 20.5953 166.763C20.4372 167.017 19.9121 166.843 19.8895 167.298C19.8556 167.754 19.2684 167.867 19.1667 168.266C19.2119 168.687 18.9239 169.042 18.7263 169.397C18.4666 169.684 18.4383 170.342 18.0205 170.336C17.6139 169.931 17.6083 170.989 17.1622 170.775C16.7895 170.826 16.5863 171.354 16.6935 171.641C16.7387 171.709 16.75 171.776 16.75 171.85C16.7444 171.815 16.7387 171.782 16.7218 171.754C16.6314 171.405 16.1458 171.298 16.1515 170.853C16.2757 170.415 15.6885 170.195 15.6602 169.751C15.4118 169.402 15.7957 169.183 15.8014 168.884C15.5529 168.451 16.2305 168.277 16.1741 167.928C15.8522 167.596 15.7393 167.146 15.6885 166.702C15.7788 166.173 15.1577 165.964 14.7737 166.167C14.5479 165.863 14.1865 166.195 13.9211 165.892C13.4807 165.959 13.204 165.678 12.9951 165.346C12.8991 165.486 12.7014 165.593 12.5264 165.672C12.0916 165.745 12.3683 166.207 12.0295 166.358C11.6681 166.448 11.6907 166.989 11.3124 167.174C11.0413 166.96 10.5557 167.05 10.2565 166.797C9.93462 166.775 9.61277 166.792 9.29656 166.848C9.36997 167.011 9.43772 167.169 9.50548 167.326C9.35867 168.682 9.21186 170.033 9.09328 171.388C9.00858 171.731 8.85048 172.057 8.73755 172.395C8.59639 172.604 8.86177 172.502 8.98035 172.508H8.99165C8.89001 172.53 8.78837 172.542 8.69238 172.53C8.42699 173.29 8.13337 174.038 7.77764 174.764C7.58001 175.332 7.15087 175.765 6.80078 176.243C6.61445 176.761 6.48457 177.301 6.31518 177.824C6.08367 178.353 5.76746 178.843 5.49643 179.349C5.56419 179.709 5.72229 180.069 5.81828 180.429C5.59242 181.43 5.3722 182.432 5.14634 183.434C5.2875 184.598 5.45125 185.768 5.6263 186.933C5.55854 187.237 5.41173 187.534 5.31574 187.838L5.36091 187.833C5.24233 187.905 5.23104 188.114 5.16328 188.255C4.67203 189.559 4.24854 190.888 3.66694 192.153C3.14181 193.357 2.5941 194.556 1.97862 195.72C1.91086 195.917 1.69065 196.097 1.80922 196.328C1.87134 196.586 1.90522 196.862 1.97862 197.11C2.13108 197.278 2.28354 197.442 2.43599 197.605H2.44164L2.43599 197.61C2.53198 197.735 2.69009 197.83 2.73526 197.976C2.79173 198.252 2.84819 198.527 2.90466 198.804C2.70138 199.225 2.48116 199.647 2.28354 200.069C2.31741 200.288 2.34 200.513 2.39082 200.727C2.8369 200.941 3.28862 201.161 3.74035 201.369C4.18643 201.481 4.6438 201.611 5.08987 201.723C5.42867 201.509 5.76746 201.296 6.10626 201.088C6.89113 201.425 7.69294 201.746 8.46087 202.134C8.83354 202.308 9.20621 202.488 9.57889 202.668V202.612C9.57889 202.634 9.58453 202.657 9.60147 202.678C10.296 202.251 10.9905 201.807 11.6907 201.374C12.453 201.386 13.2153 201.396 13.9776 201.408L13.9832 201.341C14.0566 201.543 14.3389 201.65 14.5309 201.763C15.4626 201.532 16.3943 201.296 17.326 201.059C17.6309 200.998 17.8963 200.845 18.2012 200.766C18.5061 200.637 18.8449 200.587 19.1272 200.412C19.3587 200.046 19.5733 199.664 19.7935 199.292C19.929 199 20.217 198.741 20.2057 198.409C20.1323 197.819 20.121 197.223 20.1436 196.626C20.1492 196.333 20.1323 196.035 20.2452 195.754C20.392 195.248 20.505 194.725 20.68 194.224C20.8946 193.796 21.1092 193.363 21.3237 192.935C21.4197 192.744 21.5101 192.552 21.6061 192.367C21.6964 192.052 22.0465 191.968 22.278 191.776C22.7749 191.286 23.3 190.814 23.7743 190.308C23.8816 189.796 23.9607 189.284 24.0567 188.778C24.2543 188.446 24.5084 188.136 24.7286 187.815C24.7512 188.114 24.7794 188.417 24.8077 188.721C24.898 189.267 24.7964 189.807 24.7286 190.353C24.8924 190.493 25.1069 190.595 25.2876 190.718C25.3836 190.943 25.378 191.23 25.4344 191.478C25.3441 191.657 25.1352 191.804 24.9827 191.956C25.1747 192.49 25.4175 193.014 25.6151 193.542C25.7337 193.626 25.8918 193.66 26.016 193.728C26.1515 193.644 26.1572 193.132 26.4847 193.025C26.9985 192.608 27.2074 191.962 27.5858 191.438C28.0488 190.933 28.5174 190.347 28.4666 189.622C28.444 188.975 29.1273 188.716 29.3701 188.21C29.2628 187.788 29.1103 187.017 29.7202 186.91C30.2171 186.708 30.9003 186.527 31.2108 186.082C30.9172 185.795 29.5621 185.734 30.234 185.256C30.8608 185.199 30.6067 184.681 30.6857 184.277C30.8325 183.731 31.4085 183.433 31.5666 182.937C30.4147 182.47 30.7704 181.942 31.8715 182.139C32.1821 182.128 32.4926 182.056 32.8088 182.022Z\" fill=\"#BAC8FF\" stroke=\"white\" stroke-width=\"1.77165\"/>\r\n            <path d=\"M76.5442 227.078C76.9508 227.235 77.1151 227.269 77.3234 227.049C77.9948 227.033 78.4584 227.792 79.2546 227.5C79.8757 227.33 80.7114 227.224 81.1744 227.82C81.9869 228.05 82.123 228.731 82.8006 229.176C83.3534 229.479 84.0321 229.536 84.5516 229.913C85.2343 230.172 85.9971 229.643 86.6346 229.502C87.3687 229.379 87.6171 230.543 88.2382 229.784C88.8085 229.891 89.0852 230.864 89.791 230.622C90.367 230.363 91.1462 230.391 91.7673 230.61C92.1344 230.554 92.603 230.638 92.9136 230.858C92.7329 230.509 92.6087 230.171 92.9757 229.867C94.1953 229.772 94.5398 228.703 94.9068 227.741C95.8893 227.342 95.4715 225.839 96.7696 225.918C96.7696 225.356 97.7753 224.855 96.917 224.484C97.1259 224.045 97.7069 224.709 98.0519 224.101C99.0119 224.883 99.7013 223.78 100.051 222.937C100.661 223.685 101.152 222.374 101.937 222.65C102.643 221.969 102.699 222.841 102.987 223.229C102.513 223.881 103.021 224.107 103.535 224.331C103.461 225.575 104.478 226.441 105.522 226.852C106.449 226.807 106.782 227.622 106.432 228.365C106.889 229.147 107.493 230.126 107.871 231.098C108.092 231.267 108.267 231.475 108.385 231.7L108.391 231.689C108.516 231.638 108.561 231.487 108.651 231.289C109.069 231.312 109.684 231.525 109.769 230.901C109.808 230.558 110.186 230.586 110.44 230.57C110.632 230.749 110.824 230.93 111.011 231.11C111.203 231.368 111.53 231.391 111.807 231.503C112.095 231.273 112.377 231.042 112.67 230.811C112.8 230.924 112.914 231.093 113.043 231.222C113.585 231.014 114.127 230.806 114.669 230.598C114.771 230.345 114.856 230.086 114.963 229.833C116.081 229.608 117.194 229.338 118.3 229.073C118.43 229.287 118.548 229.529 118.662 229.754C118.487 230.052 118.255 230.333 118.058 230.626C117.827 230.868 117.527 231.036 117.268 231.256C117.127 231.757 116.985 232.263 116.839 232.769C116.85 232.876 117.155 232.657 117.285 232.628C117.346 232.634 117.465 232.487 117.51 232.567C117.487 232.865 117.403 233.163 117.358 233.461C117.29 233.979 117.132 234.479 116.968 234.974C116.878 235.137 116.911 235.385 116.743 235.486C116.601 235.581 116.438 235.779 116.313 235.801L116.29 235.773C116.307 236.55 116.189 237.365 116.184 238.158C116.302 238.574 115.794 238.67 115.585 238.923C115.46 239.373 115.585 239.936 115.539 240.431C114.744 240.555 113.913 240.651 113.101 240.645C112.784 240.774 112.665 240.46 112.474 240.29C112.079 239.756 111.474 239.503 110.905 239.199C110.577 239.464 110.255 239.734 109.928 239.998C109.696 240.291 109.956 240.785 109.916 241.151C110.029 241.382 109.859 241.478 109.662 241.528C109.171 241.798 108.668 242.046 108.093 242.068C107.686 242.266 107.342 241.956 106.975 241.827C106.586 241.488 106.258 241.827 105.925 242.057C105.648 242.344 105.27 242.377 104.897 242.412C104.383 242.372 104.045 242.749 103.672 243.042C103.807 243.233 104.084 243.368 104.163 243.587L104.135 243.649C104.118 243.688 104.067 243.722 103.994 243.751L104.175 244.999C103.853 245.787 103.474 246.563 103.016 247.289C102.723 247.621 102.745 248.026 102.785 248.431C102.892 248.791 102.683 249.078 102.531 249.376C102.096 250.428 101.396 251.323 100.763 252.262C100.493 252.847 99.8436 253.05 99.3687 253.432C98.5788 253.842 98.1321 254.631 97.5505 255.272C97.4438 255.582 97.1327 255.339 96.9119 255.356C96.6183 255.638 96.1553 255.812 96.1728 256.279L96.1101 256.301C96.0881 256.318 96.0649 256.33 96.0429 256.346C96.1728 256.381 96.2004 256.532 96.0316 256.881C96.1157 257.19 96.24 257.5 96.0085 257.781C95.6527 258.619 95.2688 259.452 95.1615 260.369C95.0203 260.954 94.9588 261.573 94.7549 262.13C94.2744 262.884 93.8402 263.694 93.3314 264.415C92.7052 264.386 92.8464 264.82 93.0039 265.259C93.1903 265.601 92.7335 265.838 92.6375 266.136C92.406 266.575 92.0158 267.003 91.8808 267.447C92.101 267.965 92.175 268.578 92.6708 268.921C91.9706 268.932 91.2591 269.343 90.7453 269.101C90.2433 269.663 89.4472 268.279 89.3173 269.41C89.1473 269.989 88.4647 269.484 88.3636 270.288C87.9282 270.502 87.5443 270.553 87.4093 271.059C86.8785 271.149 86.5623 270.119 86.0711 270.873C85.817 270.091 84.7272 270.26 83.97 270.569C83.3715 270.918 83.0722 270.243 82.6719 270.958C82.18 270.552 82.2422 271.458 81.6097 271.132C81.7961 271.694 80.9999 271.936 80.6668 271.346C80.9943 271.987 80.2094 271.7 79.9327 272.308C79.1648 272.201 78.9107 273.264 78.0355 273.163C78.1151 272.061 77.7136 274.024 76.9683 273.512C76.2455 273.4 76.6408 274.682 75.8841 274.125C75.3364 274.682 74.8841 274.327 74.6018 273.855C74.6639 274.047 74.743 274.227 74.9293 274.362C74.8333 274.502 74.6921 274.626 74.6588 274.8C74.7774 274.834 75.2173 275.436 74.8389 275.532C74.4951 275.144 74.2579 275.362 74.2404 275.762C73.992 276.516 74.1162 275.341 73.6249 275.864C73.2466 275.346 73.1845 276.303 72.5634 276.139C72.7271 275.622 72.2133 275.903 72.0383 276.117C71.6537 275.447 71.1517 276.673 70.892 276.027C70.2935 275.824 70.8801 276.454 70.4403 276.595C69.8638 276.364 69.7627 276.719 69.6774 277.276C70.2935 277.214 69.1918 277.771 69.7847 277.732C69.6774 278.317 70.3381 277.754 70.1009 278.215C70.5188 278.413 70.0275 278.401 69.7904 278.603C69.6492 278.677 69.4516 278.508 69.0563 278.682C69.3048 279.166 68.4634 278.963 68.5199 279.318C67.9716 279.155 68.4973 279.768 68.1128 279.684C68.4126 280.167 67.3736 279.767 67.7288 280.246C67.4973 280.724 66.9891 280.578 66.9213 280.988C66.3736 280.882 65.8536 280.302 65.211 280.572C64.3804 280.477 63.4719 280.224 62.6017 280.184C61.9411 279.774 61.1511 279.842 60.5464 279.352C60.958 278.75 59.7785 278.958 59.5701 278.452C58.9038 278.159 58.5424 277.546 57.9778 277.135C57.5994 277.461 57.5317 277.09 57.1195 277.141C56.9947 276.741 57.2607 276.241 57.6102 275.914C57.5989 275.852 57.5938 275.808 57.5938 275.768C57.2883 276.213 56.3346 275.003 55.9111 274.749C55.2561 274.164 54.3075 274.468 53.5057 274.199C53.2968 274.665 52.574 274.896 52.3594 274.604C52.3024 274.722 52.2126 274.789 52.0545 274.756C51.2132 274.8 50.0274 275.532 50.2815 276.359C50.5638 277.603 49.0229 276.708 49.028 277.867C48.1465 277.783 47.1759 276.77 46.3227 277.366C45.3007 277.613 44.5949 276.05 43.5502 275.741C42.6186 276.517 41.1166 275.689 40.6818 277.018C40.4164 278.109 39.9026 277.417 39.6541 276.753C39.1968 275.915 38.5869 276.427 38.09 276.567C37.5254 276.432 36.8647 276.382 36.4412 276.393C35.662 276.849 36.029 275.527 35.2893 275.245C35.5378 274.868 35.2893 274.379 34.7077 274.452C34.4141 273.89 33.4203 274.261 32.754 274.069C33.1154 272.775 33.1549 271.431 33.3752 270.115C33.5897 269.338 33.4034 268.568 33.2905 267.797C32.9742 266.851 32.5959 265.907 32.0934 265.035C32.1894 264.472 32.4717 263.921 32.579 263.347C32.5959 262.616 32.771 261.918 33.0477 261.243C33.3526 260.664 33.2792 260.028 33.2509 259.403C33.0872 258.914 33.4824 258.571 33.6857 258.171C33.3639 257.553 33.1098 256.883 32.5564 256.422C32.7032 255.662 32.9065 254.892 32.9121 254.11C32.8783 253.345 33.2114 252.659 33.4542 251.95C33.7139 251.978 33.968 252.113 34.2165 252.113C34.8037 252.906 36.1024 251.905 36.1476 252.794C36.7631 253.862 37.7795 254.56 38.2481 255.55C39.3887 254.52 40.4842 255.562 41.5344 256.067C41.7829 255.173 42.5282 255.786 43.0929 255.505C42.6242 254.532 42.9178 252.602 44.0867 252.079C44.5723 251.528 44.081 249.8 45.583 249.913C46.5994 249.919 47.9376 250.369 48.7168 249.424C49.4396 250.16 49.7445 249.018 50.5407 249.373C51.1618 249.367 51.4159 249.632 51.5232 250.014C51.5345 249.885 51.5627 249.767 51.6135 249.677C52.613 249.536 53.4487 250.014 54.3295 250.476C54.3973 250.566 54.5949 250.431 54.6288 250.559V250.566C54.6119 250.307 54.6056 250.047 54.5718 249.778C54.233 248.996 55.4069 248.777 55.5938 248.175C55.6508 247.538 55.4871 246.909 55.5938 246.301C55.7412 245.491 56.4069 244.822 56.3956 243.978C56.1421 243.37 56.3623 242.683 56.3679 242.043C56.3623 241.851 56.3956 241.649 56.3335 241.463C56.3787 241.452 56.4238 241.447 56.4747 241.435C56.2883 241.413 56.1076 241.379 55.9326 241.317C55.255 240.664 54.5548 240.029 54.0692 239.207C53.1601 239.584 52.2623 239.46 51.6406 238.633C50.8281 238.121 51.1499 237.384 51.5678 236.754C51.923 236.316 51.6243 234.717 52.4876 235.286C53.2448 236.327 53.578 234.701 53.6401 234.099C53.1771 233.424 53.9444 233.559 54.3007 233.373C54.3854 232.76 54.967 232.355 54.9614 231.743C55.4752 231.084 56.7621 231.59 56.7965 230.544C57.3499 230.729 57.5531 229.425 57.9874 230.217C58.7101 230.314 59.4334 230.122 60.1048 229.993C61.1325 230.347 61.5334 229.166 62.4318 229.037C62.7361 229.189 63.0924 228.963 63.3459 229.042L63.3403 229.031L63.2838 228.958C63.9727 228.755 63.8316 227.906 63.8824 227.349C63.9614 226.859 63.7531 226.381 63.5775 225.954C63.4758 225.498 63.5041 224.992 63.2048 224.598C62.8999 224.154 62.4826 223.72 62.4318 223.153C62.4651 222.596 63.1376 222.517 63.25 223.091C63.2669 223.642 63.888 223.901 64.3177 223.547C64.6509 223.238 65.0399 222.613 65.5199 223.068C65.9722 223.231 66.4239 223.558 66.8525 223.136C67.2421 222.911 67.6769 223.209 67.9987 223.35C68.1963 223.727 68.5182 223.901 68.8852 223.929C69.3307 224.424 70.0202 223.968 70.4262 223.66C70.8722 223.052 71.4425 223.828 71.9733 223.924C72.2161 224.155 73.3059 224.351 72.6453 224.728C72.7576 224.695 72.8316 224.577 72.8988 224.52C73.2432 224.74 73.7063 224.976 74.1354 225.067C74.5419 225.19 74.8017 225.68 75.0665 226.006C75.3997 226.074 75.6481 226.163 75.9022 226.389C76.4217 226.276 76.4951 226.822 76.5233 227.216L76.5442 227.078Z\" fill=\"#BAC8FF\" stroke=\"white\" stroke-width=\"1.77165\"/>\r\n            <path d=\"M73.2697 50.9169C72.8344 50.5907 72.5521 50.0112 71.9422 49.9043C71.4623 49.9943 70.6379 49.5274 71.084 49.0211C71.1065 48.6048 72.0495 48.3967 71.4792 47.9635C71.2025 47.5078 70.3273 47.8791 70.6768 47.1027C70.4007 46.4445 70.1692 47.7891 69.8982 48.0366C70.0337 48.7567 69.1528 48.5823 68.9891 49.1336C68.9772 49.5949 68.2437 49.3755 68.4244 49.8931C67.7694 50.4444 67.3177 49.4712 66.849 49.2518C66.5724 48.9705 66.4538 48.6048 66.0416 48.9086C66.0529 49.4374 65.4538 49.6455 65.2511 49.0942C64.9292 49.0211 64.4436 48.5542 64.2465 48.6892C64.2742 48.8523 64.4323 49.1055 64.4893 49.2743C64.3363 48.9873 64.2686 48.6667 64.0088 48.5035C63.5176 48.5035 63.7604 47.9353 63.3877 47.7666C63.0828 47.8341 63.0094 47.3728 63.1788 47.1815C63.6474 46.7933 62.9416 46.7314 62.6649 46.602C62.3092 46.4614 62.36 46.0001 62.3431 45.6851C62.168 45.3869 61.8236 45.2744 61.5531 45.4769C61.4459 45.1225 61.2827 44.6612 60.8247 44.8693C60.5255 44.8525 60.198 44.6724 59.893 44.8075C59.893 44.875 59.8592 44.9312 59.8196 44.9818C59.4583 45.1562 59.9834 45.8594 59.5599 45.8032C59.2493 45.7526 58.8597 45.7751 58.5661 45.9045C58.0974 46.0339 58.2217 46.6471 57.7699 46.7427C57.6796 46.9733 57.5554 47.1196 57.2787 47.0296C57.0924 47.0015 56.5847 47.4234 56.731 47.0127C56.9625 46.5964 56.2341 46.7989 56.273 47.0409C56.2115 47.1365 56.2058 47.2096 56.2392 47.2771C56.194 47.2265 56.1601 47.2209 56.1099 47.3728C56.0647 47.5247 55.8891 47.4909 55.8157 47.5922C55.7874 47.5528 55.6463 47.6428 55.5108 47.6822C54.9348 47.7497 55.3583 46.9508 55.1488 46.7708C54.8608 46.9452 54.4718 46.7033 54.3532 47.069C54.0088 47.3278 53.557 47.4853 53.1166 47.519C52.8908 47.204 52.5638 47.474 52.2696 47.5978C51.9308 47.3446 52.4452 46.7933 52.6028 46.4895C53.0381 46.3995 52.2753 46.5627 52.1793 46.3939C51.7219 46.0114 51.7953 46.8271 51.4119 46.8721C51.2538 47.2715 50.836 47.339 50.5361 47.5359C50.0059 47.7722 49.9099 47.024 49.4915 46.889C49.1928 47.0915 48.8365 46.8158 48.583 47.0465C48.2775 47.3559 47.5152 46.889 47.4757 47.4571C47.0245 47.5415 46.8043 47.9185 46.928 48.4135C46.9054 48.4585 46.8659 48.4923 46.8376 48.5317L46.8602 48.5486C46.7586 48.5317 46.6287 48.571 46.5101 48.5317C46.2109 48.3741 45.8777 48.8017 45.6462 48.4585C45.4034 48.1772 45.1211 48.7286 44.8501 48.5767C44.5903 48.3967 44.2628 48.6386 44.0087 48.4023C43.7151 48.5485 43.3311 48.3854 43.0545 48.5879C43.0488 48.8411 42.7778 48.948 42.6084 48.7342C42.6084 48.5091 42.4841 48.1041 42.3373 47.9466C42.3373 47.806 42.4051 47.4122 42.2865 47.294C42.2809 47.1646 42.2752 47.0409 42.2696 46.9171C42.1002 46.6752 42.1171 46.5571 42.1171 46.2758C42.0607 46.242 42.0042 46.2026 41.9534 46.1632C42.0268 46.2083 42.1058 46.2364 42.1792 46.2364C42.4841 45.9832 42.7891 45.8032 43.1843 45.7582C43.5683 45.7076 43.6191 45.2631 43.2464 45.145C43.077 44.8918 42.9246 44.6218 42.6084 44.8243C42.2075 44.7512 41.8913 44.498 41.5412 44.3068C41.129 44.4024 40.8184 44.1099 40.8636 43.7105C40.7394 43.3729 40.5135 43.0691 40.2481 42.8216C40.0053 42.6359 39.6213 42.4897 39.3334 42.6472C39.0849 42.8385 38.6897 43.0072 38.6332 42.5572C38.4073 42.1803 37.9669 42.1234 37.5942 42.2253C37.1143 42.169 37.0578 41.2914 36.5666 41.5277C36.3181 41.4545 36.0979 41.2745 35.8212 41.2858C35.6518 41.2126 35.6066 41.3139 35.6123 41.4714C35.5106 42.1634 35.409 42.861 35.2566 43.5473C35.2001 43.8342 35.1267 44.1155 35.0872 44.4024C35.4147 45.2631 35.7478 46.1295 36.081 46.9959L36.5383 48.5092L36.9618 48.3516L36.9392 48.7229V48.7398L37.0522 50.3319V50.3375V50.3432L37.0578 50.36L37.4926 52.0927L37.5321 52.9028C37.566 53.5048 37.5999 54.1011 37.6225 54.6974C37.7806 55.0181 37.9725 55.3219 38.1363 55.6369C38.0968 55.9238 38.0572 56.2051 38.0121 56.492C38.1815 56.8633 38.3847 57.2178 38.5711 57.589C38.7744 57.9378 39.0228 58.2641 39.243 58.6017C39.3051 58.6804 39.356 58.8267 39.4237 58.8604L39.4124 58.8722C39.5254 59.0523 39.6383 59.2323 39.7512 59.4123C39.8246 59.598 39.8641 59.7949 39.9206 59.9861C40.0674 60.5037 40.2142 61.0213 40.3554 61.5388C40.3667 61.8201 40.2989 62.1183 40.2763 62.4052C40.3667 62.9002 40.4796 63.3897 40.5813 63.8791C40.6434 64.3967 40.6377 64.9199 40.6773 65.4374C40.8128 65.9269 40.9765 66.405 41.1233 66.8945C41.2363 67.1026 41.1798 67.3333 41.1629 67.5583C41.1403 67.7215 41.3944 67.4627 41.496 67.4402C41.8066 67.0801 42.3317 67.2377 42.6818 66.9564C43.2182 66.9339 42.8963 67.9127 43.3989 67.6708C43.7829 67.7046 44.0821 67.4627 44.4435 67.5639C44.9009 67.7215 45.0872 67.4346 45.0929 67.0126C45.2171 66.6976 45.4994 66.2025 45.8947 66.3207C46.0358 66.1069 46.2109 66.0394 46.2278 66.3488C46.3125 66.7201 46.6005 67.0182 46.7642 67.3445C47.1821 67.4683 47.2555 68.2784 47.7524 67.8902C48.1595 67.6933 48.5773 67.4008 48.487 66.9057C48.1595 66.6863 48.3571 66.4669 48.4751 66.2307C48.7405 65.8594 48.3221 65.6962 48.0065 65.7131C47.6852 65.3868 48.43 65.5106 48.5937 65.3643C48.8817 65.685 49.3108 65.5218 49.4243 65.1393L49.4068 65.0661C49.356 64.9874 49.3052 64.8805 49.2493 64.768C49.4017 65.0436 49.548 65.3137 49.797 65.5274C49.9382 65.91 50.723 66.1688 50.4746 66.5626C50.2939 67.0183 50.7733 67.0633 51.0957 67.0914C51.2205 67.4796 51.9997 67.7383 51.6265 68.1715C51.8518 68.239 52.2984 68.419 52.5186 68.2615C52.5305 67.9015 52.6028 67.3727 52.4114 67.007C51.9263 66.9001 51.7564 66.4219 51.8755 65.955C51.8015 65.2012 52.5977 65.9213 52.9986 65.685C52.9252 65.5725 52.8693 65.4543 52.8405 65.3418C52.9478 65.6113 53.2363 65.8256 53.5243 65.9494C53.897 66.5851 54.6141 66.1463 54.823 65.6062C55.2296 65.0549 56.2228 65.3193 56.364 64.4529C56.6068 64.2335 56.5729 63.9748 56.5791 63.7216C56.613 63.8904 56.7423 64.0254 56.9455 64.0648C57.1375 64.5373 57.5554 65.0549 58.0805 64.6667C58.5322 64.4586 59.1138 64.4979 59.3628 63.9691C60.0517 64.2223 60.0687 63.0521 60.7745 63.114C61.3273 62.9678 61.757 63.5528 62.2928 63.4178C62.8518 63.4459 63.4391 63.9073 63.9868 63.4403C64.4555 63.2041 64.7271 62.709 65.2629 62.6077L65.2691 62.6021V62.6077C65.6644 62.8102 65.9919 63.204 66.4662 63.1422C67.0139 63.2378 67.5159 63.1984 67.9959 62.9396C68.4589 62.9565 68.7644 62.5346 69.2217 62.5177C69.9213 62.4952 70.1873 61.6007 70.8931 61.6007C71.3674 61.5951 71.6441 60.9144 72.1692 61.28C72.5645 61.4544 73.3719 61.567 73.2251 60.9088C72.9428 60.3968 73.5583 60.0649 73.6368 59.6655C73.4956 59.2548 74.3144 59.1085 73.9135 58.6303C73.8231 58.1634 74.5521 57.7302 74.2127 57.1789C74.32 56.7514 73.7271 56.3857 74.1167 55.9975C74.3872 55.5081 74.7096 54.9793 74.6588 54.3942C74.6193 54.1242 73.9925 53.8766 73.9812 54.0679C73.9693 54.096 73.9643 54.1242 73.953 54.1523C73.9925 53.916 73.6989 53.7079 73.936 53.4491C73.761 53.044 73.4956 52.7459 73.0891 52.5265C73.1794 51.992 72.259 51.7445 72.9597 51.3338C73.0772 51.2095 73.2472 51.1026 73.2697 50.9169Z\" fill=\"#BAC8FF\" stroke=\"white\" stroke-width=\"1.77165\"/>\r\n            <path d=\"M60.7203 18.0106C60.6243 17.6955 60.556 17.3636 60.4436 17.0542C60.2516 16.8573 59.9637 16.7167 59.9693 16.4073C59.8445 16.1541 59.9405 15.9403 60.1048 15.7378C60.1494 15.5634 60.46 15.3496 60.3527 15.1977L60.4035 15.2427C60.6915 14.7758 60.9456 14.2864 61.3465 13.8982C61.7135 13.5213 61.8948 13.015 62.1771 12.5705C62.2443 12.2386 62.3121 11.9011 62.3798 11.5692C62.6565 11.5073 62.9501 11.4792 63.2155 11.406C63.3906 11.0797 63.5707 10.7534 63.7457 10.4328C64.1466 10.3428 64.5583 10.2978 64.9547 10.1852C65.1862 10.0502 65.4453 9.93209 65.6605 9.78019C65.6543 9.18949 65.6661 8.58192 65.643 7.99123C65.3951 7.55242 65.1805 7.07987 64.9151 6.65794C64.6272 6.40478 64.3505 6.11787 64.0625 5.88159C63.7802 6.01661 63.543 6.29788 63.2037 6.22475C63.0004 6.25288 62.7463 6.13474 62.5938 6.33164C62.2607 6.56792 61.9219 6.80419 61.5887 7.04666C61.4645 6.70912 61.2556 6.39409 61.3064 6.0228C61.29 5.57274 61.3183 5.11706 61.2725 4.667C61.1703 4.31821 61.0072 3.96379 60.9394 3.60937C61.0072 3.33934 61.1427 3.07493 61.1765 2.8049C60.9902 2.5118 60.8321 2.18043 60.6288 1.9104C60.2669 2.28732 59.9174 2.6755 59.556 3.05805C59.2172 2.96241 58.8784 2.82177 58.5396 2.74864C58.4267 3.0468 58.3702 3.36746 58.2742 3.67125C57.9298 3.65943 57.5797 3.60375 57.2353 3.615C56.8338 3.98067 56.4555 4.38008 56.0376 4.72325C55.7722 4.80763 55.5018 4.89203 55.2358 4.97641C55.1178 5.30833 54.9252 5.62337 54.8411 5.96091C54.7903 5.84277 54.5588 5.84278 54.4289 5.77527C54.1353 5.68526 53.8417 5.57274 53.5537 5.49398C53.2595 5.76964 52.9665 6.0453 52.6728 6.31533C52.4125 6.20282 52.1533 6.07341 51.8987 5.97215C51.5435 6.1803 51.1872 6.39408 50.8315 6.60786C50.6282 6.43909 50.4306 6.25344 50.2222 6.09592C49.7084 6.04529 49.1889 5.97217 48.6751 5.93279C47.9749 6.03405 47.2747 6.12405 46.574 6.19156C46.5401 6.45597 46.5853 6.73163 46.5796 7.00166C46.2352 7.21544 45.8908 7.42359 45.5463 7.63174C45.1002 7.65424 44.6598 7.67112 44.2137 7.688C43.9145 7.59236 43.6208 7.46297 43.3272 7.35045C42.819 7.55298 42.3221 7.78364 41.8139 7.99179C41.509 8.31246 41.2098 8.64436 40.9048 8.96503C40.7919 9.50509 40.7185 10.062 40.6225 10.6077C40.3515 10.8046 40.0804 11.0015 39.8094 11.1984L39.8376 11.2491C39.7868 11.2097 39.7304 11.2266 39.6513 11.3166C39.4876 11.4403 39.3238 11.5641 39.1205 11.6091C38.6575 11.7666 38.1888 11.9185 37.7315 12.0873C37.4322 12.363 37.1216 12.6274 36.8337 12.9086C36.845 13.3081 36.8676 13.7131 36.8845 14.1182C36.5175 14.4051 36.1053 14.647 35.7947 14.9958C35.6592 15.1252 35.5293 15.2546 35.3994 15.384L35.439 15.4515C35.4164 15.4233 35.3882 15.4121 35.3656 15.4177C35.2639 15.5415 35.1397 15.6202 34.9816 15.6315C34.575 15.7159 34.1685 15.789 33.7676 15.8846C33.2425 16.6272 32.7343 17.3867 32.1978 18.118C32.0454 18.2531 31.8703 18.3712 31.7292 18.5174C31.6953 18.8437 31.6953 19.1813 31.6501 19.5019C31.5033 19.8057 31.3226 20.0983 31.2153 20.4077C31.4186 20.8746 31.6275 21.3472 31.8365 21.8141C31.7122 22.0054 31.588 22.1911 31.4638 22.3823C31.4073 22.5398 31.5033 22.7367 31.4977 22.9055C31.5203 23.2037 31.6219 23.5075 31.4751 23.7888C31.3565 24.1826 31.1984 24.5707 31.1024 24.9645C31.2775 25.589 31.3622 26.2472 31.6671 26.8322C31.8591 27.2542 32.0172 27.7042 32.2374 28.1149C32.5705 28.5087 32.9545 28.8856 33.265 29.2907C33.4344 30.3089 33.5756 31.3384 33.7619 32.351C33.9144 32.6942 34.0669 33.043 34.2193 33.3862C34.6541 33.2737 35.0607 33.0599 35.4898 32.9305C35.8455 32.8742 36.5909 33.1443 36.5401 32.4804C36.828 32.1316 37.116 32.8905 37.5113 32.5142C37.6976 32.2273 37.9517 31.3778 38.5163 31.8785C38.8326 31.4284 39.4311 31.3159 39.9562 31.4228C40.391 31.164 40.775 31.5635 40.9274 31.8729C41.7631 32.0079 40.8484 30.984 41.3735 30.6802C41.3396 30.5621 41.3283 30.4327 41.3283 30.3033C41.334 30.3933 41.3453 30.4833 41.3679 30.5621L41.3735 30.6802C41.8309 30.6465 41.9607 31.029 42.068 31.254C42.74 31.2203 43.1014 32.1879 43.6265 31.4228C44.3492 30.9221 44.3662 32.2273 44.8744 32.4129C45.1906 32.7336 45.7609 32.2442 45.8456 31.9798C45.7665 31.3778 46.303 30.7871 45.8173 30.2527C45.2075 29.842 46.111 29.6619 46.0714 29.2063C47.0257 29.5494 46.6643 28.3231 46.8394 27.828C46.9918 27.3723 47.1556 26.7929 46.8733 26.5172C47.3701 26.3428 47.5847 25.3077 48.1155 25.7071C48.2341 26.0503 48.155 26.5903 48.7197 26.3147C48.9512 26.2415 49.2499 26.1853 49.2222 26.0615L49.2668 26.084C49.6847 26.1909 49.5943 25.4539 49.967 25.2852C50.5096 24.9645 51.0455 24.4301 51.7513 24.6607C52.1805 24.5538 52.7395 24.5876 53.0105 24.07C53.3041 24.0082 53.705 24.7676 54.2014 24.4976C54.6593 24.1263 55.2064 24.2669 55.5966 24.6157L55.7152 24.6045C56.4041 24.6438 56.6582 23.8 57.3188 23.7662C57.8445 23.4624 58.482 23.3724 58.9168 22.9786C59.5831 23.0799 59.7355 22.1686 60.255 21.9942C60.6221 21.5891 61.1811 21.5328 61.582 21.8535C62.0055 22.101 62.0902 21.5778 62.1918 21.2965C62.2714 20.7508 62.2765 20.1827 62.3273 19.6314C62.3047 19.457 62.4233 19.2488 62.3273 19.0913C62.0224 18.7031 61.9546 18.208 61.7852 17.7636C61.3843 17.8311 60.9772 17.9549 60.5769 18.0393H60.5882C60.635 18.0275 60.6751 18.0162 60.7203 18.0106Z\" fill=\"#BAC8FF\"/>\r\n            <path d=\"M41.3735 30.6802C40.8484 30.984 41.7631 32.0079 40.9274 31.8729C40.775 31.5635 40.391 31.164 39.9562 31.4228C39.4311 31.3159 38.8326 31.4284 38.5163 31.8785C37.9517 31.3778 37.6976 32.2273 37.5113 32.5142C37.116 32.8905 36.828 32.1316 36.5401 32.4804C36.5909 33.1443 35.8455 32.8742 35.4898 32.9305C35.0607 33.0599 34.6541 33.2737 34.2193 33.3862C34.0669 33.043 33.9144 32.6942 33.7619 32.351C33.5756 31.3384 33.4344 30.3089 33.265 29.2907C32.9545 28.8856 32.5705 28.5087 32.2374 28.1149C32.0172 27.7042 31.8591 27.2542 31.6671 26.8322C31.3622 26.2472 31.2775 25.589 31.1024 24.9645C31.1984 24.5707 31.3565 24.1825 31.4751 23.7888C31.6219 23.5075 31.5203 23.2037 31.4977 22.9055C31.5033 22.7367 31.4073 22.5398 31.4638 22.3823C31.588 22.1911 31.7122 22.0054 31.8365 21.8141C31.6275 21.3472 31.4186 20.8746 31.2153 20.4077C31.3226 20.0983 31.5033 19.8057 31.6501 19.5019C31.6953 19.1813 31.6953 18.8437 31.7292 18.5174C31.8703 18.3712 32.0454 18.2531 32.1978 18.118C32.7343 17.3867 33.2425 16.6272 33.7676 15.8846C34.1685 15.789 34.575 15.7159 34.9816 15.6315C35.1397 15.6202 35.2639 15.5415 35.3656 15.4177C35.3882 15.4121 35.4164 15.4233 35.439 15.4515L35.3994 15.384C35.5293 15.2546 35.6592 15.1252 35.7947 14.9958C36.1053 14.647 36.5175 14.4051 36.8845 14.1182C36.8676 13.7131 36.845 13.3081 36.8337 12.9086C37.1216 12.6274 37.4322 12.363 37.7315 12.0873C38.1888 11.9185 38.6575 11.7666 39.1205 11.6091C39.3238 11.5641 39.4876 11.4403 39.6513 11.3166C39.7304 11.2266 39.7868 11.2097 39.8376 11.2491L39.8094 11.1984C40.0804 11.0015 40.3515 10.8046 40.6225 10.6077C40.7185 10.062 40.7919 9.50509 40.9048 8.96503C41.2098 8.64436 41.509 8.31246 41.8139 7.99179C42.3221 7.78364 42.819 7.55298 43.3272 7.35045C43.6208 7.46297 43.9145 7.59236 44.2137 7.688C44.6598 7.67112 45.1002 7.65424 45.5463 7.63174C45.8908 7.42359 46.2352 7.21544 46.5796 7.00166C46.5853 6.73163 46.5401 6.45597 46.574 6.19156C47.2747 6.12405 47.9749 6.03405 48.6751 5.93279C49.1889 5.97217 49.7084 6.04529 50.2222 6.09592C50.4306 6.25344 50.6282 6.43909 50.8315 6.60786C51.1872 6.39408 51.5435 6.1803 51.8987 5.97215C52.1533 6.07341 52.4125 6.20281 52.6728 6.31533C52.9665 6.0453 53.2595 5.76964 53.5537 5.49398C53.8417 5.57274 54.1353 5.68526 54.4289 5.77527C54.5588 5.84278 54.7903 5.84277 54.8411 5.96091C54.9252 5.62337 55.1178 5.30833 55.2358 4.97641C55.5018 4.89203 55.7722 4.80763 56.0376 4.72325C56.4555 4.38008 56.8338 3.98067 57.2353 3.615C57.5797 3.60375 57.9298 3.65943 58.2742 3.67125C58.3702 3.36746 58.4267 3.0468 58.5396 2.74864C58.8784 2.82177 59.2172 2.96241 59.556 3.05805C59.9174 2.6755 60.2669 2.28732 60.6288 1.9104C60.8321 2.18043 60.9902 2.5118 61.1765 2.8049C61.1427 3.07493 61.0072 3.33934 60.9394 3.60937C61.0072 3.96379 61.1703 4.31821 61.2725 4.667C61.3183 5.11706 61.29 5.57274 61.3064 6.0228C61.2556 6.39409 61.4645 6.70912 61.5887 7.04666C61.9219 6.80419 62.2607 6.56792 62.5938 6.33164C62.7463 6.13474 63.0004 6.25288 63.2037 6.22475C63.543 6.29788 63.7802 6.01661 64.0625 5.88159C64.3505 6.11787 64.6272 6.40478 64.9151 6.65794C65.1805 7.07987 65.3951 7.55242 65.643 7.99123C65.6661 8.58192 65.6543 9.18949 65.6605 9.78019C65.4453 9.93209 65.1862 10.0502 64.9547 10.1852C64.5583 10.2978 64.1466 10.3428 63.7457 10.4328C63.5707 10.7534 63.3906 11.0797 63.2155 11.406C62.9501 11.4792 62.6565 11.5073 62.3798 11.5692C62.3121 11.9011 62.2443 12.2386 62.1771 12.5705C61.8948 13.015 61.7135 13.5213 61.3465 13.8982C60.9456 14.2864 60.6915 14.7758 60.4035 15.2427L60.3527 15.1977C60.46 15.3496 60.1494 15.5634 60.1048 15.7378C59.9405 15.9403 59.8445 16.1541 59.9693 16.4073C59.9637 16.7167 60.2516 16.8573 60.4436 17.0542C60.556 17.3636 60.6243 17.6955 60.7203 18.0106C60.6751 18.0162 60.635 18.0275 60.5882 18.0393H60.5769C60.9772 17.9549 61.3843 17.8311 61.7852 17.7636C61.9546 18.2081 62.0224 18.7031 62.3273 19.0913C62.4233 19.2488 62.3047 19.457 62.3273 19.6314C62.2765 20.1827 62.2714 20.7508 62.1918 21.2965C62.0902 21.5778 62.0055 22.101 61.582 21.8535C61.1811 21.5328 60.6221 21.5891 60.255 21.9942C59.7355 22.1685 59.5831 23.0799 58.9168 22.9786C58.482 23.3724 57.8445 23.4624 57.3188 23.7662C56.6582 23.8 56.4041 24.6438 55.7152 24.6044L55.5966 24.6157C55.2064 24.2669 54.6593 24.1263 54.2014 24.4976C53.705 24.7676 53.3041 24.0082 53.0105 24.07C52.7395 24.5876 52.1805 24.5538 51.7513 24.6607C51.0455 24.4301 50.5096 24.9645 49.967 25.2852C49.5943 25.4539 49.6847 26.1909 49.2668 26.084L49.2222 26.0615C49.2499 26.1853 48.9512 26.2415 48.7197 26.3147C48.155 26.5903 48.2341 26.0503 48.1155 25.7071C47.5847 25.3077 47.3702 26.3428 46.8733 26.5172C47.1556 26.7929 46.9918 27.3723 46.8394 27.828C46.6643 28.3231 47.0257 29.5494 46.0714 29.2063C46.111 29.6619 45.2075 29.842 45.8173 30.2527C46.303 30.7871 45.7665 31.3778 45.8456 31.9798C45.7609 32.2442 45.1906 32.7336 44.8744 32.4129C44.3662 32.2273 44.3492 30.9221 43.6265 31.4228C43.1014 32.1879 42.74 31.2203 42.068 31.254C41.9607 31.029 41.8309 30.6465 41.3735 30.6802ZM41.3735 30.6802C41.3396 30.5621 41.3283 30.4327 41.3283 30.3033C41.334 30.3933 41.3453 30.4833 41.3679 30.5621L41.3735 30.6802Z\" stroke=\"white\" stroke-width=\"1.77165\"/>\r\n            <path d=\"M45.8168 32.1952C45.7208 31.6833 46.0878 31.1882 46.0201 30.6819C45.7942 30.2994 45.3142 29.7537 45.9805 29.5399C46.0201 29.1461 46.2346 29.2192 46.5678 29.2474C46.9913 28.7917 46.6073 28.1222 46.8896 27.599C46.9913 27.2502 47.251 26.7833 46.8049 26.5751C47.2284 26.3276 47.5107 25.7819 47.8721 25.5794C48.4599 25.6131 47.9292 26.6145 48.6288 26.3445C49.0641 26.187 49.7304 26.1251 49.7191 25.5344C50.1364 25.1912 50.5599 24.7468 51.1138 24.6905C51.4695 24.4543 51.9213 24.8706 52.2268 24.5049C52.7626 24.8312 53.0116 23.5429 53.3674 24.2686C53.7344 24.668 54.2877 24.5218 54.6994 24.2742C55.2584 24.2067 55.6537 24.6061 55.7446 25.1237C55.7276 24.9774 55.6937 24.8312 55.609 24.6849C56.0839 24.5893 56.6254 24.1898 57.0433 23.8073C57.6136 23.5935 58.3137 23.481 58.7485 23.0366C59.3646 23.0647 59.7429 22.5078 60.076 22.0521C60.4606 21.9621 60.6689 21.4783 61.0981 21.692C61.3922 21.6189 62.058 22.249 62.1207 21.512C62.137 21.2364 62.3183 21.197 62.5605 21.2645C62.8491 21.2763 63.0744 21.5064 63.3347 21.602C63.5266 21.6977 63.713 21.8496 63.927 21.7314C64.2545 21.6583 64.5713 21.5345 64.9095 21.5964C65.2088 21.6077 65.5137 21.6752 65.7853 21.5233C66.0444 21.4389 66.3047 21.3264 66.5645 21.2589C66.7734 21.3489 66.9818 21.4276 67.1009 21.1745C67.2985 20.9832 67.276 21.6752 67.4171 21.7708C67.5526 22.2434 66.7954 22.1365 66.7734 22.6653C66.5131 22.9747 66.6887 23.4754 66.6035 23.8804C67.0157 24.5274 66.0106 24.8031 65.9772 25.3938C65.9208 25.9676 65.87 26.5751 65.5876 27.1152C65.4583 27.7903 64.6785 27.7453 64.3567 28.2629C64.3228 28.4766 64.1929 28.5779 64.0292 28.6454C64.2726 28.6285 64.5261 28.6679 64.7519 28.6623C65.3561 28.8085 65.8756 28.066 66.4007 28.5723C66.9259 28.6229 67.3719 28.3022 67.8406 28.1335C68.4222 27.9928 68.3482 28.7242 68.8677 28.7242C69.1111 28.6679 69.3144 28.9098 69.591 28.8704C69.822 29.1011 70.5792 29.3599 69.9914 29.7705C69.6249 30.1081 69.2974 30.5469 69.5114 31.042C69.1676 31.4695 69.7774 32.1165 69.3703 32.4146C69.0823 32.5778 69.246 32.9547 69.1275 33.1684L69.1947 33.146C69.4098 33.461 69.4657 33.8154 69.9236 33.8323C70.2788 33.5397 70.9733 33.4666 71.0981 34.0404C71.2901 34.5411 71.6966 33.9561 71.9841 34.2711C72.4075 33.8885 72.7859 34.5411 73.2319 34.4117C73.5594 34.8449 73.8644 34.3555 74.1077 34.2486C74.5312 34.6705 75.1015 34.1586 75.3387 33.7704C75.8294 33.731 75.6091 32.9265 76.0558 32.9941C76.5866 33.326 76.8576 33.9167 77.2139 34.4117C77.5182 34.7887 77.8237 35.5988 77.2359 35.8575C77.4002 36.527 76.3099 36.0826 76.4685 36.7576C77.0671 36.7745 76.2082 36.977 76.4516 37.2865C76.237 37.5509 75.9208 37.7253 75.6667 37.9615C75.0061 37.9672 75.6323 38.856 75.136 38.9854C74.7294 39.0136 74.1704 39.0248 73.9163 38.9404C73.8429 39.413 74.0185 39.9924 73.4539 40.2737C73.0016 40.0205 72.5273 40.2062 72.3584 40.6956C72.0371 40.8306 72.0817 41.0051 72.093 41.3145C72.1213 41.8208 71.6752 42.1189 71.94 42.6084C71.9118 42.6196 71.8835 42.6252 71.861 42.6309C72.0755 42.7597 71.8666 43.2947 71.9733 43.5703C71.7362 43.7447 71.3471 44.0823 71.0755 44.3749C70.5956 44.5886 71.1715 45.1568 70.7542 45.3368C70.5284 45.1568 70.4041 45.2525 70.5001 45.5337C70.1613 45.5844 70.2974 46.0963 70.5905 45.7925C70.844 45.9444 70.7091 46.5632 70.534 46.8389C70.4318 47.0358 70.2172 47.3058 70.1557 47.5702C69.783 47.8797 70.0422 48.5829 69.5007 48.6954C68.9129 48.701 69.0829 49.6236 68.4329 49.5336C68.5289 49.8205 68.3657 50.0062 68.1054 50.0512C67.6204 50.0849 67.2754 49.6517 67.0382 49.2917C66.6718 49.3255 66.6085 48.6672 66.3098 48.8079C65.8355 48.7966 66.1009 49.5561 65.5475 49.4436C65.3381 48.9541 64.7169 48.9598 64.3561 48.5941C64.1867 48.7179 64.1579 48.6729 64.0117 48.5041C63.5266 48.5153 63.7638 47.9528 63.4188 47.8009C62.9727 47.7896 63.0461 47.1989 63.3347 46.957C63.3798 46.912 63.4527 46.8839 63.5323 46.8614C63.3968 46.8614 63.2663 46.8333 63.154 46.7714C62.7017 46.6926 62.2725 46.4057 62.3465 45.8938C62.4137 45.3368 61.7474 45.3762 61.5159 45.4043C61.4544 44.9768 61.1828 44.7011 60.7485 44.8643C60.3702 44.808 60.0258 44.7236 59.67 44.718C59.7604 44.7293 59.8394 44.7574 59.8959 44.808C59.6864 45.1343 59.6582 45.3087 59.7316 45.6969C59.4611 45.9444 58.5458 45.5787 58.224 46.175C58.1449 46.6082 57.7333 46.7376 57.5351 47.0527C57.2471 46.8333 56.7615 47.4183 56.7107 47.0639C57.0212 46.6251 56.2928 46.7545 56.2815 47.0077C56.2815 47.5309 55.1522 48.0597 55.1805 47.2777C55.3335 46.9064 55.1743 46.6082 54.7852 46.867C54.3453 46.7939 54.1415 47.4183 53.6215 47.4296C53.1867 47.7109 52.9156 47.1652 52.5435 47.4746C52.1821 47.7952 52.0974 47.4296 52.1991 47.1202C52.3177 46.8389 52.5661 46.6532 52.7242 46.4338C52.6175 46.5126 52.465 46.5295 52.2843 46.4563C51.81 45.9556 51.8213 46.7208 51.4487 46.822C51.2962 47.2102 50.8959 47.3114 50.6017 47.514C50.0822 47.7952 49.9128 47.1202 49.552 46.9064C49.2352 47.0302 48.8575 46.8502 48.5859 47.0471C48.2815 47.3508 47.5187 46.8839 47.4797 47.4577C47.129 47.5534 46.8303 47.7727 46.915 48.2115C47.0054 48.8304 46.1866 48.3241 45.8817 48.6054C45.605 48.3128 45.3114 48.3859 44.9952 48.5997C44.7355 48.4422 44.4136 48.5941 44.1482 48.4591C43.832 48.476 43.2222 48.3522 43.0189 48.6898C42.7309 49.1736 42.5277 48.4366 42.4712 48.1497C42.2284 47.6827 42.4204 47.0864 42.1324 46.6082C42.0251 45.9894 42.8439 45.8544 43.2899 45.7137C43.7699 45.5393 43.3634 45.2187 43.1601 45.0274C43.0189 44.5661 42.6858 44.9093 42.3809 44.7574C42.0985 44.6955 42.0759 44.5717 42.1437 44.4255C41.9912 44.5717 41.8218 44.5886 41.5903 44.3073C40.6925 44.4873 40.9805 43.3347 40.3933 42.9572C39.9641 42.3833 39.3091 42.6477 38.7896 42.8671C38.6315 42.2652 38.0387 42.1077 37.5248 42.1977C37.1973 41.9952 36.8698 41.6576 36.8755 41.3032C36.8529 41.3538 36.8416 41.4045 36.8246 41.4551C36.6835 41.5114 36.5367 41.5732 36.3842 41.4607C36.1696 41.2976 35.8986 41.2976 35.6445 41.2582C35.6671 41.1288 35.684 40.9994 35.7066 40.87C35.4808 40.4481 35.2605 40.0318 35.0347 39.6099C35.0177 39.413 35.0516 39.2104 35.046 39.0079C35.0855 38.3835 35.0516 37.7534 35.029 37.129C34.8032 36.2682 34.5547 35.4187 34.3176 34.558C34.2611 34.2036 34.2611 33.8323 34.2272 33.4666C34.1821 33.3147 34.4192 33.3597 34.5039 33.2979C34.8314 33.2135 35.1081 33.0222 35.4356 32.9547C35.7179 32.8253 36.1245 33.0391 36.4294 32.8872C36.4689 32.6284 36.6552 32.0996 36.9432 32.4934C37.1465 32.7465 37.4683 32.4371 37.7055 32.5553C37.5982 32.4315 37.5305 32.3077 37.7394 32.0883C37.9257 31.3401 38.6485 32.2177 38.88 31.5426C39.3712 31.2782 39.9641 31.4695 40.4441 31.3738C40.6982 31.537 40.8168 31.627 40.9353 31.8745C41.7654 32.0039 40.8563 30.9801 41.3758 30.6763C41.8331 30.6481 41.9687 31.0307 42.0759 31.2557C42.7422 31.2164 43.1093 32.1896 43.6344 31.4189C44.3571 30.9238 44.3684 32.2233 44.8766 32.409C45.2578 32.8197 45.4385 32.2008 45.8168 32.1952Z\" fill=\"#BAC8FF\" stroke=\"white\" stroke-width=\"1.77165\"/>\r\n            <path d=\"M73.2703 50.9175C72.9767 51.3844 72.3386 51.7557 73.0445 52.1777C73.0332 52.8134 74.2754 53.044 73.8243 53.7697C73.8971 53.9498 73.9874 53.9498 74.0834 53.8654C74.0614 53.9104 74.0383 53.961 74.0162 54.0116C74.3437 54.006 74.6261 54.2029 74.7384 54.4954C74.7893 54.5348 74.8401 54.5573 74.8965 54.5742C74.8175 54.563 74.7435 54.5348 74.6712 54.4786C74.6594 55.1368 74.2754 55.6993 73.9711 56.2507C73.9541 56.5376 74.0891 56.6838 74.2477 56.8189C74.1455 56.8189 74.2082 57.1114 74.2359 57.2127C74.3652 57.494 74.224 57.7809 74.1337 58.0397C74.032 58.2534 73.739 58.4053 73.9253 58.6641C74.0608 58.8779 74.0213 59.1198 73.8124 59.2717C73.5419 59.3392 73.6317 59.6317 73.6374 59.8455C73.4454 60.0199 73.2139 60.1943 73.1794 60.4699C73.145 60.7287 73.2861 60.9706 73.1851 61.2351C73.1568 61.4995 73.569 61.3588 73.7384 61.3757C73.9411 61.1788 74.0038 60.8919 73.9982 60.6162C74.0998 60.4643 74.4386 60.5431 74.4047 60.2618C74.4843 60.0705 74.5685 59.8736 74.6526 59.6767C74.6701 59.4348 74.8677 59.2492 75.0371 59.086C75.6136 59.0917 76.1439 59.3729 76.7255 59.3673C76.7255 59.3336 76.7311 59.3054 76.7367 59.2717C76.7311 59.3223 76.7486 59.3673 76.7819 59.4123C77.132 59.5412 77.7644 60.0649 77.8723 59.4005C77.8723 58.8885 78.4589 58.7761 78.7305 59.1867C79.0744 59.5018 79.5431 59.3667 79.9615 59.4399C80.4076 59.4793 80.7865 59.7943 81.2489 59.7718C81.6216 59.7718 81.9773 59.8224 82.3393 59.9293C82.7848 60.1375 83.0332 59.648 83.3212 59.4005C83.6154 59.108 83.9649 58.8211 84.3997 58.8154C84.4787 58.7479 84.5346 58.6579 84.5747 58.5623C84.5352 58.6692 84.4906 58.7648 84.4172 58.8267H84.4228C84.9706 59.018 85.49 59.0011 86.0265 58.7817C86.5968 58.8436 87.2009 59.1136 87.7882 58.9055C88.1722 58.5117 88.7029 58.281 88.9457 57.8028C88.9909 57.5947 89.0982 57.4034 89.2055 57.2178C89.1885 57.2628 89.1716 57.3021 89.1547 57.3415C89.3749 57.2065 89.6007 57.3921 89.7871 57.5103C90.3173 57.9884 90.6228 57.1671 90.8368 56.7958C91.3675 56.4358 92.0282 56.7677 92.6047 56.6214C93.0502 56.4414 93.0734 55.62 93.6493 55.7326C94.0564 55.9688 94.7222 56.1826 94.7109 55.4738C94.8464 55.035 94.6375 53.9773 95.3326 54.1405C95.6713 54.0561 96.1626 54.613 96.2863 54.1855C95.9249 53.7973 95.8119 53.2572 96.2072 52.8297C96.1903 52.3909 95.9023 52.0421 96.1282 51.5808C96.6132 51.6821 96.7493 51.2264 96.9915 50.9788C97.7933 50.5344 96.026 50.3713 96.7995 50C97.1666 49.8706 97.1553 49.6399 96.9972 49.4824C97.1615 49.5612 97.3026 49.5781 97.4043 49.2686C97.7707 49.1786 98.2513 49.0155 98.6403 48.7848C98.917 48.6723 99.6121 48.7173 98.9735 48.4641C98.3185 48.211 97.4946 47.8566 97.3083 47.1084C97.415 46.8046 97.8842 46.5177 97.3755 46.242C97.3365 45.7188 96.9576 45.2856 97.0988 44.7737C96.9576 44.183 97.5223 43.6148 97.1107 43.0129L97.0988 42.8947L97.0373 42.7597C97.3591 43.0354 98.0536 42.1184 98.5054 42.1296C98.5562 41.4545 100.42 41.9271 99.703 41.2295C99.7194 40.2788 100.036 39.3505 100.527 38.6023C101.25 38.3604 102.215 38.5967 102.898 38.0735C102.729 37.359 102.074 36.954 101.978 36.2845C101.227 35.7501 101.95 34.94 101.667 34.293C101.514 33.3423 102.418 32.5659 102.091 31.6715C102.373 30.777 102.966 30.04 103.254 29.1568C103.831 28.3748 103.147 26.9796 104.271 26.5689C104.056 25.6576 105.163 25.8657 105.276 25.1794C105.044 24.6562 105.225 24.3299 105.355 23.8405C105.033 23.4411 104.57 23.0585 104.068 23.0979C104.328 23.0416 104.514 22.9854 104.237 22.6591C104.514 21.9728 103.374 21.5565 103.802 20.7745C103.587 20.1219 103.768 19.4074 103.994 18.7942C104.203 18.3048 104.282 17.9785 103.875 17.5735C103.848 17.4947 103.819 17.4216 103.791 17.3484C102.436 17.911 101.007 18.2992 99.7036 18.9855C98.9012 19.2049 98.0994 19.4243 97.2919 19.6381C97.0937 19.4693 96.9023 19.2555 96.699 19.1037C96.3546 19.3456 95.9988 19.565 95.6657 19.8125C95.4342 20.195 95.2987 20.6676 95.0051 20.9883C94.7447 21.157 94.4856 21.3314 94.2315 21.5002C94.1801 21.1177 94.1976 20.7126 94.1242 20.3413C93.8814 20.0713 93.5432 19.8406 93.3568 19.5425C93.328 19.233 93.4076 18.8899 93.1586 18.6423C93.0513 18.5298 93.0344 18.1979 92.7973 18.3554C92.4189 18.4342 92.035 18.513 91.6566 18.5861C91.498 18.4398 91.3856 18.1867 91.2157 18.0798C90.9565 18.2317 90.5443 18.2148 90.3975 18.4848C90.4709 18.7886 90.5443 19.0924 90.6177 19.3962C89.8836 19.6718 89.1722 20.0431 88.4268 20.2625C87.9299 20.285 87.433 20.3132 86.9356 20.3357C86.9243 20.3582 86.9192 20.3863 86.9079 20.4088C86.8339 20.195 86.241 20.4482 86.0101 20.3751C86.1513 19.9138 86.2981 19.4524 86.4392 18.9911C86.4675 18.5805 86.7498 18.3779 87.1163 18.2486C87.1733 17.9954 87.2518 17.7085 87.2574 17.4497C86.1733 17.4216 85.0558 17.4666 83.9598 17.4666C83.35 16.9546 82.7345 16.4427 82.1247 15.9313C81.6165 16.2126 81.114 16.567 80.6114 16.8764C80.3003 16.989 79.9734 16.5839 79.6577 16.4883C79.3579 16.7414 79.0812 17.0452 78.7876 17.3209C77.9011 17.4334 77.0202 17.5459 76.1343 17.6584C75.7051 18.1366 75.3212 18.6992 74.9027 19.2055C74.6938 19.7005 74.3155 19.0817 74.0112 18.9636C74.1235 18.4066 74.2365 17.8497 74.3499 17.2927C74.254 16.7583 74.2088 16.2295 74.3274 15.695C74.4855 15.3688 74.18 15.155 74.0332 14.9018C73.7796 14.9075 73.503 15.02 73.237 15.0537C73.0507 15.7625 72.9265 16.5108 72.7627 17.2365C72.8079 17.6978 72.311 17.7428 72.0061 17.9341C71.6503 18.1872 71.3059 18.2435 70.9784 17.9172C70.578 17.9847 70.1659 18.1535 69.7649 18.2435C69.5216 18.7385 69.3076 19.2505 69.0761 19.7512C68.8841 20.0493 68.8841 20.6232 68.3985 20.4938C68.15 20.5782 67.7661 20.3812 67.5961 20.64C67.1218 20.9438 67.1562 21.3882 67.4549 21.8383C67.0828 22.2771 66.4786 22.7328 66.608 23.526C67.0094 24.3755 66.1229 24.758 65.9761 25.5006C65.8688 26.4176 65.6994 27.7003 64.6209 27.9534C63.5594 28.8817 65.3776 28.8198 65.9083 28.3416C66.7045 29.1855 67.8564 27.509 68.4211 28.471C68.9569 28.9267 70.0077 28.7073 70.211 29.5286C69.3352 30.17 69.364 31.1376 69.4939 32.0883C69.2054 32.4877 68.9405 33.5172 69.7762 33.7985C70.3917 33.5791 71.0236 33.5172 71.3228 34.288C72.198 33.7873 73.1642 34.8393 73.9315 34.3555C74.5696 34.5692 75.4674 33.9729 75.7723 33.2303C75.7108 33.0616 75.5803 32.9434 75.4166 32.8534C75.4674 32.8647 75.5295 32.8815 75.5803 32.8928C76.4273 32.9603 76.8056 33.8323 77.2461 34.4624C77.3025 34.6818 77.455 34.873 77.5623 34.8393C77.5058 35.2275 77.6871 35.7056 77.2348 35.8575C77.4381 36.4539 76.0546 36.2513 76.586 36.7801C76.9304 36.8308 76.1794 37.0558 76.4386 37.3483C76.0772 37.6465 75.7108 37.9278 75.3324 38.1584C75.394 38.5579 75.3776 39.1767 74.7842 38.9967C74.4736 39.0867 74.084 38.946 73.9208 38.9404C73.8305 39.413 74.0388 39.9924 73.4521 40.2737C73.5312 40.4087 73.5363 40.5325 73.5137 40.6563C73.508 40.33 73.2658 40.0431 72.8926 40.2006C72.4465 40.1106 72.5086 40.8588 72.0682 40.8644C72.1021 41.2695 72.1472 41.8039 71.8248 42.0908C71.8305 42.2764 71.9496 42.4565 71.9321 42.6365C71.9377 42.9515 71.9999 43.4578 71.9095 43.6772C71.486 43.801 71.294 44.2567 70.9439 44.4986C70.6673 44.7405 71.198 45.365 70.6498 45.3087C70.3223 45.0443 70.6385 45.6744 70.2884 45.6856C70.2376 46.1469 70.8141 45.5112 70.7 46.0344C70.853 46.4338 70.3731 46.7714 70.678 47.0977C70.5142 47.5534 70.678 47.7615 71.1467 47.6996C71.525 47.8347 71.892 48.3691 71.412 48.6166C71.1128 48.6785 71.062 49.1004 70.9264 49.3029C71.0676 49.8711 71.5651 49.8655 72.0275 49.933C72.4454 49.9724 72.7333 50.4337 72.9705 50.6644C73.1235 50.7769 73.2472 50.8725 73.3714 50.8725C73.3381 50.8894 73.3048 50.9006 73.2703 50.9175Z\" fill=\"#BAC8FF\" stroke=\"white\" stroke-width=\"1.77165\"/>\r\n            <path d=\"M132.351 28.0328C131.968 27.5546 132.532 27.5039 132.566 27.1495C132.21 26.3619 131.855 25.58 131.504 24.7924C131.855 24.0779 132.267 23.3747 132.583 22.6546C132.498 22.2383 132.278 21.8107 132.594 21.4394C133.108 20.6293 133.024 19.6392 133.306 18.7504C133.402 18.2441 133.634 17.7208 133.65 17.2258C133.311 17.0064 132.803 17.0064 132.397 16.8658C132.12 16.7133 131.403 16.8095 131.403 16.4945C131.685 15.4987 132.035 14.4973 132.284 13.4959C131.702 12.9784 131.115 12.4608 130.533 11.9376C130.149 12.1008 129.895 12.5565 129.562 12.8378C129.296 13.164 129.009 13.4453 128.557 13.3384C127.642 13.2653 126.778 13.5916 125.897 13.766C125.089 13.6253 124.283 13.4847 123.475 13.3384C123.215 12.5565 122.989 11.7407 122.712 10.97C122.058 10.9081 121.403 10.8463 120.748 10.7844C120.505 11.1613 120.556 11.707 120.431 12.1514C120.364 12.5396 120.296 12.9278 120.228 13.3159C119.59 13.2709 118.941 13.1978 118.308 13.1697C118.1 13.3216 117.885 13.4847 117.699 13.6647C117.738 13.5916 117.711 13.5522 117.535 13.5635C116.745 13.5128 115.948 13.4566 115.158 13.406C114.971 13.0403 114.814 12.6521 114.616 12.2977C114.153 12.0952 113.695 11.8533 113.238 11.6732C112.95 12.1177 112.673 12.5677 112.385 13.0178C111.809 13.0122 111.222 12.8828 110.646 12.9559C110.251 13.029 109.861 13.0965 109.466 13.164C109.258 12.7477 109.071 12.3146 108.85 11.9039C108.444 11.6451 108.043 11.3694 107.636 11.1107C107.191 11.0544 106.733 10.9644 106.299 10.925C106.129 11.1557 105.966 11.3813 105.801 11.6114C105.548 11.5607 105.294 11.482 105.045 11.4482C104.865 11.5888 104.587 11.6507 104.435 11.8195C104.441 12.4608 104.419 13.1078 104.435 13.7435C104.627 14.1767 104.819 14.6042 105.006 15.0374C104.74 15.7519 104.48 16.4663 104.215 17.1808C103.871 17.2483 103.702 17.3946 103.933 17.7152C104.639 18.2778 103.572 19.0204 103.798 19.7686C103.509 20.3087 103.945 20.86 103.718 21.4169C104.08 21.8895 104.356 22.2664 104.339 22.8402C104.435 23.4759 105.745 23.4422 105.243 24.3085C104.955 24.6686 105.65 25.5799 104.786 25.7206C104.747 25.7543 104.735 25.8106 104.747 25.8725C104.498 25.6868 104.227 26.3394 104.137 26.6995C103.12 27.1383 103.86 28.5616 103.188 29.2985C102.928 30.1705 102.262 30.885 102.075 31.802C102.459 32.7077 101.245 33.6022 101.77 34.5867C101.404 35.3518 101.748 36.2626 102.233 36.8145C102.329 37.2589 103.311 37.9902 102.561 38.2603C101.878 38.7272 100.556 38.0746 100.308 39.0029C99.794 39.7286 99.641 40.9662 99.8335 41.5738C98.9024 41.6807 98.3705 42.1476 97.6138 42.6033C96.7104 42.7721 97.467 43.4697 97.1966 43.9754C96.9261 44.8361 97.0893 45.7812 97.6138 46.4845C97.1904 46.9514 97.3151 47.6659 98.0035 47.9865C98.58 48.2622 99.0938 48.656 99.6856 48.8135C99.4992 48.7629 99.3417 48.7179 99.2739 48.6841C98.7545 48.6335 98.3428 48.9542 97.9018 49.1454C97.3033 49.016 97.235 49.7305 96.8007 50.0005C96.1683 50.3606 97.1678 50.3662 97.2079 50.7375C96.9927 50.9912 96.7782 51.2163 96.5862 51.4919C96.1288 51.4863 96.0385 51.7901 96.0272 52.1839C96.3829 52.5608 96.1062 52.9883 95.9701 53.3315C95.7448 53.7872 96.4507 53.9559 96.2191 54.3779C95.829 54.3272 95.3434 53.9391 95.0051 54.1979C94.5421 54.6367 95.0051 55.4918 94.4969 55.9306C94.5585 56.2512 95.3609 56.3525 95.6997 56.5832C96.2304 56.7801 96.2762 57.4158 96.5466 57.8433C97.0548 58.1415 96.6432 58.8728 97.2587 59.0191C97.4507 59.4916 97.8572 60.0036 98.4219 59.7335C98.947 59.7729 99.6189 59.396 99.9013 60.0429C100.347 60.2511 100.855 60.1611 101.296 59.9811C101.726 59.6098 102.358 59.6154 102.804 59.9473C103.052 60.1442 103.459 60.1892 103.673 60.0317C103.645 60.0711 103.617 60.1105 103.583 60.1498C103.871 60.1442 104.153 60.2511 104.396 60.3917C105.05 60.9037 106.451 60.8193 106.315 59.7392C106.389 58.9122 107.524 58.9291 107.574 58.1302C107.918 57.2076 108.252 58.254 108.15 58.7434C108.591 59.4466 107.072 59.6154 107.732 60.2173C108.332 59.8967 109.975 60.2061 109.37 61.14C108.648 61.7419 108.885 62.5689 108.805 63.379C109.591 63.8965 110.782 64.0878 111.149 65.0555C111.312 66.0006 112.346 65.8205 112.961 65.8768C113.294 66.1637 113.543 66.13 113.729 65.9612C113.678 66.0231 113.616 66.0849 113.548 66.1356C113.769 66.2087 113.983 66.2819 114.197 66.355C114.463 66.1018 114.83 66.1468 115.18 66.3156C115.671 66.5069 116.168 66.5294 116.676 66.49C116.958 66.5856 117.037 66.2706 117.19 66.1018C118.319 66.2762 119.442 66.4506 120.566 66.625C121.018 66.4787 121.464 66.2593 121.916 66.0962C121.989 65.8937 121.978 65.6518 122.023 65.438C122.203 65.2355 122.497 65.1061 122.723 64.9429C123.271 64.0203 123.795 63.0865 124.338 62.1638C124.072 61.5281 123.739 60.9093 123.446 60.2792C123.666 60.0486 123.886 59.8123 124.106 59.5816C124.818 58.8109 125.574 58.0852 126.348 57.382C126.517 56.9657 126.63 56.5156 126.783 56.0825C126.89 55.9081 126.857 55.8518 126.766 55.8406L126.868 55.8349C127.365 55.3005 127.89 54.7773 128.376 54.2372C128.489 53.9559 128.427 53.354 128.856 53.6691C129.488 53.911 130.188 53.8547 130.849 53.9728C131.182 54.0122 131.527 54.1191 131.831 53.9053C132.182 53.7478 132.622 53.7197 132.825 53.3371C133.243 52.8814 133.656 52.4201 134.067 51.9645C134.209 52.1445 134.327 52.3808 134.48 52.5383C134.982 52.2908 135.519 52.0826 135.993 51.8069C135.891 51.5369 135.682 51.295 135.541 51.0306C135.891 50.7999 136.162 50.3892 136.62 50.4399C136.863 50.3949 137.139 50.4174 137.364 50.3499C137.681 49.8773 138.053 49.416 138.347 48.9378C138.33 48.6003 138.008 48.2121 138.319 47.9421C138.403 47.824 138.392 47.7395 138.33 47.6664C138.37 47.7002 138.41 47.7283 138.443 47.7677C138.573 47.4526 138.804 47.3401 139.138 47.4301C139.368 47.3908 139.685 47.5764 139.821 47.3008C139.939 47.1151 140.215 46.997 140.272 46.7888C140.052 46.485 139.821 46.1925 139.601 45.8943C139.86 45.6131 140.126 45.3374 140.391 45.0561C140.798 45.3261 141.198 45.6243 141.604 45.8774C142.051 45.5455 142.536 45.2418 142.96 44.8873C142.739 44.4935 142.44 44.1335 142.197 43.7509C142.473 43.6272 142.785 43.5372 143.05 43.3965C143.265 42.9802 143.536 42.5808 143.728 42.1589C143.632 41.9282 143.378 41.7088 143.361 41.4838C143.886 40.6287 144.361 39.7229 144.908 38.8903C145.105 38.7103 145.489 38.6709 145.534 38.384C145.297 38.0859 145.291 37.8552 145.687 37.7315C145.941 37.5627 146.229 37.4333 146.461 37.2476C146.731 36.6176 146.935 35.9537 147.24 35.3462C147.539 34.9186 147.917 34.5135 148.171 34.0691C148.069 33.7147 147.748 33.4222 147.555 33.0959C147.403 32.7808 146.985 32.7808 146.72 32.6008C146.387 32.4095 145.93 32.3645 145.789 31.9651C145.529 31.5544 145.275 31.1269 145.009 30.7162C144.179 30.1424 143.35 29.5629 142.514 28.9947C141.621 28.8597 140.735 28.7247 139.848 28.5841C139.024 28.4603 138.193 28.3534 137.369 28.2409C136.698 27.9371 136.466 28.4209 136.336 29.0173C135.573 29.0904 134.671 29.7205 134.004 29.4223C133.744 28.8035 133.111 28.6178 132.547 28.3815C132.367 27.8865 132.067 28.134 131.853 28.3984C131.883 28.1565 132.165 28.1177 132.351 28.0328Z\" fill=\"#BAC8FF\"/>\r\n            <path d=\"M139.848 28.5841C140.735 28.7247 141.621 28.8597 142.514 28.9947C143.35 29.5629 144.179 30.1424 145.009 30.7162C145.275 31.1269 145.529 31.5544 145.789 31.9651C145.93 32.3645 146.387 32.4095 146.72 32.6008C146.985 32.7808 147.403 32.7808 147.555 33.0959C147.748 33.4222 148.069 33.7147 148.171 34.0691C147.917 34.5135 147.539 34.9186 147.24 35.3462C146.935 35.9537 146.731 36.6176 146.461 37.2476C146.229 37.4333 145.941 37.5627 145.687 37.7315C145.291 37.8552 145.297 38.0859 145.534 38.384C145.489 38.6709 145.105 38.7103 144.908 38.8903C144.361 39.7229 143.886 40.6287 143.361 41.4838C143.378 41.7088 143.632 41.9282 143.728 42.1589C143.536 42.5808 143.265 42.9802 143.05 43.3965C142.785 43.5372 142.473 43.6272 142.197 43.7509C142.44 44.1335 142.739 44.4935 142.96 44.8873C142.536 45.2418 142.051 45.5455 141.604 45.8774C141.198 45.6243 140.798 45.3261 140.391 45.0561C140.126 45.3374 139.86 45.6131 139.601 45.8943C139.821 46.1925 140.052 46.485 140.272 46.7888C140.215 46.997 139.939 47.1151 139.821 47.3008C139.685 47.5764 139.368 47.3908 139.138 47.4301C138.804 47.3401 138.573 47.4526 138.443 47.7677C138.41 47.7283 138.37 47.7002 138.33 47.6664C138.392 47.7395 138.403 47.824 138.319 47.9421C138.008 48.2121 138.33 48.6003 138.347 48.9378C138.053 49.416 137.681 49.8773 137.364 50.3499C137.139 50.4174 136.863 50.3949 136.62 50.4399C136.162 50.3892 135.891 50.7999 135.541 51.0306C135.682 51.295 135.891 51.5369 135.993 51.8069C135.519 52.0826 134.982 52.2908 134.48 52.5383C134.327 52.3808 134.209 52.1445 134.067 51.9645C133.656 52.4201 133.243 52.8814 132.825 53.3371C132.622 53.7197 132.182 53.7478 131.831 53.9053C131.527 54.1191 131.182 54.0122 130.849 53.9728C130.188 53.8547 129.488 53.911 128.856 53.6691C128.427 53.354 128.489 53.9559 128.376 54.2372C127.89 54.7773 127.365 55.3005 126.868 55.8349L126.766 55.8406C126.857 55.8518 126.89 55.9081 126.783 56.0825C126.63 56.5156 126.517 56.9657 126.348 57.382C125.574 58.0852 124.818 58.8109 124.106 59.5816C123.886 59.8123 123.666 60.0486 123.446 60.2792C123.739 60.9093 124.072 61.5281 124.338 62.1638C123.795 63.0865 123.271 64.0203 122.723 64.9429C122.497 65.1061 122.203 65.2355 122.023 65.438C121.978 65.6518 121.989 65.8937 121.916 66.0962C121.464 66.2593 121.018 66.4787 120.566 66.625C119.442 66.4506 118.319 66.2762 117.19 66.1018C117.037 66.2706 116.958 66.5856 116.676 66.49C116.168 66.5294 115.671 66.5069 115.18 66.3156C114.83 66.1468 114.463 66.1018 114.197 66.355C113.983 66.2819 113.769 66.2087 113.548 66.1356C113.616 66.0849 113.678 66.0231 113.729 65.9612C113.543 66.13 113.294 66.1637 112.961 65.8768C112.346 65.8205 111.312 66.0006 111.149 65.0555C110.782 64.0878 109.591 63.8965 108.805 63.379C108.885 62.5689 108.648 61.7419 109.37 61.14C109.975 60.2061 108.332 59.8967 107.732 60.2173C107.072 59.6154 108.591 59.4466 108.15 58.7434C108.252 58.254 107.918 57.2076 107.574 58.1302C107.524 58.9291 106.389 58.9122 106.315 59.7392C106.451 60.8193 105.05 60.9037 104.396 60.3917C104.153 60.2511 103.871 60.1442 103.583 60.1498C103.617 60.1104 103.645 60.0711 103.673 60.0317C103.459 60.1892 103.052 60.1442 102.804 59.9473C102.358 59.6154 101.726 59.6098 101.296 59.9811C100.855 60.1611 100.347 60.2511 99.9013 60.0429C99.6189 59.396 98.947 59.7729 98.4219 59.7335C97.8572 60.0036 97.4507 59.4916 97.2587 59.0191C96.6432 58.8728 97.0548 58.1415 96.5466 57.8433C96.2762 57.4158 96.2304 56.7801 95.6997 56.5832C95.3609 56.3525 94.5585 56.2512 94.4969 55.9306C95.0051 55.4918 94.5421 54.6367 95.0051 54.1979C95.3434 53.9391 95.829 54.3272 96.2191 54.3779C96.4507 53.9559 95.7448 53.7872 95.9701 53.3315C96.1062 52.9883 96.3829 52.5608 96.0272 52.1839C96.0385 51.7901 96.1288 51.4863 96.5862 51.4919C96.7782 51.2163 96.9927 50.9912 97.2079 50.7375C97.1678 50.3662 96.1683 50.3606 96.8007 50.0005C97.235 49.7305 97.3033 49.016 97.9018 49.1454C98.3428 48.9541 98.7545 48.6335 99.2739 48.6841C99.3417 48.7179 99.4992 48.7629 99.6856 48.8135C99.0938 48.656 98.58 48.2622 98.0035 47.9865C97.3151 47.6659 97.1904 46.9514 97.6138 46.4845C97.0893 45.7813 96.9261 44.8361 97.1966 43.9754C97.467 43.4697 96.7104 42.7721 97.6138 42.6033C98.3705 42.1476 98.9024 41.6807 99.8335 41.5738C99.641 40.9662 99.794 39.7286 100.308 39.0029C100.556 38.0746 101.878 38.7272 102.561 38.2603C103.311 37.9902 102.329 37.2589 102.233 36.8145C101.748 36.2626 101.404 35.3518 101.77 34.5867C101.245 33.6022 102.459 32.7077 102.075 31.802C102.262 30.885 102.928 30.1705 103.188 29.2985C103.86 28.5616 103.12 27.1383 104.137 26.6995C104.227 26.3394 104.498 25.6868 104.747 25.8725C104.735 25.8106 104.747 25.7543 104.786 25.7206C105.65 25.5799 104.955 24.6686 105.243 24.3085C105.745 23.4422 104.435 23.4759 104.339 22.8402C104.356 22.2664 104.08 21.8895 103.718 21.4169C103.945 20.86 103.509 20.3087 103.798 19.7686C103.572 19.0204 104.639 18.2778 103.933 17.7152C103.702 17.3946 103.871 17.2483 104.215 17.1808C104.48 16.4663 104.74 15.7519 105.006 15.0374C104.819 14.6042 104.627 14.1767 104.435 13.7435C104.419 13.1078 104.441 12.4608 104.435 11.8195C104.587 11.6507 104.865 11.5888 105.045 11.4482C105.294 11.482 105.548 11.5607 105.801 11.6114C105.966 11.3813 106.129 11.1557 106.299 10.925C106.733 10.9644 107.191 11.0544 107.636 11.1107C108.043 11.3694 108.444 11.6451 108.85 11.9039C109.071 12.3146 109.258 12.7477 109.466 13.164C109.861 13.0965 110.251 13.029 110.646 12.9559C111.222 12.8828 111.809 13.0122 112.385 13.0178C112.673 12.5677 112.95 12.1177 113.238 11.6732C113.695 11.8533 114.153 12.0952 114.616 12.2977C114.814 12.6521 114.971 13.0403 115.158 13.406C115.948 13.4566 116.745 13.5128 117.535 13.5635C117.711 13.5522 117.738 13.5916 117.699 13.6647C117.885 13.4847 118.1 13.3216 118.308 13.1697C118.941 13.1978 119.59 13.2709 120.228 13.3159C120.296 12.9278 120.364 12.5396 120.431 12.1514C120.556 11.707 120.505 11.1613 120.748 10.7844C121.403 10.8463 122.058 10.9081 122.712 10.97C122.989 11.7407 123.215 12.5565 123.475 13.3384C124.283 13.4847 125.089 13.6253 125.897 13.766C126.778 13.5916 127.642 13.2653 128.557 13.3384C129.009 13.4453 129.296 13.164 129.562 12.8378C129.895 12.5565 130.149 12.1008 130.533 11.9376C131.115 12.4608 131.702 12.9784 132.284 13.4959C132.035 14.4973 131.685 15.4987 131.403 16.4945C131.403 16.8095 132.12 16.7133 132.397 16.8658C132.803 17.0064 133.311 17.0064 133.65 17.2258C133.634 17.7208 133.402 18.2441 133.306 18.7504C133.024 19.6392 133.108 20.6293 132.594 21.4394C132.278 21.8107 132.498 22.2383 132.583 22.6546C132.267 23.3747 131.855 24.0779 131.504 24.7924C131.855 25.58 132.21 26.3619 132.566 27.1495C132.532 27.5039 131.968 27.5546 132.351 28.0328C132.165 28.1177 131.883 28.1565 131.853 28.3984C132.067 28.134 132.367 27.8865 132.547 28.3815C133.111 28.6178 133.744 28.8035 134.004 29.4223C134.671 29.7205 135.573 29.0904 136.336 29.0173C136.466 28.4209 136.698 27.9371 137.369 28.2409C138.193 28.3534 139.024 28.4603 139.848 28.5841ZM139.848 28.5841L139.831 28.6347\" stroke=\"white\" stroke-width=\"1.77165\"/>\r\n            <path d=\"M27.9697 128.137C28.5795 126.647 29.1781 125.145 29.675 123.609C30.3525 123.665 30.6631 124.284 30.968 124.745C31.7247 124.773 32.2272 124.391 32.9048 124.875C33.492 125.628 34.1978 125.043 34.2769 124.245C34.8698 123.446 35.9426 123.868 36.6654 124.29C37.2639 124.07 38.1448 124.571 38.6812 124.464C39.6185 124.121 39.9573 125.066 40.697 125.37C41.4988 125.364 40.2114 126.967 41.3916 126.568C42.2837 126.827 42.4757 125.712 42.8201 125.139C43.0629 124.267 44.1922 124.205 44.8585 124.627C45.3272 125.454 44.8981 126.506 45.2086 127.361C44.3729 128.182 45.5757 129.038 45.5135 128.976C45.858 128.694 46.1121 128.301 46.2928 127.89C46.1798 127.479 46.3154 126.889 46.8574 127.069C47.2527 126.928 47.6824 126.922 47.8744 126.461C48.1957 126.208 48.5802 126.107 48.9354 125.893C49.1386 125.668 49.111 125.223 49.2013 125.049C49.5853 125.116 49.67 125.567 50.0088 125.747C50.0257 126.118 50.9805 125.887 50.596 125.724C50.2296 125.718 49.9743 124.773 50.5339 124.751C50.7654 124.908 51.0421 125.077 51.0765 125.336C51.3018 125.443 51.0929 125.741 51.3809 125.713C51.4605 126.191 51.8388 126.641 51.7315 127.147C51.5164 127.513 52.1206 127.519 52.0415 127.918C52.3239 128.171 52.4769 128.543 52.5723 128.858C52.273 128.914 52.0528 129.116 52.1607 129.465C52.3131 129.994 51.4944 129.926 51.4492 130.174C51.9004 130.14 52.3414 130.315 52.7869 130.202C53.194 130.135 53.7242 129.932 53.7299 129.448C53.9902 129.465 54.1251 128.931 54.1985 129.189C54.2155 129.06 54.2725 128.942 54.4018 128.846C54.9664 128.537 54.893 127.789 55.4069 127.53C55.2313 127.282 55.4182 126.613 55.6949 126.889C55.6553 127.434 55.8812 127.867 56.4679 127.912C56.7056 128.273 57.4171 128.661 57.1121 128.008C57.242 127.71 57.722 127.682 57.2307 127.401C57.0958 127.125 57.9648 126.63 57.1918 126.647C56.7508 126.467 56.3052 125.803 56.3668 125.342C56.7564 124.976 56.9314 124.481 57.0111 124.036C57.2934 123.603 57.5469 123.024 58.1912 123.215C58.4792 122.737 58.6599 122.034 59.3149 122.585C59.6028 122.81 59.936 123.041 59.9812 123.333C60.0376 123.187 60.111 123.069 60.2522 122.956C60.3538 122.546 60.6977 122.253 60.9462 121.927C61.1381 121.651 61.2793 121.347 61.539 121.122C61.844 121.291 62.2505 121.342 62.403 121.696C62.6734 121.78 62.849 122.039 63.1477 122.073C63.2725 122.349 63.2104 122.81 62.9558 122.99C62.8716 123.412 62.7418 123.834 62.6678 124.261C62.6339 124.312 62.5887 124.335 62.5323 124.346C62.6571 124.374 62.7186 124.441 62.617 124.672C62.6396 125.156 63.2612 125.274 63.3115 125.775C63.3397 126.185 63.4747 126.461 63.8762 126.697C63.9942 127.085 64.3392 127.311 64.5532 127.659C64.7175 128.002 64.8863 128.604 64.4465 128.829C64.0173 128.807 64.2037 129.527 63.735 129.583C63.3115 129.904 63.9552 130.247 64.2765 130.146C64.1528 130.523 63.6221 130.635 63.6334 131.119C63.4527 131.474 63.3392 131.873 63.2663 132.256C63.2268 132.779 62.831 132.914 62.3685 132.942C62.1703 133.139 62.1652 133.645 61.7468 133.336C61.5266 132.925 61.1031 133.127 61.3459 133.493C61.0292 133.623 60.6746 133.848 60.7468 134.269C60.5441 134.528 60.0755 134.99 59.7875 134.618C59.5899 134.585 59.5447 134.489 59.5447 134.36C59.5159 134.455 59.4707 134.551 59.4092 134.63C59.3414 135.361 58.517 135.029 58.1274 135.389C57.692 135.316 56.8789 135.186 57.2352 135.89C57.2742 136.205 57.8614 136.604 57.2121 136.615C56.8733 136.722 56.9693 137.217 56.5294 137.251C56.2923 137.594 57.3137 138.067 56.6135 137.96C55.9811 138.343 55.4453 137.701 54.8405 137.724C54.321 137.876 54.4842 137.459 54.5746 137.065C54.3939 137.454 54.4504 137.977 54.8117 138.236C55.2584 138.635 54.6198 139.181 54.9416 139.642C55.1951 139.985 54.727 140.25 54.5797 139.845C54.4165 139.456 54.089 139.31 53.823 139.715C53.3939 139.918 53.072 140.345 52.6265 140.503C52.242 140.34 51.9546 139.912 51.4803 140.165C51.0794 140.289 50.6615 140.334 50.5819 140.829C50.5311 141.313 49.8761 141.122 49.5938 141.454C49.2662 141.757 49.4757 141.093 49.2329 141.065C49.4018 140.75 49.6784 140.385 49.255 140.086C48.9506 139.828 48.967 139.355 48.8879 138.973C48.7304 138.579 48.849 138.112 48.8264 137.673C48.6005 137.319 48.5384 136.902 48.3747 136.52C48.4763 136.115 48.2674 135.8 48.1313 135.473C48.0805 135.8 47.7366 136.058 47.3413 136.267C47.0534 136.621 46.9969 137.184 46.6694 136.509C46.0765 135.856 46.0144 137.189 45.4667 137.375C45.19 138.348 44.1341 138.129 43.6146 138.832C43.1121 139.338 42.4119 138.961 42.2086 138.438C41.8077 138.562 41.7343 138.371 41.6835 138.129C41.6835 138.157 41.6835 138.191 41.6778 138.219C41.5367 138.32 41.0059 138.494 40.6784 138.68C40.2154 139.057 39.4926 139.102 39.2837 139.558C39.3006 139.974 38.8941 140.694 39.2781 141.127C39.1934 141.617 39.6338 141.735 39.8709 142.078C39.1595 141.92 39.12 143.068 39.9218 143.113C40.4921 143.445 41.7795 143.558 40.9268 144.385C40.9833 145.189 40.4525 145.819 39.854 146.275C39.3176 146.213 38.5271 147.113 38.1205 146.792C38.2899 147.068 38.2109 147.434 38.3633 147.737C38.5496 148.064 38.9054 148.334 38.8659 148.744C38.7247 149.206 38.8828 149.65 38.8433 150.123C38.8715 150.567 39.0917 150.972 39.391 151.298C39.6225 151.585 39.0522 151.889 38.8489 152.097C38.7868 152.497 38.4028 152.716 38.3407 153.116C38.1092 153.307 37.8156 153.419 37.6914 153.746C37.234 153.65 37.0025 153.195 36.5959 153.014C36.0708 153.222 36.116 153.931 36.3193 154.386C36.5338 154.876 36.7484 155.337 36.9291 155.85C36.946 156.362 36.0595 155.833 35.7828 156.26C35.3085 156.355 34.7665 156.047 34.247 155.94C33.7501 155.99 33.2701 156.114 32.7676 156.204C32.1182 156.35 31.4124 156.575 30.7856 156.255C30.3508 156.002 30.1702 156.558 29.8257 156.637C29.7975 156.953 29.3119 157.009 29.1594 156.812C29.0013 157.515 28.4197 158.094 28.0979 158.759C27.5389 159.445 27.4937 160.345 27.1718 161.06C26.5564 161.2 25.9748 161.037 25.5343 161.51L25.5005 161.398C25.4327 161.876 25.077 162.28 24.9471 162.747C24.6139 163.276 24.8059 163.834 24.9866 164.373C24.964 164.948 25.6416 165.307 25.2802 165.886C25.1278 166.41 24.8229 167.214 24.1058 166.798C23.654 166.832 23.2983 166.708 23.0781 166.252C22.8635 165.728 22.1351 165.548 21.7737 166.021C21.5817 166.252 21.0227 166.713 20.8477 166.522C20.8533 166.584 20.859 166.64 20.859 166.685C20.571 166.646 20.5879 167.04 20.2548 166.933C19.8257 167.073 19.9555 167.67 19.5433 167.867C19.2102 168.024 19.1537 168.356 19.1594 168.676C18.9674 169.053 18.7698 169.408 18.5495 169.779C18.4423 170.032 18.1995 170.657 17.8889 170.252C17.5501 170.325 17.6066 170.927 17.217 170.815C16.8104 170.826 16.7483 171.253 16.6184 171.552C16.2683 171.455 16.1046 170.983 16.1723 170.668C16.0142 170.375 15.7319 170.145 15.6585 169.796C15.4496 169.459 15.7093 169.245 15.8223 168.958C15.6077 168.592 15.986 168.311 16.2006 168.08C16.0425 167.709 15.7263 167.394 15.7206 166.949C15.698 166.578 15.6529 166.134 15.1898 166.111C14.9866 166.06 14.772 166.336 14.6082 166.055C14.3937 166.077 14.0097 166.111 13.9194 165.847L13.9081 165.908C13.4338 165.988 13.095 165.633 12.9425 165.24V165.233C12.9594 165.396 12.8973 165.543 12.6602 165.611C12.4117 165.723 12.1238 165.869 12.1972 166.179C12.056 166.448 11.6833 166.387 11.6833 166.742C11.5026 166.994 11.2711 167.4 10.9775 167.062C10.7178 166.949 10.4072 167.034 10.1813 166.82C9.93854 166.803 9.70139 166.82 9.46423 166.842C9.39647 166.854 9.32871 166.865 9.26095 166.877C8.95039 166.167 8.62854 165.458 8.32927 164.75C8.32927 164.434 8.32362 164.126 8.32362 163.816C8.09212 163.602 7.86625 163.388 7.64039 163.175C7.22255 163.107 6.79905 163.056 6.38686 162.977C6.34733 162.876 6.45461 162.775 6.47155 162.674C6.53931 162.522 6.58449 162.353 6.66354 162.212C7.03056 162.167 7.39194 162.1 7.75332 162.06C7.91143 162.302 8.06953 162.539 8.22763 162.775C8.59466 162.679 8.96733 162.601 9.32871 162.494C9.88208 162.134 10.4524 161.796 11.0001 161.425L11.5873 160.964C12.0729 160.57 12.5868 160.193 13.0611 159.788C13.366 159.468 13.6653 159.147 13.9702 158.826C14.2582 158.516 14.5461 158.213 14.8341 157.909C15.0882 157.403 15.2971 156.868 15.5343 156.35C16.1328 155.782 16.7539 155.225 17.3581 154.663C17.5953 154.612 17.8607 154.584 18.0978 154.551L18.1148 154.657C18.143 154.584 18.2164 154.545 18.3689 154.556C18.3406 154.258 18.3067 153.959 18.2842 153.661C18.7359 153.171 19.2384 152.711 19.7071 152.226C19.7918 152.165 19.8595 152.142 19.9217 152.147L19.8482 152.091C20.3677 151.371 20.8929 150.65 21.418 149.925C21.3728 149.643 21.3276 149.362 21.2825 149.081C21.1357 149.047 20.9776 149.047 20.842 148.996C20.8308 148.845 20.9211 148.698 20.938 148.552C21.147 147.748 21.3559 146.943 21.5648 146.144C21.7455 145.452 21.9262 144.76 22.1069 144.068C22.1351 143.77 22.2819 143.534 22.4965 143.331C22.6376 143.067 22.5134 142.707 22.553 142.403C22.6772 141.88 22.9143 141.379 23.0781 140.862L23.2588 140.367C23.3943 140.125 23.3096 139.849 23.3152 139.59C23.6032 139.056 23.9251 138.533 24.23 138.004C24.4897 137.458 24.6817 136.879 24.9189 136.322C25.3875 135.191 25.7884 134.038 26.195 132.884C26.6862 131.495 27.1436 130.088 27.7308 128.733C27.8381 128.547 27.8607 128.204 28.0358 128.148L27.9697 128.137Z\" fill=\"#BAC8FF\" stroke=\"white\" stroke-width=\"1.77165\"/>\r\n            <path d=\"M61.9179 170.484C61.3928 171.249 60.687 171.851 59.9021 172.498C59.3888 173.257 58.7112 173.572 57.8919 173.786C56.836 174.484 55.7355 174.968 55.3284 176.189C55.0856 177.156 53.273 178.09 54.8597 178.67C55.8823 179.012 56.7344 179.547 56.5198 180.711C56.8981 181.409 57.8693 180.554 57.7169 181.674C57.8411 182.512 57.9252 183.704 58.8462 183.93C59.6367 183.153 59.8852 185.707 60.4555 184.262C60.8564 183.367 61.7034 182.59 62.4154 182.951C62.8219 181.961 63.1094 183.08 63.5447 183.249C63.7135 183.192 63.8101 183.069 63.866 182.911C63.8829 183.181 63.9902 183.378 64.2776 183.407C64.1653 183.874 64.3516 184.492 64.4363 185.044C63.8598 186.281 66.1811 185.696 65.6447 184.756C65.6836 184.11 65.7237 183.26 66.4521 183.007C66.8637 183.367 67.2709 183.479 67.7344 183.62C67.5137 184.678 68.9253 184.447 69.0213 185.206C68.6147 185.769 69.1568 186.331 68.6774 186.788C68.4115 187.356 68.9027 187.446 69.3262 187.17C70.1958 187.553 70.7949 186.703 71.5058 186.231C71.5673 185.421 72.1495 185.741 72.6294 185.55C73.0473 185.145 73.228 185.921 73.5944 185.876C73.4369 186.039 73.4313 186.27 73.7701 186.399C73.8152 186.906 74.3968 187.198 74.883 187.401C74.4815 187.975 75.4414 188.458 75.1422 189.145C75.6848 189.021 75.8367 189.387 76.2551 189.617C76.8988 189.516 77.4748 189.742 78.1015 189.803C78.4234 189.674 79.0784 190.129 79.2308 189.764C79.4008 189.117 79.8407 189.68 80.2246 189.572C80.9474 189.33 81.3376 188.662 81.6306 188.014C81.721 187.075 82.1162 188.47 82.6301 188.464C83.3082 188.863 83.7537 187.755 84.2964 188.189C84.9 188.307 85.2727 188.943 85.8605 188.864C86.4025 189.117 86.1083 188.285 86.5211 188.33C87.0801 187.834 86.1089 188.003 85.996 188.42C85.8661 188.24 86.363 187.587 86.747 187.581C87.0174 187.125 87.4471 186.248 88.1191 186.563C88.424 186.428 89.3099 186.996 89.254 186.512C89.2202 186.106 90.4398 186.056 90.3608 185.364C90.0395 185.026 90.1123 184.318 89.7453 184.07C90.0559 184.121 90.389 184.307 90.2478 183.823C90.2196 183.564 90.7334 183.458 90.7509 183.322L90.7673 183.333C90.7221 183.772 91.2196 184.087 91.3715 184.493C91.5691 184.819 91.9079 184.566 92.2072 184.763C92.7323 184.414 93.0762 184.875 92.8114 185.353C93.1389 185.342 93.8159 185.241 94.0135 185.792C94.7481 185.899 94.1999 186.281 93.9012 186.456C94.0988 186.934 93.568 187.39 94.2682 187.615C94.149 187.97 93.4376 188.166 94.1942 188.369C94.7589 188.638 95.7696 189.089 95.7131 189.787C95.3856 190.384 95.7244 190.969 95.6849 191.581C95.8029 191.739 95.86 191.131 95.9893 191.587C96.3337 191.744 96.9159 192.921 96.2326 192.465C95.3518 192.538 96.1197 192.91 96.4754 193.18C96.5776 193.765 97.1474 194.142 97.0282 194.783C97.0006 195.953 98.175 194.255 98.2371 194.952C97.6894 195.914 99.2987 194.57 98.9881 195.515C99.4512 195.239 100.32 195.233 100.434 194.677C99.8521 193.951 100.858 193.805 101.083 193.326C101.557 192.511 101.913 193.715 102.37 193.563C102.387 192.792 103.511 193.512 103.234 192.894C103.381 191.944 104.482 192.973 104.662 193.485C104.837 193.085 105.356 193.35 105.453 193.558C104.6 193.772 105.56 194.706 105.125 195.245C105.035 195.724 103.911 196.5 104.86 196.657C104.448 197.181 105.001 197.457 105.289 197.862C105.47 198.222 105.713 197.603 105.921 197.496C106.266 197.013 106.865 196.889 107.367 196.624C107.553 196.41 107.684 196.129 107.853 195.893C108.299 195.308 108.897 194.841 109.399 194.301C109.778 194.205 110.212 194.25 110.608 194.216C110.992 193.592 111.246 192.884 111.743 192.337C111.975 191.966 112.302 191.702 112.68 191.488C113.092 191.325 113.2 190.875 113.437 190.554C113.415 190.206 113.296 189.851 113.239 189.508C113.076 189.401 112.968 189.047 112.771 189.047C112.867 188.986 112.601 188.816 112.545 188.709C112.85 188.507 113.155 188.299 113.46 188.096C113.68 187.617 113.872 187.123 114.081 186.639C114.42 186.138 114.815 185.671 115.176 185.181C115.442 184.726 115.634 184.231 115.876 183.758C116.159 183.089 116.56 182.487 116.938 181.869C116.814 181.317 116.639 180.765 116.492 180.215C116.046 179.473 115.583 178.741 115.137 178.004C114.38 177.514 113.601 177.047 112.839 176.563C111.919 176.917 110.992 177.294 110.06 177.637C109.823 177.778 109.57 177.581 109.327 177.542C109.112 177.497 108.875 177.384 108.683 177.384L108.66 177.407L108.694 177.362C108.435 177.351 108.31 177.193 108.259 176.952C108.163 176.75 108.079 176.546 108.198 176.333C108.373 175.725 108.587 175.128 108.638 174.499C108.677 174.161 108.767 173.812 108.779 173.475C107.486 173.069 106.142 172.828 104.855 172.4C104.493 172.355 104.312 171.995 104.053 171.782C103.945 171.675 103.832 171.517 103.759 171.545L103.765 171.494C103.612 170.667 103.527 169.829 103.437 168.991C103.618 168.502 103.923 168.046 104.131 167.562C103.81 167.264 103.42 167.022 103.076 166.74C102.618 166.285 102.263 165.734 101.845 165.233C101.455 164.788 100.953 164.456 100.517 164.051C100.529 163.545 100.556 163.033 100.562 162.526C100.37 162.206 100.178 161.891 99.9859 161.57C100.223 161.222 100.545 160.912 100.625 160.485C100.721 160.153 100.839 159.82 100.929 159.488C100.872 158.976 100.816 158.465 100.76 157.953C100.923 157.739 101.121 157.548 101.262 157.322C101.2 157.188 101.042 157.103 100.941 156.985C100.754 156.811 100.585 156.608 100.382 156.457C99.4218 156.012 98.4624 155.562 97.4907 155.14C97.3043 155.061 97.1242 154.977 96.9379 154.898C96.9497 154.611 96.9661 154.323 96.9831 154.037C96.8809 153.7 96.6945 153.379 96.5765 153.041C95.983 152.873 95.3676 152.743 94.769 152.585C94.3687 151.989 93.9734 151.392 93.5782 150.791C93.3241 150.6 93.0248 150.448 92.7538 150.273L92.7368 150.33C92.6973 150.138 92.3529 150.077 92.2066 149.936C91.9187 149.728 91.8955 149.295 91.721 148.991C91.5516 148.552 91.3766 148.113 91.0547 147.764C90.6595 147.371 90.8063 146.757 90.5691 146.279C90.4624 145.981 90.3546 145.677 90.2524 145.379C89.7108 145.644 89.2704 146.037 88.6549 145.666C87.9265 145.756 87.6047 146.285 87.3901 146.847C86.7464 147.219 86.1586 148.001 85.3686 147.883C84.8548 147.511 84.6459 146.6 83.9632 146.499C83.2179 146.78 82.2805 147.348 82.1445 148.181C82.5516 149.098 81.6532 149.998 80.7102 149.852C80.0044 150.318 79.9762 151.331 79.1857 151.741C78.7791 152.451 77.9321 152.591 77.2833 152.928C76.7752 153.311 76.7639 154.015 76.346 154.43C75.9677 154.11 75.4369 153.913 75.2732 153.418C74.7311 153.204 74.2455 152.855 73.726 152.579C73.3821 152.079 72.6927 152.146 72.2297 151.888C71.9253 152.271 71.5809 152.051 71.3098 151.86C70.7164 152.248 71.0947 153.019 70.6379 153.548C70.5538 154.183 69.774 154.391 69.6159 154.903C69.2652 155.353 69.6215 155.899 69.9547 156.281C69.4352 156.281 69.0117 156.619 69.3104 157.131C69.4459 157.626 69.8242 158.222 70.3273 158.402C70.818 158.645 71.0213 159.297 71.5809 159.263C71.7898 159.601 71.9925 159.162 72.1845 159.556C72.5182 160.096 72.0157 160.613 71.6594 161.074C71.4617 161.407 71.0608 161.739 71.0106 162.076C70.8299 161.783 70.5645 161.626 70.0162 161.829C69.6949 162.599 69.3223 162.881 68.4634 162.903C68.1873 163.572 68.5538 164.489 67.7463 164.94C67.4244 166.042 66.2217 166.565 66.1822 167.741C65.6966 168.191 64.2731 168.034 64.4764 167.257C63.6068 167.19 62.6294 168.084 62.7254 168.928C63.2844 169.539 62.3527 170.157 61.9179 170.484Z\" fill=\"#BAC8FF\"/>\r\n            <path d=\"M97.4907 155.14C98.4624 155.562 99.4218 156.012 100.382 156.457C100.585 156.608 100.754 156.811 100.941 156.985C101.042 157.103 101.2 157.188 101.262 157.322C101.121 157.548 100.923 157.739 100.76 157.953C100.816 158.465 100.872 158.976 100.929 159.488C100.839 159.82 100.721 160.153 100.625 160.485C100.545 160.912 100.223 161.222 99.9859 161.57C100.178 161.891 100.37 162.206 100.562 162.526C100.556 163.033 100.529 163.545 100.517 164.051C100.953 164.456 101.455 164.788 101.845 165.233C102.263 165.734 102.618 166.285 103.076 166.74C103.42 167.022 103.81 167.264 104.131 167.562C103.923 168.046 103.618 168.502 103.437 168.991C103.527 169.829 103.612 170.667 103.765 171.494L103.759 171.545C103.832 171.517 103.945 171.675 104.053 171.782C104.312 171.995 104.493 172.355 104.855 172.4C106.142 172.828 107.486 173.069 108.779 173.475C108.767 173.812 108.677 174.161 108.638 174.499C108.587 175.128 108.373 175.725 108.198 176.333C108.079 176.546 108.163 176.75 108.259 176.952C108.31 177.193 108.435 177.351 108.694 177.362L108.66 177.407L108.683 177.384C108.875 177.384 109.112 177.497 109.327 177.542C109.57 177.581 109.823 177.778 110.06 177.637C110.992 177.294 111.919 176.917 112.839 176.563C113.601 177.047 114.38 177.514 115.137 178.004C115.583 178.741 116.046 179.473 116.492 180.215C116.639 180.765 116.814 181.317 116.938 181.869C116.56 182.487 116.159 183.089 115.876 183.758C115.634 184.231 115.442 184.726 115.176 185.181C114.815 185.671 114.42 186.138 114.081 186.639C113.872 187.123 113.68 187.617 113.46 188.096C113.155 188.299 112.85 188.507 112.545 188.709C112.601 188.816 112.867 188.986 112.771 189.047C112.968 189.047 113.076 189.401 113.239 189.508C113.296 189.851 113.415 190.206 113.437 190.554C113.2 190.875 113.092 191.325 112.68 191.488C112.302 191.702 111.975 191.966 111.743 192.337C111.246 192.884 110.992 193.592 110.608 194.216C110.212 194.25 109.778 194.205 109.399 194.301C108.897 194.841 108.299 195.308 107.853 195.893C107.684 196.129 107.553 196.41 107.367 196.624C106.865 196.889 106.266 197.013 105.921 197.496C105.713 197.603 105.47 198.222 105.289 197.862C105.001 197.457 104.448 197.181 104.86 196.657C103.911 196.5 105.035 195.724 105.125 195.245C105.56 194.706 104.6 193.772 105.453 193.558C105.356 193.35 104.837 193.085 104.662 193.485C104.482 192.973 103.381 191.944 103.234 192.894C103.511 193.512 102.387 192.792 102.37 193.563C101.913 193.715 101.557 192.511 101.083 193.326C100.858 193.805 99.8521 193.951 100.434 194.677C100.32 195.233 99.4512 195.239 98.9881 195.515C99.2987 194.57 97.6894 195.914 98.2371 194.952C98.175 194.255 97.0006 195.953 97.0282 194.783C97.1474 194.142 96.5776 193.765 96.4754 193.18C96.1197 192.91 95.3518 192.538 96.2326 192.465C96.9159 192.921 96.3337 191.744 95.9893 191.587C95.86 191.131 95.8029 191.739 95.6849 191.581C95.7244 190.969 95.3856 190.384 95.7131 189.787C95.7696 189.089 94.7589 188.638 94.1942 188.369C93.4376 188.166 94.149 187.97 94.2682 187.615C93.568 187.39 94.0988 186.934 93.9012 186.456C94.1999 186.281 94.7481 185.899 94.0135 185.792C93.8159 185.241 93.1389 185.342 92.8114 185.353C93.0762 184.875 92.7323 184.414 92.2072 184.763C91.9079 184.566 91.5691 184.819 91.3715 184.493C91.2196 184.087 90.7221 183.772 90.7673 183.333L90.7509 183.322C90.7334 183.458 90.2196 183.564 90.2478 183.823C90.389 184.307 90.0559 184.121 89.7453 184.07C90.1123 184.318 90.0395 185.026 90.3608 185.364C90.4398 186.056 89.2202 186.106 89.254 186.512C89.3099 186.996 88.424 186.428 88.1191 186.563C87.4471 186.248 87.0174 187.125 86.747 187.581C86.363 187.587 85.8661 188.24 85.996 188.42C86.1089 188.003 87.0801 187.834 86.5211 188.33C86.1083 188.285 86.4025 189.117 85.8605 188.864C85.2727 188.943 84.9 188.307 84.2964 188.189C83.7537 187.755 83.3082 188.863 82.6301 188.464C82.1162 188.47 81.721 187.075 81.6306 188.014C81.3376 188.662 80.9474 189.33 80.2246 189.572C79.8407 189.68 79.4008 189.117 79.2308 189.764C79.0784 190.129 78.4234 189.674 78.1015 189.803C77.4748 189.742 76.8988 189.516 76.2551 189.617C75.8367 189.387 75.6848 189.021 75.1422 189.145C75.4414 188.458 74.4815 187.975 74.883 187.401C74.3968 187.198 73.8152 186.906 73.7701 186.399C73.4313 186.27 73.4369 186.039 73.5944 185.876C73.228 185.921 73.0473 185.145 72.6294 185.55C72.1495 185.741 71.5673 185.421 71.5058 186.231C70.7949 186.703 70.1958 187.553 69.3262 187.17C68.9027 187.446 68.4115 187.356 68.6774 186.788C69.1568 186.331 68.6147 185.769 69.0213 185.206C68.9253 184.447 67.5137 184.678 67.7344 183.62C67.2709 183.479 66.8637 183.367 66.4521 183.007C65.7237 183.26 65.6836 184.11 65.6447 184.756C66.1811 185.696 63.8598 186.281 64.4363 185.044C64.3516 184.492 64.1653 183.874 64.2776 183.407C63.9902 183.378 63.8829 183.181 63.866 182.911C63.8101 183.069 63.7135 183.192 63.5447 183.249C63.1094 183.08 62.8219 181.961 62.4154 182.951C61.7034 182.59 60.8564 183.367 60.4555 184.262C59.8852 185.707 59.6367 183.153 58.8462 183.93C57.9252 183.704 57.8411 182.512 57.7169 181.674C57.8693 180.554 56.8981 181.409 56.5198 180.711C56.7344 179.547 55.8823 179.012 54.8597 178.67C53.273 178.09 55.0856 177.156 55.3284 176.189C55.7355 174.968 56.836 174.484 57.8919 173.786C58.7112 173.572 59.3888 173.257 59.9021 172.498C60.687 171.851 61.3928 171.249 61.9179 170.484C62.3527 170.157 63.2844 169.539 62.7254 168.928C62.6294 168.084 63.6068 167.19 64.4764 167.257C64.2731 168.034 65.6966 168.191 66.1822 167.741C66.2217 166.565 67.4245 166.042 67.7463 164.94C68.5538 164.489 68.1873 163.572 68.4634 162.903C69.3223 162.881 69.6949 162.599 70.0162 161.829C70.5645 161.626 70.8299 161.783 71.0106 162.076C71.0608 161.739 71.4617 161.407 71.6594 161.074C72.0157 160.613 72.5182 160.096 72.1845 159.556C71.9925 159.162 71.7898 159.601 71.5809 159.263C71.0213 159.297 70.818 158.645 70.3273 158.402C69.8242 158.222 69.4459 157.626 69.3104 157.131C69.0117 156.619 69.4352 156.281 69.9547 156.281C69.6215 155.899 69.2652 155.353 69.6159 154.903C69.774 154.391 70.5538 154.183 70.6379 153.548C71.0947 153.019 70.7164 152.248 71.3098 151.86C71.5809 152.051 71.9253 152.271 72.2297 151.888C72.6927 152.146 73.3821 152.079 73.726 152.579C74.2455 152.855 74.7311 153.204 75.2732 153.418C75.4369 153.913 75.9677 154.11 76.346 154.43C76.7639 154.015 76.7751 153.311 77.2833 152.928C77.9321 152.591 78.7791 152.451 79.1857 151.741C79.9762 151.331 80.0044 150.318 80.7102 149.852C81.6532 149.998 82.5516 149.098 82.1445 148.181C82.2805 147.348 83.2179 146.78 83.9632 146.499C84.6459 146.6 84.8548 147.511 85.3686 147.883C86.1586 148.001 86.7464 147.219 87.3901 146.847C87.6047 146.285 87.9265 145.756 88.6549 145.666C89.2704 146.037 89.7108 145.644 90.2524 145.379C90.3546 145.677 90.4624 145.981 90.5691 146.279C90.8063 146.757 90.6595 147.371 91.0547 147.764C91.3766 148.113 91.5516 148.552 91.721 148.991C91.8955 149.295 91.9187 149.728 92.2066 149.936C92.3529 150.077 92.6973 150.138 92.7368 150.33L92.7538 150.273C93.0248 150.448 93.3241 150.6 93.5782 150.791C93.9734 151.392 94.3687 151.989 94.769 152.585C95.3676 152.743 95.983 152.873 96.5765 153.041C96.6945 153.379 96.8809 153.7 96.9831 154.037C96.9661 154.323 96.9497 154.611 96.9379 154.898C97.1242 154.977 97.3043 155.061 97.4907 155.14ZM97.4907 155.14V155.146\" stroke=\"white\" stroke-width=\"1.77165\"/>\r\n            <path d=\"M52.9225 106.538C53.1144 106.155 53.7124 106.318 53.7356 105.829C53.9157 105.469 53.7068 105.159 53.6396 104.805C53.7011 104.456 53.8536 104.164 53.7638 103.798C53.8028 103.64 53.7519 103.483 53.6616 103.348C53.7915 103.421 53.905 103.393 53.8598 103.1C53.5154 102.493 54.5142 102.594 54.3849 101.992C54.0066 101.688 54.6221 101.39 54.7407 101.114C54.9044 100.839 55.1929 100.957 55.3731 100.799C55.1478 100.456 55.5594 99.9612 55.2488 99.6462C55.0343 99.2918 54.5938 99.0217 54.6221 98.5773C54.4753 98.116 54.8423 97.8178 55.2545 97.7278C55.5538 97.6266 55.5312 97.5422 55.4013 97.4465C55.4301 97.4634 55.4634 97.4747 55.4916 97.4803C56.1749 97.5759 56.5701 96.7152 57.2026 96.7827C57.5922 97.3227 57.9202 96.8052 58.377 96.6814C58.1738 96.3608 57.7729 96.0063 57.6486 95.5675C57.5809 94.9825 56.9592 95.3538 56.8073 94.9093C56.6435 94.3355 56.7169 93.7223 56.4798 93.1654C56.1692 92.7266 55.6949 92.1753 56.0055 91.6071C56.3273 91.5621 56.7909 91.1401 57.1913 91.3089C57.4792 91.1626 58.0778 90.9826 58.4849 90.797C58.5126 90.2456 57.5758 90.0431 57.1574 89.7393C56.8468 89.835 56.4007 89.7562 56.4177 89.278C56.1862 89.0136 56.7616 88.3498 56.2647 88.5411C56.3324 88.4904 56.412 88.4567 56.5131 88.4736C56.6091 88.3273 56.5747 87.8828 56.6825 87.6184C56.3381 87.3765 56.3883 86.9321 56.3431 86.5721C56.49 86.0432 55.8073 86.3414 55.7277 85.9138C55.6712 85.4975 55.1015 85.6719 55.1015 85.2331C54.9942 84.8225 55.2195 84.3612 54.9434 83.9899C54.661 83.8492 54.8191 83.5286 55.0727 83.5061C55.4002 83.4329 55.7672 83.4667 56.0552 83.281C56.4115 83.1798 56.6368 82.8929 56.9586 82.7353C57.0885 82.5553 57.7384 82.5722 57.3996 82.3303C57.1286 82.139 57.5797 82.1896 57.608 82.0546C57.6368 82.0546 57.608 82.0428 57.5628 82.0209C57.6588 82.0321 57.7384 81.959 57.7266 81.7565C57.9863 81.5258 57.5408 81.042 58.0371 81.0533C58.2127 81.0364 58.0879 80.7438 58.2974 80.6426C58.2404 80.3107 58.2466 80.0575 58.6136 79.9169C58.8734 79.6243 58.7717 79.2137 59.0145 78.8874C59.0879 78.4148 58.7774 78.021 58.5741 77.6216C58.512 77.3628 58.3369 76.8846 58.0665 76.8227C58.2641 76.744 58.4612 76.6652 58.6594 76.5808C59.128 76.1083 59.6983 76.6821 60.0879 76.9859C60.5171 77.5203 61.3353 77.2728 61.5837 76.6877C61.8322 75.9339 62.3466 76.6315 62.7582 76.8452C63.272 77.4022 63.8757 77.1659 64.4522 76.8959C64.9327 77.0309 64.8079 76.6933 64.8531 76.3727C64.7684 75.8101 64.2771 75.3319 64.2602 74.7131C63.5092 74.3755 64.062 73.6836 64.0682 73.0535C63.8875 72.5416 63.6385 71.9734 63.56 71.4277C64.1981 71.1577 64.3505 70.4432 64.7915 70.0044C65.2602 70.2407 64.8982 69.6612 65.1755 69.5037C65.695 69.2168 65.3505 68.8342 65.4234 68.3898C65.7226 68.0691 65.6097 67.6528 65.158 67.5797C65.1975 68.1367 64.5425 68.3561 64.3505 68.7555C64.0563 69.2224 63.7345 70.3644 63.001 69.8469C62.4075 69.4812 61.7074 69.3462 61.1427 68.9074C60.5781 68.5586 60.4369 67.6303 59.5956 67.861C59.3528 67.7091 59.2568 67.771 59.2009 67.906C59.2353 67.6697 59.246 67.4391 58.9801 67.3322C59.11 67.1353 58.7486 66.8484 59.0992 66.8596C59.3584 66.8202 59.0936 66.4771 59.2856 66.3196C59.3245 66.0045 59.3759 65.577 58.9914 65.5038C58.9406 65.1607 58.8163 64.8006 58.3928 64.9244C58.0936 64.9863 58.1269 64.5025 57.8672 64.7387C57.495 64.975 57.1896 64.5587 57.0653 64.2493C56.9242 63.8105 56.4781 63.9511 56.4109 64.3449C56.2409 64.7106 56.0382 65.1832 55.5752 65.2113C55.18 65.2169 54.8637 65.4476 54.6831 65.7964C54.5131 66.0664 54.2144 66.4152 53.8587 66.2408C53.5594 66.072 53.3222 65.5657 52.9213 65.7232C52.6108 65.8133 52.1026 65.4757 51.9275 65.6501C51.9157 65.9708 51.7581 66.3308 51.905 66.6402C52.0574 66.9609 52.582 66.8934 52.5368 67.3547C52.4978 67.6472 52.5148 67.9229 52.5712 68.2154L52.6509 68.2098C52.5261 68.2548 52.4194 68.3335 52.3234 68.4348C52.3798 68.1648 51.3121 68.3898 51.7468 67.9623C51.6283 67.636 51.2556 67.3322 51.0292 67.0621C50.6232 67.1634 50.2274 66.7752 50.5605 66.4152C50.2505 66.0214 49.8039 65.5207 49.4199 65.1382C49.2957 65.4476 48.9738 65.7289 48.6859 65.4082C48.5057 65.3744 47.5684 65.4926 48.0822 65.7289C48.5057 65.6613 48.6525 65.9989 48.4662 66.3364C48.0258 66.5615 48.613 66.8259 48.4543 67.1409C48.4606 67.6191 47.8056 67.8891 47.4097 68.0016C47.1387 67.6247 46.7208 67.3716 46.5232 66.9328C46.2183 66.7696 46.2974 65.8414 45.9473 66.2633C45.5238 66.252 45.1398 66.7021 45.0551 67.1409C45.1172 67.6135 44.7333 67.6529 44.3549 67.5516C43.9314 67.5966 43.412 67.6078 42.9885 67.8104C43.1071 67.7485 43.1579 67.6585 43.1014 67.5235C43.0619 67.3097 42.9885 67.0565 42.7683 66.9665C42.6327 66.9271 42.5367 67.0678 42.4238 67.124C42.2827 67.124 42.1415 67.1353 42.0003 67.1578C41.7801 67.1522 41.6841 67.3884 41.4921 67.4391C41.3792 67.5066 41.2663 67.5685 41.1533 67.6303C41.1308 67.861 41.1082 68.0916 41.0856 68.3167C40.9839 68.958 40.8823 69.5993 40.7807 70.2463C40.6056 71.197 40.3967 72.1478 40.2951 73.1154C40.233 73.6105 40.1821 74.1112 40.0297 74.5837C39.6683 75.9789 39.2674 77.3684 38.9794 78.7805C38.9342 78.893 38.9117 78.9999 38.9681 79.0505L38.9173 79.0393C38.7253 79.9562 38.4769 80.8564 38.2397 81.7677C38.0703 82.2965 37.867 82.8141 37.7146 83.3542C37.5508 84.0011 37.3927 84.6481 37.229 85.3006C37.2855 85.3344 37.3363 85.3794 37.3871 85.4244C37.3137 85.3907 37.2572 85.3738 37.2233 85.3907C37.0483 86.2739 36.9523 87.1853 36.5853 88.0179C36.4385 88.5185 36.3764 89.3118 36.2917 89.8237C36.5345 89.3849 37.3024 89.2836 37.5734 88.9124C38.2962 88.1079 38.1833 86.9996 38.7536 86.0714C39.2617 85.807 39.2166 86.7858 39.2956 87.0952C39.4481 88.181 39.2674 89.1542 39.2335 90.2456V90.3413C39.194 91.4495 38.7987 92.5015 38.5333 93.5704C38.5616 93.5704 38.2171 93.9023 38.2115 94.1161C38.0816 94.403 37.9856 94.9375 37.6242 94.9487C37.2798 94.7631 37.2911 94.3018 37.212 93.9586C37.1386 93.7054 37.4266 92.9122 37.2177 92.7884C37.3363 92.7547 37.421 92.6647 37.4153 92.4903C37.4887 92.1584 37.5621 91.8208 37.5113 91.4833C37.5 90.9938 37.6976 90.4819 37.4661 90.015C37.2459 89.9981 37.133 90.3244 36.941 90.4256C36.8958 90.4594 36.8563 90.4875 36.8055 90.51C36.557 90.7126 36.2352 90.8307 36.0093 91.0276C35.8399 91.3764 35.8456 91.7814 35.7214 92.1471L35.5802 92.6197C35.4503 93.3679 35.2583 94.1048 35.1115 94.8474C35.0042 95.3369 34.9026 95.8263 34.7897 96.3158C35.247 96.5295 35.6479 96.839 36.0037 97.199C36.6135 97.6716 36.9805 98.3748 37.5508 98.8867C38.0703 99.3086 38.5503 99.7924 38.8665 100.378C39.1714 100.49 38.9399 100.951 39.1545 101.036C39.6796 101.3 40.2047 101.581 40.7863 101.688C41.159 101.795 41.4639 101.328 41.3961 100.979C41.3114 100.535 41.2606 100.051 41.4187 99.618C41.4074 99.1511 41.7858 98.7404 41.893 98.3354C42.0455 98.2004 42.1641 98.1779 42.4238 98.1722C42.5537 98.4648 42.8473 98.2285 43.0958 98.341C43.5418 98.3185 43.6491 98.7292 43.7508 99.0442C43.8468 99.2749 44.0105 99.2974 43.8976 99.2749C43.8919 99.4605 44.0557 99.6237 44.05 99.8375C44.242 100.271 43.6943 100.501 43.7959 100.895C43.6604 101.396 43.7903 101.896 43.8411 102.408C43.7338 103.083 44.4058 103.027 44.8631 102.903C45.3544 102.903 45.5746 102.363 45.9868 102.257C46.2522 102.043 46.8677 101.778 47.0766 102.2C47.2234 102.493 47.534 102.465 47.0766 102.206C46.8959 102.099 46.8055 103.022 47.172 103.157C47.4775 103.128 47.5616 103.573 47.8615 103.669C48.172 103.916 48.2341 104.338 48.1268 104.659C47.884 104.968 48.0647 105.384 47.9015 105.756C47.7824 106.121 47.8168 106.431 47.9631 106.785C48.0026 107.162 48.0371 107.567 47.9123 107.933C47.5955 108.012 47.2177 108.062 46.879 108.085C46.6192 108.085 46.1731 107.584 46.0489 107.893C46.128 108.327 46.3256 108.76 46.2127 109.21C46.2127 109.514 46.7717 109.294 46.958 109.48C47.3984 109.553 47.8727 109.064 48.2511 109.508C48.5729 109.424 48.8276 109.502 48.8552 109.868C49.0868 110.189 49.4594 109.947 49.4995 109.632C49.7022 109.362 49.6288 109.041 49.7474 108.743C49.6627 108.456 49.4199 107.938 49.7762 107.77C50.1427 107.713 50.4476 107.32 50.792 107.584C51.0467 107.393 51.639 107.64 51.4075 107.156C51.4815 106.87 51.9558 106.543 51.6509 106.256C51.4137 106.088 51.5153 105.66 51.7977 105.947C52.159 106.138 52.543 106.251 52.8649 106.47L52.8937 106.498L52.9225 106.538Z\" fill=\"#BAC8FF\" stroke=\"white\" stroke-width=\"1.77165\"/>\r\n            <path d=\"M77.1032 97.4707C77.4985 97.33 77.0129 96.7225 77.7018 96.8181C78.4528 96.9306 79.1699 97.0769 79.6442 96.3343C80.0903 96.098 80.3218 95.5354 80.9316 95.603C81.1851 95.4679 81.6651 95.2598 81.795 95.423C81.9248 95.0348 82.4336 94.7873 82.7216 94.5116C83.2862 94.416 84.0937 94.5172 84.3139 93.8477C84.878 93.7915 85.4313 93.4258 86.0073 93.3752C86.4138 93.6115 86.7645 93.3021 87.1936 93.5609C87.5324 93.0545 88.153 93.0939 88.4133 92.4976C88.2433 92.852 87.769 93.1445 87.6115 92.6382C87.7408 92.1657 87.8543 91.6931 88.0062 91.2093C88.1818 90.7986 88.227 90.3261 88.5482 89.9942C88.8757 89.6622 88.6894 89.1897 88.7572 88.7846C88.9271 88.4077 89.7623 88.3064 89.5985 87.862C89.0113 87.6145 89.0954 87.0407 89.3896 86.5906C89.4517 86.4106 89.9091 86.4218 89.8865 86.1012C89.9209 86.0843 89.9599 86.0674 89.9932 86.0505C89.5985 86.0393 89.1185 85.578 88.6612 85.8593C88.1812 85.7467 88.2603 85.1167 87.7408 85.0773C87.4923 84.841 87.5093 84.4303 87.2213 84.2222C87.1987 83.7327 87.9328 83.654 88.136 83.2264C88.52 82.8776 88.3167 82.3938 87.983 82.0732C87.6047 81.6738 87.0796 81.4431 86.5375 81.3925C86.3619 81.2293 86.1931 81.0156 85.9107 80.9312C86.04 80.5036 86.1812 80.0648 86.594 79.806C86.8989 79.3166 87.1191 78.754 87.345 78.2196C87.5708 77.8483 87.4071 77.3251 87.5708 76.9032C87.8475 76.56 88.0677 76.2056 88.446 75.9468C88.4969 75.5361 88.734 75.5024 89.0163 75.7668C89.4229 76.0199 89.8859 75.9918 90.3438 75.9862C90.7278 76.2675 91.1169 76.5319 91.5296 76.7906C91.5748 77.2351 92.2298 77.342 92.0943 77.8708C92.467 78.1746 92.9187 78.2196 93.1169 78.6921C93.3597 78.8271 93.4607 79.0522 93.4382 79.2547C93.5116 79.0747 93.5912 78.9059 93.8391 78.9003C94.0598 78.3827 94.6296 77.9777 94.6697 77.3588C95.0757 76.9594 95.3134 76.3575 95.4715 75.7949C95.9339 75.1648 95.087 74.8835 94.7538 74.456C94.031 74.1634 94.7199 73.3533 94.9232 72.8977C95.5839 72.8864 96.188 73.0214 96.7871 73.3083C96.8436 73.4265 96.9283 73.5109 97.0181 73.5784C96.6911 73.1508 97.7013 72.9258 97.6448 72.397C98.0909 72.1663 99 72.0369 98.6612 71.3281C98.5263 70.7374 99.3281 70.0511 98.712 69.6123C98.362 69.0891 97.6561 69.4716 97.3286 68.8922C97.2835 68.3971 96.3693 68.8528 96.8035 68.2452C96.7979 67.8795 96.4704 67.3226 97.1203 67.407C97.6561 67.5195 98.4128 67.722 98.6731 67.1426L98.6787 67.137C98.4755 67.1088 98.4303 66.6644 98.3908 66.5463C98.2835 66.1412 97.9673 65.618 98.4636 65.2748C97.9334 64.6166 98.8199 64.0147 98.6844 63.3115C98.7973 62.6139 99.0011 61.9107 99.3224 61.2975C99.3902 60.8137 99.7911 60.4986 99.899 60.043C100.678 60.4761 101.378 59.7448 102.112 59.6998C102.931 60.1048 103.908 60.0598 104.693 60.5661C105.296 60.7912 106.415 60.7574 106.28 59.8461C106.325 59.0303 107.28 58.9459 107.538 58.3159C107.431 57.7758 108.261 57.4664 108.097 58.2033C108.182 58.8109 108.3 59.4579 107.6 59.7167C107.42 60.7743 108.696 59.6717 109.136 60.2792C110.113 60.7405 108.893 61.4775 108.792 62.0963C108.967 62.7433 108.521 63.604 109.481 63.7447C110.08 63.9697 110.69 64.3241 111.079 64.8417C111.147 65.5674 111.994 66.1637 112.666 65.7755C113.14 65.8937 113.57 66.1806 114.055 66.3044C114.173 66.3156 114.213 66.3493 114.213 66.3944C114.642 65.8655 115.359 66.5012 115.941 66.5012C116.133 66.6138 117.031 66.2987 116.8 66.6363C116.721 66.8557 116.275 67.0863 116.534 67.2889C117.596 68.5203 118.663 69.7473 119.713 70.9849C119.883 71.5981 120.097 72.2057 120.243 72.8189C120.25 73.0777 120.17 73.3646 120.227 73.6065C120.583 73.989 120.893 74.4391 121.272 74.7767C121.515 74.8329 121.803 74.8273 122.028 74.9117C122.124 75.598 122.272 76.29 122.333 76.9707C121.989 77.0719 121.633 77.1563 121.289 77.2576C121.395 77.8933 121.543 78.529 121.627 79.1647C121.521 79.6372 121.407 80.1154 121.3 80.5936C121.272 80.5767 121.243 80.5711 121.21 80.5599L121.227 80.5655C121.39 80.7061 121.125 81.0493 121.164 81.28C121.187 81.8875 121.148 82.512 121.21 83.1083C121.458 83.4965 121.729 83.8734 121.961 84.2672C121.972 84.8129 122.023 85.3586 122.204 85.8818C122.345 86.4556 122.525 87.0294 122.65 87.6032C122.283 88.554 121.989 89.5272 121.594 90.4667C121.391 90.8886 121.109 91.2881 120.95 91.7325C120.882 92.1825 120.815 92.6326 120.747 93.0827C121.306 93.3471 121.893 93.5777 122.435 93.859C122.593 94.6804 122.808 95.4961 122.943 96.3118C122.633 96.4806 122.299 96.6212 121.983 96.7844C121.915 97.1163 121.904 97.4763 121.814 97.8026C121.639 97.9489 121.52 98.3821 121.306 98.3427L121.272 98.3258C121.475 98.5396 120.91 98.8996 120.814 99.1697C120.43 99.4791 120.679 99.9629 120.679 100.379C120.724 100.891 120.735 101.414 121.052 101.842C121.413 102.551 122.068 103.051 122.559 103.665C122.847 104.098 123.288 104.328 123.739 104.553C123.722 104.773 123.372 104.863 123.259 105.043C122.96 105.274 123.271 105.735 123.237 106.061C123.343 106.354 123.084 106.601 122.993 106.86C122.474 106.939 121.983 107.108 121.57 107.439C121.057 107.777 120.537 108.109 120.018 108.441C119.922 109.195 119.888 109.988 119.758 110.725C118.526 110.837 117.313 111.034 116.093 111.209C116.026 110.32 114.868 110.432 114.387 109.836C113.891 109.707 112.818 108.514 113.095 109.628C112.118 109.667 111.232 109.875 110.3 109.853C109.865 109.594 109.797 109.403 110.051 109.026C109.312 108.655 109.685 106.849 108.583 107.361C107.866 108.238 108.346 109.532 107.223 110.05C106.398 110.956 105.692 109.437 104.857 109.498C103.772 109.155 103.903 111.692 102.796 110.775C102.39 110.325 101.763 110.894 101.351 110.314C101.136 110.264 100.921 110.286 100.706 110.28C100.26 109.87 99.0407 109.639 99.3795 108.84C100.509 108.7 100.949 107.524 101.435 106.702C101.073 105.87 101.582 104.987 101.785 104.143C102.118 103.338 101.954 102.697 101.846 102.461C101.254 102.028 100.627 101.971 100.187 102.601C99.7126 102.511 99.5602 101.825 99.17 102.506C98.6228 102.77 98.4529 103.586 98.5438 103.974C98.1711 103.636 97.6911 103.04 97.2281 103.71C96.511 104.452 95.5229 103.721 94.7549 103.58C94.083 104.165 93.699 103.501 93.3314 102.989C93.3151 102.821 93.2586 102.674 93.2354 102.826C93.1513 103.119 92.6092 103.051 92.3664 103.282C91.9593 103.411 91.9311 103.85 91.6098 104.07C91.3043 104.345 91.2592 104.762 91.0276 105.088C91.0564 105.442 91.0276 105.808 90.9486 106.179C90.8808 106.618 90.4353 106.905 90.3105 107.327C90.3952 107.805 89.8526 107.828 89.5087 107.687C89.1586 107.653 88.7069 107.456 88.4359 107.771C88.3235 107.974 88.1423 108.396 87.996 107.963C87.9395 107.535 87.4878 107.445 87.1372 107.535C87.0079 107.563 86.8718 107.574 86.7363 107.552V107.535C86.6516 108.036 86.6798 108.576 86.2732 108.908C85.8108 109.431 85.3082 109.943 84.8051 110.415C84.2461 110.472 83.546 110.477 82.9988 110.849C82.293 110.927 82.0445 111.743 81.5527 112.182C81.293 112.784 80.3387 112.654 79.8243 112.435C79.5143 112.722 79.0225 113.054 78.966 112.396C78.6385 111.766 78.1027 111.366 77.4076 111.282C77.1704 110.882 77.3229 110.747 77.5143 110.483C77.6498 109.74 78.0626 108.835 78.5025 108.351C78.9768 108.131 79.2986 107.799 79.8689 107.935C79.9818 107.591 80.4844 106.787 79.7622 106.731C79.5702 106.404 79.1524 106.933 79.0728 106.416C78.5025 106.264 77.7746 105.769 78.4861 105.234C78.5764 104.508 78.2941 103.794 78.3788 103.035C78.1925 102.258 77.0061 103.366 76.6058 102.646C75.7644 102.061 76.2043 101.049 77.0908 100.795C77.5199 100.576 78.0338 101.049 78.1241 100.312C78.83 99.3778 77.2771 99.0572 77.114 98.2977C77.075 98.022 77.0919 97.7463 77.1032 97.4707Z\" fill=\"#BAC8FF\" stroke=\"white\" stroke-width=\"1.77165\"/>\r\n            <path d=\"M53.7147 104.507C54.2573 104.586 54.6243 104.951 54.7824 105.474C55.1382 105.936 55.0704 105.041 55.4719 105.244C56.093 105.249 56.674 105.626 56.9564 106.178C57.1596 106.819 57.9225 106.74 58.1201 107.342C58.6396 107.663 59.1365 106.993 59.5713 106.768C59.9101 106.47 60.2427 106.211 60.7063 106.358C61.1128 106.127 61.3443 106.442 61.4177 106.791C61.9146 106.965 61.7345 105.699 62.2816 106.329C62.5978 106.695 63.0665 106.448 63.394 106.639C63.4448 106.819 63.5578 106.898 63.6876 106.943C63.8463 106.78 63.2641 106.358 63.852 106.358C63.9536 106.431 64.0383 106.538 64.1224 106.628C64.1614 106.628 64.2066 106.639 64.2353 106.661C64.2579 106.639 64.2862 106.622 64.3144 106.611C64.5459 106.313 65.6814 104.951 65.9801 105.249C66.0479 105.249 66.1213 105.244 66.1947 105.238C66.3477 104.957 66.494 104.692 66.7085 104.434C66.7368 104.434 67.267 104.434 67.2901 104.338C67.3861 104.338 67.5329 104.023 67.612 103.933C67.7018 103.888 67.8881 103.91 67.9282 103.871C68.0016 103.871 68.3291 103.899 68.3686 103.854C69.0513 103.854 69.5651 103.359 70.1016 102.993C70.926 102.993 71.18 101.435 71.9593 101.823C72.6035 101.553 72.9248 100.873 73.2072 100.332C73.6532 99.8993 74.1897 99.5337 74.551 99.033C75.0818 98.7798 75.3817 98.2454 75.8334 97.9191C76.2117 97.6209 76.7029 97.7447 77.1039 97.4746C77.0304 98.0597 77.0869 98.6954 77.6623 98.9654C77.9565 99.3311 78.594 99.6293 78.1993 100.158C78.0463 100.552 77.8656 100.985 77.3913 100.698C76.8836 100.85 76.3579 101.176 76.0982 101.643C76.1998 102.121 76.3642 102.566 76.8328 102.836C77.3071 103.095 77.9226 102.51 78.3969 102.853C78.267 103.483 78.5155 104.147 78.4816 104.743C78.6567 105.21 78.1197 105.503 78.1993 105.924C78.5488 106.217 79.1078 106.408 79.3342 106.684C79.6329 106.487 80.0169 106.83 80.1869 106.993C79.9661 107.415 80.0965 108.208 79.3907 107.922C78.9836 107.826 78.8097 108.479 78.3517 108.36C78.131 108.872 77.917 109.39 77.6403 109.879C77.5607 110.284 77.5273 110.622 77.245 110.847C77.3348 111.713 78.227 111.145 78.5601 111.854C79.0971 112.394 79.2947 113.041 79.0802 113.772C78.8204 114.419 78.5324 115.077 78.131 115.657C78.3405 116.091 78.5206 116.585 78.8368 117.03C79.7007 116.844 79.5878 117.654 79.887 118.093C80.4517 118.593 81.677 118.723 81.3828 119.741C81.795 120.366 79.9943 120.292 80.9825 120.669C80.9373 121.221 80.0559 121.564 79.6555 121.991C79.9091 122.97 78.5262 121.705 79.0226 121.277C78.6561 120.81 78.3964 121.474 78.0124 121.581C77.3574 121.716 77.8424 122.059 78.2439 121.744C79.0965 121.654 77.8537 122.053 78.2264 122.329C78.8707 122.773 77.8712 122.813 78.0288 123.33C78.6499 123.364 78.1473 123.707 78.0175 124.062C77.4748 123.477 77.3681 123.077 76.481 123.145C76.0575 122.661 75.5273 122.723 75.2337 123.291C74.612 123.707 73.8221 123.471 73.4263 124.202C73.4206 124.692 73.7538 125.069 73.8159 125.631C74.3975 126.514 72.8729 125.294 73.4375 126.064C72.9751 126.627 72.2512 125.946 71.6414 126.081C71.896 126.514 71.0886 126.818 71.2975 127.336C70.9135 127.617 70.5352 126.149 70.0044 126.914C70.2297 127.578 69.5239 127.431 69.3607 126.965C68.7057 126.588 69.0615 127.398 69.4115 127.578C69.1066 128.028 68.389 127.64 68.1411 127.094C67.8192 127.257 68.0959 127.972 68.2258 128.309C67.7966 128.647 66.8757 127.437 66.8757 128.489C66.6555 129.49 65.6792 127.6 65.7808 128.635C66.2608 129.384 65.464 129.699 64.7808 129.412C64.0976 128.68 64.3968 130.121 64.0976 130.154C63.0981 129.997 64.036 129.49 64.1823 128.99C64.5713 128.872 64.6792 128.41 64.9163 128.045C64.8373 128.118 64.769 128.173 64.7074 128.191C64.691 127.566 64.0693 127.24 63.8717 126.7C63.189 126.408 63.477 125.699 63.0027 125.221C62.4093 124.956 62.6633 124.236 62.7768 123.752C62.8113 123.145 63.2619 122.773 63.2003 122.16C62.5849 121.907 62.2178 121.333 61.5346 121.125C61.5685 121.052 61.5798 120.979 61.586 120.906C61.5064 121.204 61.241 121.418 61.0885 121.704C60.857 122.138 60.3884 122.43 60.2641 122.92C60.0388 123.465 59.6424 122.824 59.3833 122.638C59.1461 122.385 58.7955 122.447 58.5527 122.295C58.5815 122.34 58.6035 122.391 58.6148 122.447C58.4166 122.65 58.4284 123.184 58.0671 123.212C57.5927 123.105 57.2765 123.471 57.1405 123.876C56.7791 124.067 57.084 124.461 56.7966 124.692C56.7345 124.669 56.6667 124.635 56.5989 124.596C56.717 124.725 56.7514 124.883 56.6102 125.063C56.119 125.372 56.4239 125.862 56.6949 126.228C56.8474 126.61 57.2088 126.649 57.5476 126.734C57.4798 126.959 57.2534 127.139 57.1856 127.33C57.3437 127.437 57.6543 127.808 57.2596 127.764C56.9598 127.921 57.3833 128.338 57.0445 128.433C56.7113 128.158 56.4403 127.77 55.966 127.747C55.5312 127.646 55.927 126.436 55.407 126.948C55.2212 127.201 55.6277 127.668 55.1083 127.725C54.9671 128.073 54.9055 128.456 54.5549 128.681C54.4307 128.833 54.2669 128.94 54.137 129.08C53.9569 129.362 53.6972 129.457 53.6068 129.8C53.285 130.172 52.7486 130.234 52.2855 130.251C52.071 130.104 51.3652 130.296 51.4837 130.065C51.9524 130.037 52.2742 129.694 52.1551 129.232C52.0258 128.833 52.8728 129.002 52.477 128.608C52.2793 128.22 52.0704 127.798 51.7881 127.46C51.5509 127.291 51.923 126.796 51.6588 126.526C51.4549 126.194 51.5058 125.711 51.1726 125.587C51.2629 125.384 50.9298 125.272 50.9925 125.08C50.722 124.99 50.5808 124.54 50.2584 124.884C50.1286 125.17 50.298 125.834 50.7164 125.75C50.5408 126.127 49.993 125.919 49.8575 125.592C49.5808 125.441 49.4459 125.058 49.1686 124.996C49.2358 125.114 49.2415 125.272 49.1342 125.491C48.8355 126.228 47.8242 126.262 47.4289 126.926C46.8586 126.976 46.0738 127.044 46.2601 127.831C46.2545 128.495 45.2776 129.418 45.0009 128.383C44.7468 127.73 45.3736 127.303 45.0913 126.656C45.0517 125.997 45.1873 125.294 44.8993 124.681C44.5097 124.259 43.7079 124.366 43.211 124.552C42.7818 124.89 42.8439 125.565 42.3753 125.852C42.3979 126.673 41.517 126.617 40.9749 126.589C40.5458 126.257 41.4154 125.312 40.5119 125.216C39.9303 125.059 39.6988 124.305 39.0438 124.417C38.3944 124.44 37.7507 124.507 37.1409 124.209C36.9997 124.181 36.9094 124.097 36.8416 123.984C36.7795 124.406 35.9382 124.007 35.4526 123.793C34.7806 123.663 34.1595 124.147 34.041 124.834C33.8264 125.649 33.1488 124.997 32.714 124.856C32.1268 124.226 31.5452 124.98 30.845 124.704C30.7264 124.125 30.286 123.72 29.71 123.624C29.6649 123.444 29.8569 123.146 29.902 122.921C30.2634 121.672 30.6417 120.429 31.0596 119.197C31.2516 118.814 31.1443 118.398 31.133 117.987C31.1781 117.559 30.8789 117.228 30.7095 116.862C30.2916 116.513 29.806 116.221 29.36 115.894C29.2583 115.652 29.2244 115.371 29.1454 115.118C29.2527 114.831 29.4277 114.567 29.5519 114.286C29.8851 113.099 30.3707 111.963 30.8055 110.809C31.3024 109.645 31.6242 108.424 31.9969 107.22C32.1889 107.344 32.1945 107.338 31.9969 107.22C32.2905 106.129 32.5785 105.043 32.8721 103.957C32.9116 103.811 32.9455 103.67 32.985 103.524C33.2109 102.545 33.4029 101.555 33.6175 100.57C33.8264 99.8279 34.0692 99.0965 34.2894 98.3596C34.5153 97.6957 34.6225 96.9925 34.7863 96.3062C34.9726 96.4074 35.1646 96.5087 35.351 96.61C35.6897 96.8744 35.9834 97.2007 36.3165 97.4707C36.7005 97.887 37.028 98.3539 37.4119 98.7759C37.7959 99.119 38.2194 99.4284 38.5243 99.8504C38.6768 100.16 39.1285 100.48 38.9591 100.84C39.0325 100.942 39.0438 100.829 39.4842 101.212C40.0432 101.538 41.3702 102.163 41.3984 101.037C41.2121 100.419 41.3758 99.7547 41.5001 99.164C41.7937 98.7702 41.9461 97.6789 42.5729 98.3539C43.4199 98.0502 43.7587 98.9053 43.9732 99.4903C44.2838 100.154 43.7079 100.599 43.7304 101.229C43.849 101.774 43.5554 103.029 44.3516 102.967C45.0969 103.029 45.6107 102.455 46.1472 102.129C46.582 101.786 47.4402 101.769 46.9716 102.494C46.7514 103.282 47.796 103.299 48.1009 103.963C48.2195 104.683 47.9253 105.403 47.7903 106.162C47.8976 106.686 48.3488 107.867 47.604 107.996C47.0506 108.238 46.5481 107.878 46.0455 107.816C46.2432 108.289 46.1472 109.043 46.3335 109.358C46.6271 109.313 46.8191 109.442 46.9716 109.639C46.9546 109.594 46.949 109.543 46.9433 109.498C47.4239 109.476 47.9196 109.144 48.355 109.51C48.8807 109.234 48.8857 110.477 49.4052 109.858C49.6757 109.341 49.84 108.773 49.5916 108.193C49.5684 107.614 50.4442 107.451 50.8564 107.558C51.1664 107.434 51.6187 107.597 51.4148 107.102C51.7542 106.742 51.8265 106.348 51.5052 105.982C51.7649 105.695 52.4143 106.365 52.8095 106.416C52.8383 106.489 52.8773 106.579 52.9287 106.674C52.9343 106.354 53.3973 106.224 53.6565 106.084C54.0422 105.508 53.5063 105.052 53.7147 104.507Z\" fill=\"#BAC8FF\"/>\r\n            <path d=\"M31.9969 107.22C31.6242 108.424 31.3024 109.645 30.8055 110.809C30.3707 111.963 29.8851 113.099 29.5519 114.286C29.4277 114.567 29.2527 114.831 29.1454 115.118C29.2244 115.371 29.2583 115.652 29.36 115.894C29.806 116.221 30.2916 116.513 30.7095 116.862C30.8789 117.228 31.1781 117.559 31.133 117.987C31.1443 118.398 31.2516 118.814 31.0596 119.197C30.6417 120.429 30.2634 121.672 29.902 122.921C29.8569 123.146 29.6649 123.444 29.71 123.624C30.286 123.72 30.7264 124.125 30.845 124.704C31.5452 124.98 32.1268 124.226 32.714 124.856C33.1488 124.997 33.8264 125.649 34.041 124.834C34.1595 124.147 34.7806 123.663 35.4526 123.793C35.9382 124.007 36.7795 124.406 36.8416 123.984C36.9094 124.097 36.9997 124.181 37.1409 124.209C37.7507 124.507 38.3944 124.44 39.0438 124.417C39.6988 124.305 39.9303 125.059 40.5119 125.216C41.4154 125.312 40.5458 126.257 40.9749 126.589C41.517 126.617 42.3979 126.673 42.3753 125.852C42.8439 125.565 42.7818 124.89 43.211 124.552C43.7079 124.366 44.5097 124.259 44.8993 124.681C45.1873 125.294 45.0517 125.997 45.0913 126.656C45.3736 127.303 44.7468 127.73 45.0009 128.383C45.2776 129.418 46.2545 128.495 46.2601 127.831C46.0738 127.044 46.8586 126.976 47.4289 126.926C47.8242 126.262 48.8355 126.228 49.1342 125.491C49.2415 125.272 49.2358 125.114 49.1686 124.996C49.4459 125.058 49.5808 125.441 49.8575 125.592C49.993 125.919 50.5408 126.127 50.7164 125.75C50.298 125.834 50.1286 125.17 50.2584 124.884C50.5808 124.54 50.722 124.99 50.9925 125.08C50.9298 125.272 51.2629 125.384 51.1726 125.587C51.5058 125.711 51.4549 126.194 51.6588 126.526C51.923 126.796 51.5509 127.291 51.7881 127.46C52.0704 127.798 52.2793 128.22 52.477 128.608C52.8728 129.002 52.0258 128.833 52.1551 129.232C52.2742 129.694 51.9524 130.037 51.4837 130.065C51.3652 130.296 52.071 130.104 52.2855 130.251C52.7486 130.234 53.285 130.172 53.6068 129.8C53.6972 129.457 53.9569 129.362 54.137 129.08C54.2669 128.94 54.4307 128.833 54.5549 128.681C54.9055 128.456 54.9671 128.073 55.1083 127.725C55.6277 127.668 55.2212 127.201 55.407 126.948C55.927 126.436 55.5312 127.646 55.966 127.747C56.4403 127.77 56.7113 128.158 57.0445 128.433C57.3833 128.338 56.9598 127.921 57.2596 127.764C57.6543 127.808 57.3437 127.437 57.1856 127.33C57.2534 127.139 57.4798 126.959 57.5476 126.734C57.2088 126.649 56.8474 126.61 56.6949 126.228C56.4239 125.862 56.119 125.372 56.6102 125.063C56.7514 124.883 56.717 124.725 56.5989 124.596C56.6667 124.635 56.7345 124.669 56.7966 124.692C57.084 124.461 56.7791 124.067 57.1405 123.876C57.2765 123.471 57.5927 123.105 58.0671 123.212C58.4284 123.184 58.4166 122.65 58.6148 122.447C58.6035 122.391 58.5815 122.34 58.5527 122.295C58.7955 122.447 59.1461 122.385 59.3833 122.638C59.6424 122.824 60.0388 123.465 60.2641 122.92C60.3884 122.43 60.857 122.138 61.0885 121.704C61.241 121.418 61.5064 121.204 61.586 120.906C61.5798 120.979 61.5685 121.052 61.5346 121.125C62.2178 121.333 62.5849 121.907 63.2003 122.16C63.2619 122.773 62.8113 123.145 62.7768 123.752C62.6633 124.236 62.4093 124.956 63.0027 125.221C63.477 125.699 63.189 126.408 63.8717 126.7C64.0693 127.24 64.691 127.566 64.7074 128.191C64.769 128.173 64.8373 128.118 64.9163 128.045C64.6792 128.41 64.5713 128.872 64.1823 128.99C64.036 129.49 63.0981 129.997 64.0976 130.154C64.3968 130.121 64.0976 128.68 64.7808 129.412C65.464 129.699 66.2608 129.384 65.7808 128.635C65.6792 127.6 66.6555 129.49 66.8757 128.489C66.8757 127.437 67.7966 128.647 68.2258 128.309C68.0959 127.972 67.8192 127.257 68.1411 127.094C68.389 127.64 69.1066 128.028 69.4115 127.578C69.0615 127.398 68.7057 126.588 69.3607 126.965C69.5239 127.431 70.2297 127.578 70.0044 126.914C70.5352 126.149 70.9135 127.617 71.2975 127.336C71.0886 126.818 71.896 126.514 71.6414 126.081C72.2512 125.946 72.9751 126.627 73.4375 126.064C72.8729 125.294 74.3975 126.514 73.8159 125.631C73.7538 125.069 73.4206 124.692 73.4263 124.202C73.8221 123.471 74.612 123.707 75.2337 123.291C75.5273 122.723 76.0575 122.661 76.481 123.145C77.3681 123.077 77.4748 123.477 78.0175 124.062C78.1473 123.707 78.6499 123.364 78.0288 123.33C77.8712 122.813 78.8707 122.773 78.2264 122.329C77.8537 122.053 79.0965 121.654 78.2439 121.744C77.8424 122.059 77.3574 121.716 78.0124 121.581C78.3964 121.474 78.6561 120.81 79.0226 121.277C78.5262 121.705 79.9091 122.97 79.6555 121.991C80.0559 121.564 80.9373 121.221 80.9825 120.669C79.9943 120.292 81.795 120.366 81.3828 119.741C81.677 118.723 80.4517 118.593 79.887 118.093C79.5878 117.654 79.7007 116.844 78.8368 117.03C78.5206 116.585 78.3404 116.091 78.131 115.657C78.5324 115.077 78.8204 114.419 79.0801 113.772C79.2947 113.041 79.0971 112.394 78.5601 111.854C78.227 111.145 77.3348 111.713 77.245 110.847C77.5273 110.622 77.5607 110.284 77.6403 109.879C77.917 109.39 78.131 108.872 78.3517 108.36C78.8097 108.479 78.9836 107.826 79.3907 107.922C80.0965 108.208 79.9661 107.415 80.1869 106.993C80.0169 106.83 79.6329 106.487 79.3342 106.684C79.1078 106.408 78.5488 106.217 78.1993 105.924C78.1197 105.503 78.6567 105.21 78.4816 104.743C78.5155 104.147 78.267 103.483 78.3969 102.853C77.9226 102.51 77.3071 103.095 76.8328 102.836C76.3642 102.566 76.1998 102.121 76.0982 101.643C76.3579 101.176 76.8836 100.85 77.3913 100.698C77.8656 100.985 78.0463 100.552 78.1993 100.158C78.594 99.6293 77.9565 99.3311 77.6623 98.9654C77.0869 98.6954 77.0304 98.0597 77.1039 97.4746C76.7029 97.7447 76.2117 97.6209 75.8334 97.9191C75.3817 98.2454 75.0818 98.7798 74.551 99.033C74.1897 99.5337 73.6532 99.8993 73.2072 100.333C72.9248 100.873 72.6035 101.553 71.9593 101.823C71.1801 101.435 70.926 102.993 70.1016 102.993C69.5651 103.359 69.0513 103.854 68.3686 103.854C68.3291 103.899 68.0016 103.871 67.9282 103.871C67.8881 103.91 67.7018 103.888 67.612 103.933C67.5329 104.023 67.3861 104.338 67.2901 104.338C67.267 104.434 66.7368 104.434 66.7085 104.434C66.494 104.692 66.3477 104.957 66.1947 105.238C66.1213 105.244 66.0479 105.249 65.9801 105.249C65.6814 104.951 64.5459 106.313 64.3144 106.611C64.2862 106.622 64.2579 106.639 64.2353 106.661C64.2066 106.639 64.1614 106.628 64.1224 106.628C64.0383 106.538 63.9536 106.431 63.8519 106.358C63.2641 106.358 63.8463 106.78 63.6876 106.943C63.5578 106.898 63.4448 106.819 63.394 106.639C63.0665 106.448 62.5978 106.695 62.2816 106.329C61.7345 105.699 61.9146 106.965 61.4177 106.791C61.3443 106.442 61.1128 106.127 60.7063 106.358C60.2427 106.211 59.9101 106.47 59.5713 106.768C59.1365 106.993 58.6396 107.663 58.1201 107.342C57.9225 106.74 57.1596 106.819 56.9564 106.178C56.674 105.626 56.093 105.249 55.4719 105.244C55.0704 105.041 55.1382 105.936 54.7824 105.474C54.6243 104.951 54.2573 104.586 53.7147 104.507C53.5063 105.052 54.0422 105.508 53.6565 106.084C53.3973 106.224 52.9343 106.354 52.9287 106.674C52.8773 106.579 52.8383 106.489 52.8095 106.416C52.4143 106.365 51.7649 105.695 51.5052 105.982C51.8265 106.348 51.7542 106.742 51.4148 107.102C51.6187 107.597 51.1664 107.434 50.8564 107.558C50.4442 107.451 49.5684 107.614 49.5916 108.193C49.84 108.773 49.6757 109.341 49.4052 109.858C48.8857 110.477 48.8807 109.234 48.355 109.51C47.9196 109.144 47.4239 109.476 46.9433 109.498C46.949 109.543 46.9546 109.594 46.9716 109.639C46.8191 109.442 46.6271 109.313 46.3335 109.358C46.1472 109.043 46.2432 108.289 46.0455 107.816C46.5481 107.878 47.0506 108.238 47.604 107.996C48.3488 107.867 47.8976 106.686 47.7903 106.162C47.9253 105.403 48.2195 104.683 48.1009 103.963C47.796 103.299 46.7514 103.282 46.9716 102.494C47.4402 101.769 46.582 101.786 46.1472 102.129C45.6107 102.455 45.0969 103.029 44.3516 102.967C43.5554 103.029 43.849 101.774 43.7304 101.229C43.7079 100.599 44.2838 100.154 43.9732 99.4903C43.7587 98.9053 43.4199 98.0502 42.5729 98.3539C41.9461 97.6789 41.7937 98.7702 41.5001 99.164C41.3758 99.7547 41.2121 100.419 41.3984 101.037C41.3702 102.163 40.0432 101.538 39.4842 101.212C39.0438 100.829 39.0325 100.942 38.9591 100.84C39.1285 100.48 38.6768 100.16 38.5243 99.8504C38.2194 99.4284 37.7959 99.119 37.4119 98.7759C37.028 98.3539 36.7005 97.887 36.3165 97.4707C35.9834 97.2007 35.6897 96.8744 35.351 96.61C35.1646 96.5087 34.9726 96.4074 34.7863 96.3062C34.6225 96.9925 34.5153 97.6957 34.2894 98.3596C34.0692 99.0965 33.8264 99.8279 33.6175 100.57C33.4029 101.555 33.2109 102.545 32.985 103.524C32.9455 103.67 32.9116 103.811 32.8721 103.957C32.5785 105.043 32.2905 106.129 31.9969 107.22ZM31.9969 107.22C32.1889 107.344 32.1945 107.338 31.9969 107.22Z\" stroke=\"white\" stroke-width=\"1.77165\"/>\r\n            <path d=\"M62.4313 223.148C61.3302 222.709 60.822 221.246 59.3709 221.595C58.4731 221.347 57.3663 221.55 57.3494 220.413C56.7509 219.518 54.2833 220.857 55.6046 219.4C56.0507 218.736 56.8361 217.864 56.0733 217.166C56.8181 217.223 56.8073 217.014 56.604 216.374C55.7509 216.667 54.2946 216.25 55.39 215.31C55.6837 214.578 54.7633 213.206 54.4363 212.368C53.6402 211.783 53.3686 210.63 52.7932 210.152C51.4832 210.248 50.901 212.368 49.5069 211.277C49.1737 209.685 47.508 211.581 47.045 210.152C45.91 209.938 46.2658 210.726 46.7457 211.344C46.6893 212.042 45.3849 212.464 45.5995 211.395C45.1139 210.495 43.2787 211.642 43.5949 210.068C42.6124 210.619 41.7598 209.24 40.6418 209.809C40.5797 209.809 40.5176 209.815 40.4555 209.815C40.6587 209.725 40.7547 209.545 40.5684 209.14C40.4667 208.538 40.015 208.009 40.0376 207.367C39.473 206.715 40.2409 206.209 40.7886 205.793C41.0145 205.213 41.6186 204.943 41.9066 204.38C41.901 204.341 41.8953 204.301 41.884 204.268C42.1833 204.42 42.6971 204.127 42.9456 203.767C43.3634 203.007 43.7587 202.277 44.7977 202.349C45.6672 202.226 46.5142 201.939 47.4064 202.113C47.7734 201.297 46.814 200.453 46.4244 199.694C45.9953 199.069 47.3279 197.719 46.0179 197.651C45.154 197.686 44.4933 197.291 43.6971 197.094C43.0421 197.691 42.4888 196.791 41.879 196.526C42.4041 196.003 42.1387 195.204 42.3024 194.496C42.0201 193.888 42.8219 193.68 42.6356 193.095C42.0032 193.196 41.2691 193.596 41.0658 194.17C40.9303 195.086 40.0495 194.963 39.5526 194.361C38.8016 194.265 38.5701 193.578 38.1127 193.05C37.7796 193.23 37.6214 194.456 37.1245 194.94C36.7688 195.682 35.8597 196.397 36.1082 197.274C37.1584 197.859 36.4018 198.602 35.775 199.198C35.8371 199.266 35.8992 199.328 35.967 199.384C35.775 199.288 35.583 199.209 35.3798 199.187C34.7699 198.844 33.8495 199.586 33.4261 198.748C33.1889 198.737 33.0195 198.861 32.884 199.052C32.9743 198.71 32.9179 198.383 32.4605 198.107C31.7942 196.976 30.7552 198.033 30.0155 198.416C29.3605 199.091 28.8185 198.467 28.3611 198.129C28.0449 198.821 27.74 198.095 27.7004 197.656C27.1866 197.628 26.6671 197.595 26.1533 197.561C25.7354 197.426 25.9782 198.135 25.5378 198.118C24.6174 198.45 23.9342 199.203 23.0759 199.67L23.0985 199.693C23.0703 199.676 23.0364 199.676 23.0082 199.715C22.7428 199.862 22.483 200.025 22.212 200.16C22.1216 200.655 22.0257 201.151 21.941 201.639C21.9635 201.713 22.0765 201.69 22.1329 201.729C22.2572 201.764 22.3814 201.825 22.5113 201.842L22.5395 201.836C22.5226 201.842 22.5056 201.853 22.4887 201.859C22.387 202.044 22.2628 202.224 22.1668 202.41V202.483V202.393C21.9014 202.466 21.6304 202.533 21.365 202.601C21.3029 202.59 21.2069 202.68 21.1279 202.703C20.885 202.826 20.6366 202.945 20.3994 203.074C20.2639 203.231 20.1341 203.383 19.9985 203.541C19.7332 203.58 19.4621 203.62 19.1911 203.664C18.9144 203.586 18.6434 203.462 18.3667 203.372L18.3497 203.388C18.361 203.321 18.2538 203.248 18.2029 203.175C18.011 202.96 17.8246 202.741 17.6383 202.528C17.6496 202.263 17.706 201.999 17.6835 201.734C17.5762 201.695 17.435 201.734 17.3164 201.723C17.1809 201.729 17.0906 201.689 16.972 201.763C16.6332 201.891 16.3 202.049 15.9556 202.15C15.3232 202.201 14.6964 202.251 14.064 202.296C13.9567 202.291 13.8156 202.381 13.6913 202.415C13.2453 202.572 12.7992 202.735 12.3531 202.898C12.2966 202.792 12.2402 202.673 12.1893 202.572C11.9522 202.617 11.7094 202.64 11.4779 202.696C11.409 202.799 11.5897 202.844 11.6349 202.912C12.0132 203.216 12.3915 203.519 12.7698 203.824C12.8319 203.992 12.99 204.127 13.0917 204.28C13.5095 204.836 13.9499 205.382 14.3565 205.945C14.7009 207.059 15.0397 208.173 15.3785 209.281C15.4406 209.399 15.4858 209.596 15.61 209.416C15.627 209.399 15.6439 209.388 15.6609 209.371C15.627 209.427 15.5762 209.472 15.4971 209.511C15.5931 209.708 15.6947 209.905 15.7964 210.096C15.7568 210.89 15.7173 211.677 15.6721 212.465C15.6157 212.752 15.9206 213.011 15.7964 213.292C15.706 213.826 15.4519 214.311 15.2543 214.811C15.0962 215.244 14.8873 215.649 14.6445 216.042C14.4073 216.38 14.3283 216.78 14.1927 217.162C14.1532 217.347 14.0346 217.522 14.0346 217.708C14.3452 217.798 14.6784 217.837 14.9946 217.91C15.5987 217.466 16.1973 216.999 16.8015 216.543C17.1572 216.622 17.5129 216.7 17.8687 216.785C18.2244 216.724 18.5858 216.605 18.9472 216.532C19.0488 216.397 19.1278 216.239 19.2238 216.093C19.8845 216.177 20.5508 216.268 21.2114 216.352C21.697 216.2 22.1713 216.003 22.6513 215.835C22.8941 215.694 23.103 215.492 23.3289 215.333C23.3119 215.261 23.2894 215.193 23.2668 215.126C23.391 215.3 23.5547 215.357 23.8314 215.103C24.2888 214.928 24.7236 214.698 25.0228 214.293C25.4012 213.944 25.8303 213.556 26.378 213.551C26.8467 213.433 27.513 213.59 27.6428 212.977C27.8969 212.482 28.1341 211.953 28.6818 211.722C29.0545 211.306 29.5006 211.435 29.9184 211.717C31.1211 212.64 32.3182 213.579 33.5661 214.451C33.9783 214.361 34.5034 214.524 34.8253 214.198C35.2714 213.843 35.6892 213.478 35.5085 212.847C35.5254 212.392 35.0398 211.959 35.1358 211.554C35.2657 211.39 35.373 211.216 35.469 211.036L35.4633 211.064C35.4238 211.312 35.7174 211.56 35.8755 211.722C36.1748 211.802 36.5136 211.88 36.8298 211.863C36.5983 211.959 36.4684 212.105 36.6548 212.555C36.7507 213.674 36.8524 214.788 36.9484 215.908C37.417 216.217 37.8857 216.521 38.3487 216.83C38.5464 217.467 37.7389 217.202 37.3662 217.326C36.8693 217.449 36.4289 217.382 36.0788 216.988C35.7344 216.65 35.3222 216.459 34.8366 216.454C34.0178 216.252 33.1765 215.885 32.3351 215.975C31.7761 215.665 31.155 215.424 30.8444 214.822C30.3475 214.158 29.8789 213.46 29.1279 213.061C28.9359 212.69 27.7784 213.078 28.3487 213.348C29.574 214.473 30.7089 215.7 31.7027 217.021C32.3013 218.141 32.9901 219.221 33.2725 220.47C33.6226 221.742 34.142 223.002 34.142 224.335C34.1703 224.796 34.1985 225.252 34.2267 225.713C34.4413 227.496 34.4865 229.319 34.1646 231.092C34.0235 232.273 33.6564 233.409 33.408 234.568H33.3741C33.1821 236.014 32.5384 237.33 32.0641 238.698C31.8947 239.103 31.4938 239.744 31.6011 240.166L31.5164 240.053C31.0477 241.19 30.5169 242.298 29.9862 243.412C29.7208 243.626 29.4497 243.846 29.19 244.064C29.2126 244.267 29.3425 244.498 29.4215 244.689C29.5909 244.661 29.7885 244.554 29.9523 244.491C30.8783 245.043 31.81 245.605 32.7135 246.202C32.7812 246.309 32.7586 246.607 32.8377 246.685C32.9506 247.282 33.1144 247.878 33.2386 248.474C33.2104 249.543 33.2104 249.543 33.1991 250.303C33.2612 250.837 33.3685 251.394 33.3967 251.929C33.5548 251.985 33.6677 252.019 33.8315 252.019L34.0969 252.12C34.1364 252.12 34.1759 252.115 34.2211 252.115C34.4978 252.339 34.797 252.284 35.0794 252.486C35.356 252.559 35.6101 252.435 35.8925 252.435C35.9264 252.396 35.9489 252.362 35.9941 252.339L36.1353 252.334C36.2651 252.322 36.3837 252.373 36.5023 252.429C36.1692 252.351 35.8021 252.255 36.1466 252.789C36.5644 253.869 37.8349 254.23 37.9873 255.35C38.5802 255.828 39.478 254.511 40.1274 255.333C40.8558 255.575 41.5503 256.564 42.0359 255.456C42.5611 255.913 43.7299 255.423 42.8095 254.849C42.7643 253.696 43.3911 252.227 44.3171 251.85C43.967 250.54 45.1585 249.561 46.4007 250C47.2929 250.073 48.2014 250 48.862 249.449C49.5622 250.113 50.2065 248.723 51.0591 249.573C52.0636 249.798 53.097 249.55 53.9389 250.315C55.2715 251.091 53.9276 248.954 55.1134 248.723C56.1693 248.042 55.1422 246.675 55.7684 245.758C56.5306 244.74 56.3048 243.614 56.3161 242.462C56.7458 241.162 55.0066 240.83 54.4584 239.806C54.0574 238.54 52.6012 240.11 51.9462 238.911C51.6351 238.563 51.1896 238.045 51.0309 238.107C51.0704 237.775 51.1608 237.449 51.3979 237.139C51.844 236.397 51.7762 234.276 52.9112 235.631C54.1201 235.44 52.8948 233.184 54.2438 233.443C54.7294 232.368 54.9496 231.023 56.5419 231.198C56.5871 230.517 57.5809 230.258 57.739 229.808C57.7785 229.971 57.7729 230.056 57.7503 229.927C58.3946 230.697 59.5798 229.859 60.3985 230.033C61.4883 229.876 62.0981 228.829 63.2839 228.953C64.3562 228.233 63.7865 226.619 63.5092 225.578C63.5606 224.599 62.5216 224.081 62.4313 223.148Z\" fill=\"#BAC8FF\" stroke=\"white\" stroke-width=\"1.77165\"/>\r\n            <path d=\"M94.808 289.25C95.4687 289.318 96.135 289.363 96.7962 289.442C97.1406 289.622 97.4902 289.825 97.8352 289.993C97.9193 289.92 97.7674 289.813 97.751 289.734C97.5472 289.368 97.3157 289.02 97.135 288.643L96.8589 287.821C96.8865 287.349 96.9097 286.876 96.943 286.404C96.7341 285.796 96.3727 285.256 96.0508 284.705C96.249 284.356 96.4461 284.002 96.6381 283.653C96.3783 283.068 96.0621 282.499 95.7798 281.926C95.7567 281.481 95.808 281.014 95.8137 280.564C95.7911 280.255 95.6274 279.962 95.5539 279.658C95.5822 279.377 95.6951 279.096 95.7516 278.815C95.7804 278.561 95.9549 278.309 95.8871 278.044C95.9379 277.695 95.6274 277.887 95.4241 277.819C95.5652 277.803 95.7064 277.791 95.8476 277.813C95.7747 277.426 95.7008 277.043 95.6336 276.654C95.4297 276.362 95.1028 276.137 94.8594 275.867C95.0627 275.749 95.3061 275.682 95.4924 275.541C95.3512 275.203 95.0802 274.899 94.8933 274.568C94.7866 274.281 94.9837 273.926 95.0057 273.611C94.8368 273.173 94.5884 272.745 94.3846 272.312C94.3733 271.951 94.5093 271.569 94.5545 271.198C94.3337 270.99 94.0119 270.866 93.7583 270.686C93.38 270.585 93.4365 270.169 93.3292 269.871C93.3004 269.595 93.1993 269.37 92.9622 269.213C92.7194 268.711 92.262 269.156 91.8492 268.96C91.2117 269.347 90.6748 269.123 90.0429 269.173C89.371 268.155 89.4495 270.118 88.8289 269.629C88.4794 270.079 88.2027 270.53 87.5929 270.62C87.4856 271.857 86.5308 269.945 86.0683 270.872C85.8424 270.58 85.8757 270.445 85.5482 270.36C84.8712 270.208 84.1033 270.462 83.437 270.754C83.0976 270.316 82.9294 270.766 82.5957 270.997C82.2964 270.659 82.2625 271.025 82.0254 271.182C81.3077 270.935 81.8961 271.592 81.2744 271.733C81.0942 271.626 80.3252 271.075 80.7888 271.739C80.2749 271.666 80.0434 272.622 79.4342 272.285C79.3212 272.712 77.9548 273.629 78.0959 272.836C77.7848 272.582 77.7848 273.871 77.1134 273.511C76.2551 273.258 76.7577 274.113 76.232 274.298C75.8712 273.764 75.4697 274.692 74.9282 274.36C74.8435 274.422 74.4652 274.995 74.7752 274.894C75.1253 275.159 74.8141 275.535 74.961 275.76L74.9163 275.755C74.634 275.029 74.1987 275.394 74.1535 275.985C73.9615 276.097 73.9615 275.429 73.538 275.924C73.3065 275.322 72.6515 276.706 72.4313 275.828C71.9739 276.458 71.5335 275.512 71.0874 276.301C70.8666 275.755 70.4381 276.047 70.5962 276.481C70.2241 276.762 69.7266 276.227 69.761 276.976C69.5691 277.336 70.1281 277.318 69.5911 277.679C69.9982 277.673 69.7159 278.32 70.1845 277.966C69.9694 278.388 70.6137 278.365 69.8903 278.511C69.7102 278.832 69.3031 278.343 69.0264 278.815C69.1512 279.141 68.3946 279.136 68.3375 279.316C68.2359 279.62 68.1456 279.744 68.0496 279.968C67.5019 279.744 67.7102 280.892 66.9711 280.729C66.8017 281.471 66.0343 280.2 65.4804 280.531C64.5538 280.61 63.5713 280.183 62.6063 280.183C62.1771 279.958 61.5109 279.642 61.2342 279.879C61.1602 279.654 60.9067 279.485 60.5504 279.35C60.9518 278.872 60.285 278.99 60.0365 278.793C59.438 278.366 58.9016 278.029 58.4047 277.55C58.3025 276.993 57.7327 277.274 57.5295 277.224C56.9592 277.207 57.0947 276.931 57.1675 276.442C58.0941 275.89 56.744 275.654 56.3375 275.131C55.8067 274.501 55.1184 274.27 54.3273 274.36C53.4747 273.741 53.1692 274.94 52.4075 274.754L52.3911 274.771C51.7813 274.822 50.6463 274.867 50.482 275.694C49.9851 275.857 50.4029 276.301 50.2844 276.802C50.194 277.511 49.3922 276.814 49.2285 277.364C48.9851 277.663 49.0816 277.854 49.2962 278.006C49.0303 277.904 48.766 277.821 48.5226 277.696C48.0483 277.533 47.6022 277.269 47.1562 277.252C47.1392 277.236 47.1223 277.213 47.1053 277.201C47.0658 277.179 47.0094 277.156 46.9755 277.145C46.9529 277.145 46.9134 277.122 46.8964 277.122C46.8795 277.122 46.8513 277.122 46.84 277.122C46.8287 277.122 46.8004 277.117 46.7891 277.122C46.7779 277.122 46.7496 277.145 46.7383 277.145C46.727 277.151 46.6932 277.145 46.6819 277.145C46.6706 277.151 46.6423 277.167 46.631 277.173C46.4334 277.252 46.2358 277.415 46.0777 277.489C45.4283 277.246 45.0331 276.779 44.5249 276.364C44.2538 276.172 43.9489 275.925 43.6609 275.835C43.5593 275.812 43.4407 275.795 43.3447 275.812C43.2262 275.835 43.1132 275.913 43.0003 276.02C42.4131 276.335 41.7524 276.032 41.1595 276.257C40.9562 276.785 40.5779 277.303 40.2391 277.674C39.8834 277.483 39.7366 276.589 39.3187 276.364C39.2905 276.347 39.2397 276.313 39.2115 276.307C39.2058 276.307 39.1889 276.307 39.1832 276.307C39.1832 276.307 39.1663 276.307 39.1606 276.307C39.155 276.307 39.1381 276.307 39.1324 276.307C39.1211 276.307 39.0872 276.307 39.0816 276.307C39.0759 276.307 39.059 276.307 39.0534 276.307C39.0364 276.302 38.9969 276.285 38.9743 276.285C38.9574 276.279 38.9122 276.279 38.8953 276.285C38.867 276.285 38.8218 276.297 38.7936 276.307C38.7767 276.313 38.7484 276.33 38.7372 276.335C38.6525 276.375 38.5678 276.437 38.4774 276.493C38.4492 276.476 38.4153 276.47 38.3984 276.465C38.3927 276.465 38.3758 276.465 38.3701 276.465C38.3701 276.465 38.3475 276.465 38.3419 276.465C38.3419 276.465 38.3475 276.487 38.3419 276.493C38.3419 276.493 38.3419 276.515 38.3419 276.521C38.3419 276.515 38.3193 276.521 38.3193 276.521C38.3137 276.515 38.3193 276.493 38.3193 276.493C38.3137 276.493 38.2911 276.493 38.2911 276.493C38.2854 276.493 38.2685 276.493 38.2628 276.493H38.2408C38.2182 276.499 38.1674 276.51 38.1335 276.521C38.0884 276.527 38.0375 276.544 37.9754 276.544C37.9698 276.538 37.9528 276.527 37.9472 276.521C37.9472 276.515 37.9246 276.499 37.9246 276.493C37.9077 276.476 37.8851 276.454 37.8681 276.442C37.8681 276.437 37.8456 276.414 37.8456 276.414C37.8399 276.414 37.823 276.414 37.8173 276.414C37.8117 276.414 37.7947 276.414 37.7891 276.414C37.7891 276.414 37.7722 276.414 37.7665 276.414C37.7609 276.414 37.7439 276.414 37.7383 276.414C37.7326 276.414 37.7157 276.414 37.71 276.414C37.6197 276.43 37.5124 276.47 37.4221 276.493C37.4164 276.493 37.3995 276.493 37.3995 276.493C37.3938 276.493 37.3769 276.493 37.3712 276.493C37.3656 276.493 37.3487 276.493 37.343 276.493C37.3374 276.493 37.3204 276.493 37.3204 276.493C37.3148 276.493 37.2978 276.493 37.2922 276.493C37.2865 276.487 37.2696 276.47 37.264 276.465C37.2527 276.453 37.2244 276.43 37.2131 276.414C37.2075 276.408 37.1906 276.392 37.1849 276.386C37.1793 276.402 37.1397 276.402 37.1341 276.414C37.1341 276.414 37.1341 276.437 37.1341 276.442C37.1284 276.448 37.1115 276.459 37.1059 276.465C37.1059 276.47 37.0833 276.465 37.0833 276.465C37.0776 276.465 37.0833 276.493 37.0833 276.493C37.0776 276.493 37.055 276.493 37.055 276.493C37.055 276.493 37.0325 276.493 37.0268 276.493H37.0042C36.9873 276.487 36.9647 276.476 36.9478 276.465C36.9139 276.442 36.8574 276.403 36.8179 276.386C36.8009 276.38 36.7614 276.364 36.7388 276.364C36.7388 276.364 36.7162 276.364 36.7106 276.364C36.7106 276.357 36.688 276.364 36.688 276.364C36.6767 276.347 36.6711 276.319 36.6598 276.307C36.6598 276.307 36.6372 276.312 36.6315 276.307C36.6259 276.307 36.6146 276.284 36.609 276.284C36.6033 276.279 36.5864 276.284 36.5807 276.284C36.5807 276.284 36.5581 276.284 36.5525 276.284C36.5525 276.284 36.5299 276.279 36.5299 276.284C36.5186 276.284 36.5073 276.301 36.5017 276.307C36.4904 276.319 36.4622 276.346 36.4509 276.364C36.4452 276.364 36.4283 276.357 36.4226 276.364L36.4 276.386C36.3944 276.386 36.3718 276.386 36.3718 276.386C36.3662 276.386 36.3492 276.364 36.3436 276.364C36.3379 276.357 36.321 276.341 36.3153 276.335C36.3153 276.329 36.2928 276.312 36.2928 276.307C36.2194 276.391 36.1572 276.436 36.1064 276.464H36.0838C36.0782 276.47 36.0612 276.492 36.0556 276.492C36.05 276.492 36.033 276.492 36.0274 276.492H36.0048C35.9991 276.492 35.9822 276.47 35.9765 276.464C35.9765 276.464 35.954 276.464 35.9483 276.464C35.937 276.452 35.9088 276.407 35.8975 276.385C35.8862 276.369 35.8806 276.329 35.8693 276.306C35.7959 276.075 35.745 275.665 35.6321 275.468C35.6265 275.457 35.6152 275.429 35.6095 275.417C35.6039 275.412 35.5869 275.395 35.5813 275.389C35.5192 275.389 35.4627 275.401 35.4232 275.389C35.4175 275.389 35.4006 275.367 35.395 275.367C35.3837 275.355 35.3554 275.35 35.3441 275.339C35.3441 275.333 35.3441 275.316 35.3441 275.31C35.3441 275.31 35.3215 275.288 35.3159 275.288C35.3159 275.282 35.3215 275.265 35.3159 275.26C35.3159 275.254 35.3159 275.237 35.3159 275.231C35.3215 275.225 35.3159 275.209 35.3159 275.209C35.3215 275.197 35.3441 275.164 35.3441 275.152C35.3724 275.068 35.4288 274.961 35.4514 274.894C35.4514 274.888 35.4514 274.871 35.4514 274.865C35.4514 274.859 35.4514 274.843 35.4514 274.837V274.815C35.4458 274.809 35.4232 274.815 35.4232 274.815C35.4175 274.809 35.4062 274.786 35.395 274.786C35.3893 274.786 35.3554 274.786 35.3441 274.786C35.3328 274.786 35.3103 274.809 35.2933 274.815C35.2877 274.798 35.2707 274.775 35.2651 274.758C35.2481 274.707 35.2312 274.629 35.2143 274.578C35.2086 274.567 35.1917 274.533 35.186 274.522C35.1804 274.516 35.1691 274.482 35.1578 274.471C35.1578 274.465 35.1409 274.449 35.1352 274.443C35.1296 274.443 35.1126 274.449 35.107 274.443C35.1013 274.443 35.09 274.42 35.0787 274.42H35.0562C35.0505 274.42 35.0336 274.42 35.0279 274.42H35.0053C34.9884 274.42 34.9658 274.443 34.9489 274.443C34.9432 274.449 34.9263 274.443 34.9263 274.443C34.915 274.449 34.8811 274.465 34.8698 274.471C34.8585 274.477 34.8303 274.494 34.819 274.499C34.7851 274.443 34.7569 274.381 34.7117 274.342C34.5367 274.185 34.2543 274.134 33.9212 274.105C33.9156 274.112 33.8817 274.128 33.8704 274.134C33.8591 274.134 33.8309 274.156 33.8196 274.156C33.8083 274.162 33.78 274.156 33.7687 274.156C33.7518 274.162 33.7236 274.185 33.7123 274.185C33.701 274.185 33.6728 274.185 33.6615 274.185C33.4243 274.185 33.1533 274.06 32.8992 274.055C32.8822 274.055 32.8596 274.05 32.8427 274.055C32.8258 274.055 32.7862 274.05 32.7637 274.055C32.6394 274.73 32.4079 275.383 32.2159 276.047C32.0691 276.739 31.6343 277.335 31.3181 277.96C30.9568 278.578 30.6462 279.219 30.3977 279.9C30.0759 280.255 29.6976 280.581 29.3475 280.919C29.3362 281.172 29.4548 281.453 29.4774 281.706C29.6355 282.353 29.6411 283.033 29.9234 283.647C29.9291 283.653 29.946 283.669 29.9517 283.675C29.9517 283.675 29.9517 283.692 29.9517 283.697C29.9517 283.703 29.9743 283.72 29.9799 283.726C29.9799 283.732 29.9743 283.748 29.9799 283.748C29.9799 283.754 29.9743 283.771 29.9799 283.777C29.9799 283.782 30.0025 283.799 30.0025 283.805C30.0025 283.81 30.0025 283.827 30.0025 283.827C30.0025 283.833 30.0025 283.85 30.0025 283.855C30.0081 284.075 29.8613 284.317 29.8218 284.536C29.6298 285.268 29.291 285.948 28.9805 286.634C28.8675 286.999 28.6078 287.236 28.348 287.501C28.3311 287.523 28.3085 287.557 28.2916 287.579L28.269 287.602C28.2577 287.614 28.2464 287.624 28.2408 287.63C28.2238 287.647 28.1843 287.669 28.1617 287.681C27.9697 287.793 27.693 287.821 27.4785 287.895C27.4728 287.895 27.4559 287.889 27.4502 287.895H27.4277C27.422 287.895 27.3994 287.889 27.3994 287.895V287.917C27.3994 287.923 27.3712 287.917 27.3712 287.917C27.3712 287.923 27.3712 287.94 27.3712 287.946C27.3712 287.951 27.3712 287.968 27.3712 287.974C27.3712 287.974 27.3712 287.991 27.3712 287.996C27.3712 288.002 27.3712 288.019 27.3712 288.024C27.3881 288.092 27.4446 288.182 27.4502 288.233C27.5236 288.733 27.8342 289.133 28.0544 289.572C27.8568 289.943 27.6479 290.297 27.4502 290.669C27.038 291.428 26.7444 292.261 26.2927 293.003C26.2362 293.104 26.1741 293.217 26.112 293.318C26.0894 293.346 26.0555 293.397 26.033 293.425C26.0273 293.431 26.0104 293.441 26.0047 293.447C25.9934 293.459 25.9652 293.492 25.9539 293.504C25.9257 293.521 25.9031 293.543 25.8749 293.555C25.7168 293.678 25.5191 293.791 25.3723 293.92C25.3271 294.348 25.2876 294.775 25.2424 295.208C24.9771 295.495 24.6778 295.777 24.4237 296.069C24.3842 296.412 24.4124 296.756 24.243 297.065C24.1244 297.38 24.0058 297.695 23.8986 298.01C23.8986 298.016 23.8986 298.033 23.8986 298.038C23.9042 298.044 23.9211 298.061 23.9268 298.061C23.9268 298.061 23.9494 298.061 23.955 298.061H23.9776C23.9833 298.061 24.0002 298.067 24.0058 298.061C24.0341 298.055 24.0792 298.022 24.1131 298.01C24.1244 298.004 24.1527 298.016 24.1639 298.01C24.1639 298.01 24.1865 297.982 24.1922 297.982H24.2148C24.4689 297.92 24.723 297.864 24.9771 297.802C25.2707 298.145 25.5586 298.505 25.8466 298.848C25.8692 299.152 25.8466 299.445 25.8974 299.743C26.1798 299.658 26.4677 299.54 26.7388 299.428C26.9025 299.017 27.0324 298.6 27.1905 298.196C27.439 298.128 27.71 298.083 27.9528 298.01C28.0996 297.65 28.2295 297.296 28.3706 296.936C28.8506 296.84 29.3362 296.874 29.8218 296.885C29.9799 296.637 30.138 296.373 30.2905 296.125C30.8325 295.996 31.3633 295.827 31.9223 295.81C32.5321 295.737 33.1363 295.709 33.7405 295.624C33.7405 295.624 33.7631 295.602 33.7687 295.596C33.7687 295.596 33.7857 295.602 33.7913 295.596C33.8591 295.579 33.9607 295.562 34.0285 295.545C34.0454 295.54 34.068 295.529 34.0793 295.517C34.085 295.517 34.1075 295.523 34.1075 295.517V295.495C34.1075 295.495 34.1358 295.489 34.1358 295.495C34.452 295.394 34.7964 295.349 35.107 295.23C35.4514 295.01 35.7846 294.741 36.1347 294.55C36.7388 294.527 37.3487 294.533 37.9472 294.6C38.3199 294.702 38.6812 294.837 39.0539 294.915L39.0822 294.893C39.0822 294.887 39.0822 294.87 39.0822 294.865C39.0822 294.859 39.0822 294.842 39.0822 294.837V294.814C39.0822 294.808 39.0822 294.792 39.0822 294.786C39.0709 294.702 39.037 294.606 39.0257 294.521V294.499C38.9636 294.167 38.8789 293.83 38.8168 293.503C39.0822 293.283 39.3475 293.024 39.6863 292.923C40.1042 292.749 40.4994 292.524 40.9229 292.373C40.9399 292.378 40.9625 292.395 40.9738 292.401C40.9794 292.401 40.9963 292.401 41.002 292.401C41.002 292.401 41.0246 292.401 41.0302 292.401L41.0528 292.373C41.0585 292.373 41.081 292.35 41.081 292.35C41.081 292.366 41.081 292.384 41.081 292.401C41.3747 292.417 41.6796 292.412 41.9732 292.429C42.4701 292.553 42.9388 292.783 43.4244 292.952C43.5768 292.856 43.718 292.738 43.8704 292.637C44.1641 292.603 44.4859 292.704 44.7908 292.716C44.7965 292.716 44.8078 292.716 44.8191 292.716C44.9207 292.722 45.0562 292.733 45.1579 292.744C45.1974 292.744 45.2538 292.75 45.2877 292.744C45.2934 292.738 45.3103 292.716 45.316 292.716C45.316 292.716 45.3329 292.716 45.3385 292.716L45.3103 292.755C45.4966 293.008 45.683 293.267 45.8693 293.515C46.3719 293.627 46.8857 293.717 47.3826 293.847C48.1731 294.15 48.9642 294.466 49.7485 294.764C50.3132 294.646 50.8897 294.55 51.4487 294.421C51.8778 294.213 52.307 294.005 52.7412 293.796C52.7299 293.751 52.7299 293.701 52.7299 293.65C52.8259 293.819 52.9727 293.915 53.2833 293.903C53.6672 293.926 53.9891 294.095 54.2652 294.348C54.3781 294.404 54.4577 294.398 54.5136 294.353C54.4905 294.393 54.4628 294.432 54.434 294.471C54.8694 294.792 55.3098 295.113 55.744 295.439C56.0427 295.417 56.3482 295.372 56.6475 295.338C57.2178 295.107 57.7768 294.848 58.3414 294.607C58.7649 294.612 59.1941 294.674 59.6238 294.702C60.2167 294.601 60.8101 294.483 61.4019 294.376C62.1365 294.691 62.8587 295.028 63.6153 295.293C63.7452 295.31 63.9999 295.54 63.9823 295.305V295.293C64.062 295.484 64.2302 295.591 64.5583 295.647C65.1518 295.839 65.7108 296.098 66.1958 296.491C67.4098 297.296 68.5561 298.196 69.7537 299.023C70.713 299.665 71.673 300.305 72.6385 300.941C73.542 301.183 74.4511 301.431 75.3551 301.672C75.6255 301.504 75.8966 301.335 76.1625 301.167C76.5465 300.93 76.9248 300.694 77.3082 300.452C77.3878 300.373 77.5516 300.356 77.5968 300.243C77.4838 300.052 77.3144 299.895 77.1851 299.72C77.5008 299.186 77.817 298.646 78.1338 298.111C78.5793 298.297 79.0259 298.477 79.4714 298.668C79.8949 298.37 80.3128 298.033 80.7362 297.718C81.3178 297.29 81.8712 296.807 82.5042 296.446C82.577 296.373 82.7922 296.334 82.7865 296.232L82.7978 296.267C83.7182 295.732 84.5878 295.135 85.4235 294.483C86.0271 294.022 86.6651 293.583 87.2524 293.111C87.3998 292.751 87.4613 292.306 87.664 292.002C88.3478 291.766 89.031 291.524 89.7199 291.287L89.7256 291.242V291.282C90.6685 290.826 91.6172 290.365 92.5607 289.903L92.6285 289.6C92.6228 289.701 92.5997 289.802 92.5607 289.903C93.1479 289.735 93.7346 289.566 94.3168 289.392C94.4235 289.318 94.9266 289.318 94.7228 289.183C94.6104 289.133 94.5308 289.071 94.4749 288.998C94.5765 289.087 94.7064 289.161 94.808 289.25Z\" fill=\"#BAC8FF\"/>\r\n            <path d=\"M92.5607 289.903C91.6172 290.365 90.6685 290.826 89.7256 291.282V291.242L89.7199 291.287C89.031 291.524 88.3478 291.766 87.664 292.002C87.4613 292.306 87.3998 292.751 87.2524 293.111C86.6651 293.583 86.0271 294.022 85.4235 294.483C84.5878 295.135 83.7182 295.732 82.7978 296.267L82.7865 296.232C82.7922 296.334 82.577 296.373 82.5042 296.446C81.8712 296.807 81.3178 297.29 80.7362 297.718C80.3128 298.033 79.8949 298.37 79.4714 298.668C79.0259 298.477 78.5793 298.297 78.1338 298.111C77.817 298.646 77.5008 299.186 77.1851 299.72C77.3144 299.895 77.4838 300.052 77.5968 300.243C77.5516 300.356 77.3878 300.373 77.3082 300.452C76.9248 300.694 76.5465 300.93 76.1625 301.167C75.8966 301.335 75.6256 301.504 75.3551 301.672C74.4511 301.431 73.542 301.183 72.6385 300.941C71.673 300.305 70.713 299.665 69.7537 299.023C68.5561 298.196 67.4098 297.296 66.1958 296.491C65.7108 296.098 65.1518 295.839 64.5583 295.647C64.2302 295.591 64.062 295.484 63.9823 295.293V295.305C63.9999 295.54 63.7452 295.31 63.6153 295.293C62.8587 295.028 62.1365 294.691 61.4019 294.376C60.8101 294.483 60.2167 294.601 59.6238 294.702C59.1941 294.674 58.7649 294.612 58.3414 294.607C57.7768 294.848 57.2178 295.107 56.6475 295.338C56.3482 295.372 56.0427 295.417 55.744 295.439C55.3098 295.113 54.8694 294.792 54.434 294.471C54.4628 294.432 54.4905 294.393 54.5136 294.353C54.4577 294.398 54.3781 294.404 54.2652 294.348C53.9891 294.095 53.6672 293.926 53.2833 293.903C52.9727 293.915 52.8259 293.819 52.7299 293.65C52.7299 293.701 52.7299 293.751 52.7412 293.796C52.307 294.005 51.8778 294.213 51.4487 294.421C50.8897 294.55 50.3132 294.646 49.7485 294.764C48.9642 294.466 48.1731 294.15 47.3826 293.847C46.8857 293.717 46.3719 293.627 45.8693 293.515C45.683 293.267 45.4966 293.008 45.3103 292.755L45.3385 292.716C45.3329 292.716 45.316 292.716 45.316 292.716C45.3103 292.716 45.2934 292.738 45.2877 292.744C45.2538 292.75 45.1974 292.744 45.1579 292.744C45.0562 292.733 44.9207 292.722 44.8191 292.716C44.8078 292.716 44.7965 292.716 44.7908 292.716C44.4859 292.704 44.1641 292.603 43.8704 292.637C43.718 292.738 43.5768 292.856 43.4244 292.952C42.9388 292.783 42.4701 292.553 41.9732 292.429C41.6796 292.412 41.3747 292.417 41.081 292.401C41.081 292.384 41.081 292.366 41.081 292.35C41.081 292.35 41.0585 292.373 41.0528 292.373L41.0302 292.401C41.0246 292.401 41.002 292.401 41.002 292.401C40.9963 292.401 40.9794 292.401 40.9738 292.401C40.9625 292.395 40.9399 292.378 40.9229 292.373C40.4994 292.524 40.1042 292.749 39.6863 292.923C39.3475 293.024 39.0822 293.283 38.8168 293.503C38.8789 293.83 38.9636 294.167 39.0257 294.499V294.521C39.037 294.606 39.0709 294.702 39.0822 294.786C39.0822 294.792 39.0822 294.808 39.0822 294.814V294.837C39.0822 294.842 39.0822 294.859 39.0822 294.865C39.0822 294.87 39.0822 294.887 39.0822 294.893L39.0539 294.915C38.6812 294.837 38.3199 294.702 37.9472 294.6C37.3487 294.533 36.7388 294.527 36.1347 294.55C35.7846 294.741 35.4514 295.01 35.107 295.23C34.7964 295.349 34.452 295.394 34.1358 295.495C34.1358 295.489 34.1075 295.495 34.1075 295.495V295.517C34.1075 295.523 34.085 295.517 34.0793 295.517C34.068 295.529 34.0454 295.54 34.0285 295.545C33.9607 295.562 33.8591 295.579 33.7913 295.596C33.7857 295.602 33.7687 295.596 33.7687 295.596C33.7631 295.602 33.7405 295.624 33.7405 295.624C33.1363 295.709 32.5321 295.737 31.9223 295.81C31.3633 295.827 30.8325 295.996 30.2905 296.125C30.138 296.373 29.9799 296.637 29.8218 296.885C29.3362 296.874 28.8506 296.84 28.3706 296.936C28.2295 297.296 28.0996 297.65 27.9528 298.01C27.71 298.083 27.439 298.128 27.1905 298.196C27.0324 298.6 26.9025 299.017 26.7388 299.428C26.4677 299.54 26.1798 299.658 25.8974 299.743C25.8466 299.445 25.8692 299.152 25.8466 298.848C25.5586 298.505 25.2707 298.145 24.9771 297.802C24.723 297.864 24.4689 297.92 24.2148 297.982H24.1922C24.1865 297.982 24.1639 298.01 24.1639 298.01C24.1527 298.016 24.1244 298.004 24.1131 298.01C24.0792 298.022 24.0341 298.055 24.0058 298.061C24.0002 298.067 23.9833 298.061 23.9776 298.061H23.955C23.9494 298.061 23.9268 298.061 23.9268 298.061C23.9211 298.061 23.9042 298.044 23.8986 298.038C23.8986 298.033 23.8986 298.016 23.8986 298.01C24.0058 297.695 24.1244 297.38 24.243 297.065C24.4124 296.756 24.3842 296.412 24.4237 296.069C24.6778 295.777 24.9771 295.495 25.2424 295.208C25.2876 294.775 25.3271 294.348 25.3723 293.92C25.5191 293.791 25.7168 293.678 25.8749 293.555C25.9031 293.543 25.9257 293.521 25.9539 293.504C25.9652 293.492 25.9934 293.459 26.0047 293.447C26.0104 293.441 26.0273 293.431 26.033 293.425C26.0555 293.397 26.0894 293.346 26.112 293.318C26.1741 293.217 26.2362 293.104 26.2927 293.003C26.7444 292.261 27.038 291.428 27.4502 290.669C27.6479 290.297 27.8568 289.943 28.0544 289.572C27.8342 289.133 27.5237 288.733 27.4502 288.233C27.4446 288.182 27.3881 288.092 27.3712 288.024C27.3712 288.019 27.3712 288.002 27.3712 287.996C27.3712 287.991 27.3712 287.974 27.3712 287.974C27.3712 287.968 27.3712 287.951 27.3712 287.946C27.3712 287.94 27.3712 287.923 27.3712 287.917C27.3712 287.917 27.3994 287.923 27.3994 287.917V287.895C27.3994 287.889 27.422 287.895 27.4277 287.895H27.4502C27.4559 287.889 27.4728 287.895 27.4785 287.895C27.693 287.821 27.9697 287.793 28.1617 287.681C28.1843 287.669 28.2238 287.647 28.2408 287.63C28.2464 287.624 28.2577 287.614 28.269 287.602L28.2916 287.579C28.3085 287.557 28.3311 287.523 28.348 287.501C28.6078 287.236 28.8675 286.999 28.9805 286.634C29.291 285.948 29.6298 285.268 29.8218 284.536C29.8613 284.317 30.0081 284.075 30.0025 283.855C30.0025 283.85 30.0025 283.833 30.0025 283.827C30.0025 283.827 30.0025 283.81 30.0025 283.805C30.0025 283.799 29.9799 283.782 29.9799 283.777C29.9743 283.771 29.9799 283.754 29.9799 283.748C29.9743 283.748 29.9799 283.732 29.9799 283.726C29.9743 283.72 29.9517 283.703 29.9517 283.697C29.9517 283.692 29.9517 283.675 29.9517 283.675C29.946 283.669 29.9291 283.653 29.9234 283.647C29.6411 283.033 29.6355 282.353 29.4774 281.706C29.4548 281.453 29.3362 281.172 29.3475 280.919C29.6976 280.581 30.0759 280.255 30.3977 279.9C30.6462 279.219 30.9568 278.578 31.3181 277.96C31.6343 277.335 32.0691 276.739 32.2159 276.047C32.4079 275.383 32.6394 274.73 32.7637 274.055C32.7862 274.05 32.8258 274.055 32.8427 274.055C32.8596 274.05 32.8822 274.055 32.8992 274.055C33.1533 274.06 33.4243 274.185 33.6615 274.185C33.6728 274.185 33.701 274.185 33.7123 274.185C33.7236 274.185 33.7518 274.162 33.7687 274.156C33.78 274.156 33.8083 274.162 33.8196 274.156C33.8309 274.156 33.8591 274.134 33.8704 274.134C33.8817 274.128 33.9156 274.112 33.9212 274.105C34.2543 274.134 34.5367 274.185 34.7117 274.342C34.7569 274.381 34.7851 274.443 34.819 274.499C34.8303 274.494 34.8585 274.477 34.8698 274.471C34.8811 274.465 34.915 274.449 34.9263 274.443C34.9263 274.443 34.9432 274.449 34.9489 274.443C34.9658 274.443 34.9884 274.42 35.0053 274.42H35.0279C35.0336 274.42 35.0505 274.42 35.0562 274.42H35.0787C35.09 274.42 35.1013 274.443 35.107 274.443C35.1126 274.449 35.1296 274.443 35.1352 274.443C35.1409 274.449 35.1578 274.465 35.1578 274.471C35.1691 274.482 35.1804 274.516 35.186 274.522C35.1917 274.533 35.2086 274.567 35.2143 274.578C35.2312 274.629 35.2481 274.707 35.2651 274.758C35.2707 274.775 35.2877 274.798 35.2933 274.815C35.3103 274.809 35.3328 274.786 35.3441 274.786C35.3554 274.786 35.3893 274.786 35.395 274.786C35.4062 274.786 35.4175 274.809 35.4232 274.815C35.4232 274.815 35.4458 274.809 35.4514 274.815V274.837C35.4514 274.843 35.4514 274.859 35.4514 274.865C35.4514 274.871 35.4514 274.888 35.4514 274.894C35.4288 274.961 35.3724 275.068 35.3441 275.152C35.3441 275.164 35.3215 275.197 35.3159 275.209C35.3159 275.209 35.3215 275.225 35.3159 275.231C35.3159 275.237 35.3159 275.254 35.3159 275.26C35.3215 275.265 35.3159 275.282 35.3159 275.288C35.3215 275.288 35.3441 275.31 35.3441 275.31C35.3441 275.316 35.3441 275.333 35.3441 275.339C35.3554 275.35 35.3837 275.355 35.395 275.367C35.4006 275.367 35.4175 275.389 35.4232 275.389C35.4627 275.401 35.5192 275.389 35.5813 275.389C35.5869 275.395 35.6039 275.412 35.6095 275.417C35.6152 275.429 35.6265 275.457 35.6321 275.468C35.745 275.665 35.7959 276.075 35.8693 276.306C35.8806 276.329 35.8862 276.369 35.8975 276.385C35.9088 276.407 35.937 276.452 35.9483 276.464C35.954 276.464 35.9765 276.464 35.9765 276.464C35.9822 276.47 35.9991 276.492 36.0048 276.492H36.0274C36.033 276.492 36.05 276.492 36.0556 276.492C36.0612 276.492 36.0782 276.47 36.0838 276.464H36.1064C36.1572 276.436 36.2194 276.391 36.2928 276.307C36.2928 276.312 36.3153 276.329 36.3153 276.335C36.321 276.341 36.3379 276.357 36.3436 276.364C36.3492 276.364 36.3662 276.386 36.3718 276.386C36.3718 276.386 36.3944 276.386 36.4 276.386L36.4226 276.364C36.4283 276.357 36.4452 276.364 36.4509 276.364C36.4622 276.346 36.4904 276.319 36.5017 276.307C36.5073 276.301 36.5186 276.284 36.5299 276.284C36.5299 276.279 36.5525 276.284 36.5525 276.284C36.5581 276.284 36.5807 276.284 36.5807 276.284C36.5864 276.284 36.6033 276.279 36.609 276.284C36.6146 276.284 36.6259 276.307 36.6315 276.307C36.6372 276.312 36.6598 276.307 36.6598 276.307C36.6711 276.319 36.6767 276.347 36.688 276.364C36.688 276.364 36.7106 276.357 36.7106 276.364C36.7162 276.364 36.7388 276.364 36.7388 276.364C36.7614 276.364 36.8009 276.38 36.8179 276.386C36.8574 276.403 36.9139 276.442 36.9478 276.465C36.9647 276.476 36.9873 276.487 37.0042 276.493H37.0268C37.0325 276.493 37.055 276.493 37.055 276.493C37.055 276.493 37.0776 276.493 37.0833 276.493C37.0833 276.493 37.0776 276.465 37.0833 276.465C37.0833 276.465 37.1059 276.47 37.1059 276.465C37.1115 276.459 37.1284 276.448 37.1341 276.442C37.1341 276.437 37.1341 276.414 37.1341 276.414C37.1397 276.402 37.1793 276.402 37.1849 276.386C37.1906 276.392 37.2075 276.408 37.2131 276.414C37.2244 276.43 37.2527 276.453 37.264 276.465C37.2696 276.47 37.2865 276.487 37.2922 276.493C37.2978 276.493 37.3148 276.493 37.3204 276.493C37.3204 276.493 37.3374 276.493 37.343 276.493C37.3487 276.493 37.3656 276.493 37.3712 276.493C37.3769 276.493 37.3938 276.493 37.3995 276.493C37.3995 276.493 37.4164 276.493 37.4221 276.493C37.5124 276.47 37.6197 276.43 37.71 276.414C37.7157 276.414 37.7326 276.414 37.7383 276.414C37.7439 276.414 37.7609 276.414 37.7665 276.414C37.7722 276.414 37.7891 276.414 37.7891 276.414C37.7947 276.414 37.8117 276.414 37.8173 276.414C37.823 276.414 37.8399 276.414 37.8456 276.414C37.8456 276.414 37.8681 276.437 37.8681 276.442C37.8851 276.454 37.9077 276.476 37.9246 276.493C37.9246 276.499 37.9472 276.515 37.9472 276.521C37.9528 276.527 37.9698 276.538 37.9754 276.544C38.0375 276.544 38.0884 276.527 38.1335 276.521C38.1674 276.51 38.2182 276.499 38.2408 276.493H38.2628C38.2685 276.493 38.2854 276.493 38.2911 276.493C38.2911 276.493 38.3137 276.493 38.3193 276.493C38.3193 276.493 38.3137 276.515 38.3193 276.521C38.3193 276.521 38.3419 276.515 38.3419 276.521C38.3419 276.515 38.3419 276.493 38.3419 276.493C38.3475 276.487 38.3419 276.465 38.3419 276.465C38.3475 276.465 38.3701 276.465 38.3701 276.465C38.3758 276.465 38.3927 276.465 38.3984 276.465C38.4153 276.47 38.4492 276.476 38.4774 276.493C38.5678 276.437 38.6525 276.375 38.7372 276.335C38.7484 276.33 38.7767 276.313 38.7936 276.307C38.8218 276.297 38.867 276.285 38.8953 276.285C38.9122 276.279 38.9574 276.279 38.9743 276.285C38.9969 276.285 39.0364 276.302 39.0534 276.307C39.059 276.307 39.0759 276.307 39.0816 276.307C39.0872 276.307 39.1211 276.307 39.1324 276.307C39.1381 276.307 39.155 276.307 39.1606 276.307C39.1663 276.307 39.1832 276.307 39.1832 276.307C39.1889 276.307 39.2058 276.307 39.2115 276.307C39.2397 276.313 39.2905 276.347 39.3187 276.364C39.7366 276.589 39.8834 277.483 40.2391 277.674C40.5779 277.303 40.9562 276.785 41.1595 276.257C41.7524 276.032 42.4131 276.335 43.0003 276.02C43.1132 275.913 43.2262 275.835 43.3447 275.812C43.4407 275.795 43.5593 275.812 43.6609 275.835C43.9489 275.925 44.2538 276.172 44.5249 276.364C45.0331 276.779 45.4283 277.246 46.0777 277.489C46.2358 277.415 46.4334 277.252 46.631 277.173C46.6423 277.167 46.6706 277.151 46.6819 277.145C46.6932 277.145 46.727 277.151 46.7383 277.145C46.7496 277.145 46.7779 277.122 46.7891 277.122C46.8004 277.117 46.8287 277.122 46.84 277.122C46.8513 277.122 46.8795 277.122 46.8964 277.122C46.9134 277.122 46.9529 277.145 46.9755 277.145C47.0094 277.156 47.0658 277.179 47.1053 277.201C47.1223 277.213 47.1392 277.236 47.1562 277.252C47.6022 277.269 48.0483 277.533 48.5226 277.696C48.766 277.821 49.0303 277.904 49.2962 278.006C49.0816 277.854 48.9851 277.663 49.2285 277.364C49.3922 276.814 50.194 277.511 50.2844 276.802C50.4029 276.301 49.9851 275.857 50.482 275.694C50.6463 274.867 51.7813 274.822 52.3911 274.771L52.4075 274.754C53.1692 274.94 53.4747 273.741 54.3273 274.36C55.1184 274.27 55.8067 274.501 56.3375 275.131C56.744 275.654 58.0941 275.89 57.1675 276.442C57.0947 276.931 56.9592 277.207 57.5295 277.224C57.7327 277.274 58.3025 276.993 58.4047 277.55C58.9016 278.029 59.438 278.366 60.0365 278.793C60.285 278.99 60.9518 278.872 60.5504 279.35C60.9067 279.485 61.1602 279.654 61.2342 279.879C61.5109 279.642 62.1771 279.958 62.6063 280.183C63.5713 280.183 64.5538 280.61 65.4804 280.531C66.0343 280.2 66.8017 281.471 66.9711 280.729C67.7102 280.892 67.5018 279.744 68.0496 279.968C68.1456 279.744 68.2359 279.62 68.3375 279.316C68.3946 279.136 69.1512 279.141 69.0264 278.815C69.3031 278.343 69.7102 278.832 69.8903 278.511C70.6137 278.365 69.9694 278.388 70.1845 277.966C69.7159 278.32 69.9982 277.673 69.5911 277.679C70.1281 277.318 69.5691 277.336 69.761 276.976C69.7266 276.227 70.2241 276.762 70.5962 276.481C70.4381 276.047 70.8666 275.755 71.0874 276.301C71.5335 275.512 71.9739 276.458 72.4313 275.828C72.6515 276.706 73.3065 275.322 73.538 275.924C73.9615 275.429 73.9615 276.097 74.1535 275.985C74.1987 275.394 74.634 275.029 74.9163 275.755L74.961 275.76C74.8141 275.535 75.1253 275.159 74.7752 274.894C74.4652 274.995 74.8435 274.422 74.9282 274.36C75.4697 274.692 75.8712 273.764 76.232 274.298C76.7577 274.113 76.2551 273.258 77.1134 273.511C77.7848 273.871 77.7848 272.582 78.0959 272.836C77.9548 273.629 79.3212 272.712 79.4342 272.285C80.0434 272.622 80.2749 271.666 80.7888 271.739C80.3252 271.075 81.0942 271.626 81.2744 271.733C81.8961 271.592 81.3077 270.935 82.0254 271.182C82.2625 271.025 82.2964 270.659 82.5957 270.997C82.9294 270.766 83.0976 270.316 83.437 270.754C84.1033 270.462 84.8712 270.208 85.5482 270.36C85.8757 270.445 85.8424 270.58 86.0683 270.872C86.5307 269.945 87.4856 271.857 87.5929 270.62C88.2027 270.53 88.4794 270.079 88.8289 269.629C89.4495 270.118 89.371 268.155 90.0429 269.173C90.6748 269.123 91.2117 269.347 91.8492 268.96C92.262 269.156 92.7194 268.711 92.9622 269.213C93.1993 269.37 93.3004 269.595 93.3292 269.871C93.4365 270.169 93.38 270.585 93.7583 270.686C94.0119 270.866 94.3337 270.99 94.5545 271.198C94.5093 271.569 94.3733 271.951 94.3845 272.312C94.5884 272.745 94.8368 273.173 95.0057 273.611C94.9836 273.926 94.7866 274.281 94.8933 274.568C95.0802 274.899 95.3512 275.203 95.4924 275.541C95.3061 275.682 95.0627 275.749 94.8594 275.867C95.1028 276.137 95.4297 276.362 95.6336 276.654C95.7008 277.043 95.7747 277.426 95.8476 277.813C95.7064 277.791 95.5652 277.803 95.4241 277.819C95.6274 277.887 95.9379 277.695 95.8871 278.044C95.9549 278.309 95.7804 278.561 95.7516 278.815C95.6951 279.096 95.5822 279.377 95.554 279.658C95.6274 279.962 95.7911 280.255 95.8137 280.564C95.808 281.014 95.7567 281.481 95.7798 281.926C96.0621 282.499 96.3783 283.068 96.6381 283.653C96.4461 284.002 96.249 284.356 96.0508 284.705C96.3727 285.256 96.7341 285.796 96.943 286.404C96.9097 286.876 96.8865 287.349 96.8589 287.821L97.135 288.643C97.3157 289.02 97.5472 289.368 97.751 289.734C97.7674 289.813 97.9193 289.92 97.8352 289.993C97.4902 289.825 97.1406 289.622 96.7962 289.442C96.135 289.363 95.4687 289.318 94.808 289.25C94.7064 289.161 94.5765 289.087 94.4749 288.998C94.5308 289.071 94.6104 289.133 94.7228 289.183C94.9266 289.318 94.4235 289.318 94.3168 289.392C93.7346 289.566 93.148 289.735 92.5607 289.903ZM92.5607 289.903L92.6285 289.6C92.6228 289.701 92.5997 289.802 92.5607 289.903Z\" stroke=\"white\" stroke-width=\"1.77165\"/>\r\n            <path d=\"M59.1642 142.045C59.1642 142.135 59.1467 142.152 59.1467 142.18C59.0851 142.225 59.0851 142.225 59.0563 142.225C59.0563 142.259 59.0343 142.315 59.0117 142.349C59.1077 142.445 59.1015 142.653 59.1015 142.771C58.9891 142.861 58.9891 142.861 58.8423 142.951C58.8423 143.114 58.8135 143.148 58.949 143.272C59.2031 143.272 59.1749 143.013 59.4521 143.289C59.4521 143.587 59.1918 143.778 59.1918 144.076C59.0738 144.194 59.1642 144.56 59.1015 144.689C59.119 144.712 59.1467 144.813 59.1467 144.847C59.3499 145.196 59.5538 145.443 59.2263 145.775C59.2263 146.101 59.2206 146.355 59.0286 146.619L59.0563 146.653C59.1467 146.653 59.3053 146.658 59.3449 146.698C59.678 146.698 59.6153 146.9 59.7401 147.108C60.0168 147.108 60.4346 147.305 60.6605 147.12C60.6774 147.131 60.6944 147.142 60.7175 147.153C60.7175 147.294 60.6944 147.272 60.8073 147.378C60.8807 147.378 60.8977 147.367 61.0055 147.367C61.141 147.44 61.141 147.44 61.1743 147.44C61.3432 147.542 61.5747 147.581 61.7215 147.727C61.7215 148.003 62.2014 147.71 62.2698 147.772C62.7379 147.772 62.9073 148.115 63.1952 148.476C63.2636 148.481 63.3364 148.481 63.4104 148.487C63.5736 148.656 63.9011 148.352 64.0936 148.352C64.2348 148.437 64.3641 148.476 64.4889 148.352C64.5453 148.352 64.7655 148.397 64.8107 148.442C64.8949 148.352 65.3635 148.347 65.4318 148.409C65.477 148.369 65.8384 148.397 65.9169 148.397C66.0298 148.313 66.5437 147.863 66.7582 148.077C66.9282 148.077 67.0349 148.15 67.1817 148.015C67.1817 147.936 67.1202 147.84 67.075 147.778C67.001 147.773 66.8599 147.773 66.787 147.773C66.787 147.587 67.0123 147.396 67.0123 147.182C66.8141 146.985 66.6058 146.783 66.6058 146.485C66.3906 146.181 66.1986 146.051 66.4194 145.759C66.4194 145.292 66.577 145.168 66.9609 144.926C66.9784 144.437 66.7582 143.964 66.7582 143.486C66.9163 143.323 67.1083 143.171 67.1083 142.924C67.1309 142.895 67.1817 142.592 67.1817 142.53C67.5437 142.052 67.0462 141.894 67.0462 141.438C67.0242 141.438 67.001 141.438 66.9846 141.438C66.9728 141.433 66.9615 141.421 66.9502 141.421C67.0914 141.36 67.2325 141.281 67.368 141.185C67.7351 141.033 67.8367 140.639 68.2997 140.78C68.2653 140.831 68.1868 140.853 68.0055 140.831C68.3449 141.253 68.9146 140.741 69.3274 141.061C69.4799 141.838 70.5352 141.607 70.7724 141.084C71.3658 140.504 71.608 141.888 71.5521 142.333C71.6312 143.047 71.6193 143.846 71.699 144.566C71.315 144.915 71.5126 145.838 72.2749 145.776C72.8283 146.147 72.8904 145.5 73.3765 145.472C73.7261 145.641 73.8 145.95 74.2744 145.928C73.8785 146.186 74.4545 146.091 74.551 146.383C74.5567 146.659 74.5335 146.856 74.9909 146.788C75.2958 147.103 75.9903 147.025 75.8887 147.61C76.5601 147.525 76.4421 148.189 76.4251 148.617C76.8368 148.757 76.6453 149.112 76.9728 149.213C76.9056 149.584 77.481 149.725 77.5601 150.153C77.9271 149.663 77.8368 150.49 77.7583 150.777C77.9898 150.766 78.0406 151.064 78.1586 151.103L78.1247 151.143C77.5663 151.283 77.38 152.223 77.3568 152.617C77.8543 152.977 78.8193 152.257 79.1863 151.745C79.8131 151.368 80.005 150.681 80.3896 150.113C80.852 149.539 81.9588 150.046 82.1112 149.106C82.4562 148.521 81.8125 147.784 82.603 147.357C83.0655 146.963 83.9125 146.091 84.4602 146.777C84.9181 147.148 85.0869 148.094 85.821 147.897C86.3975 147.469 87.3066 147.177 87.5658 146.507C87.6731 145.776 88.7295 145.523 89.3281 145.843C89.7171 145.798 90.022 145.286 90.463 145.399C90.7454 145.427 91.0277 145.455 91.3157 145.489C92.0158 145.568 92.716 145.613 93.4162 145.714C94.3422 145.753 95.1497 146.198 95.9797 146.575C96.3298 146.513 96.6968 146.327 97.0526 146.226C97.7804 146.31 98.5207 146.591 99.2547 146.755C100.282 146.344 101.282 145.804 102.292 145.326C102.411 145.241 102.49 145.123 102.558 144.988C102.58 145.056 102.625 145.112 102.693 145.163C103.128 144.859 103.49 145.416 103.884 145.562C104.184 145.894 104.619 145.573 104.979 145.584C105.889 145.641 106.798 145.905 107.706 146.035C108.322 145.793 108.932 145.455 109.553 145.179C109.938 145.23 110.316 145.545 110.705 145.703C111.485 145.556 112.281 145.32 113.066 145.146C113.529 145.174 113.574 144.606 113.828 144.347C113.986 143.689 113.964 142.963 114.393 142.395C114.472 142.052 114.963 141.748 114.721 141.382C114.421 140.91 114.641 140.403 114.726 139.903C114.749 139.469 114.93 139.115 115.268 138.851C115.161 138.361 114.884 137.872 114.715 137.388C114.738 136.994 114.975 136.595 115.077 136.201C115.512 136.111 115.947 136.015 116.381 135.92C116.635 135.604 117.042 135.34 117.144 134.918C117.268 134.479 117.392 134.052 117.934 134.091C118.137 133.726 118.239 133.253 118.415 132.859C118.398 131.998 118.296 131.126 118.251 130.26C118.415 129.911 118.809 129.641 119.058 129.315C119.177 128.6 119.171 127.83 119.233 127.098C119.432 126.378 119.832 125.704 120.12 125.006C119.991 124.584 119.731 124.173 119.555 123.757C119.403 123.144 118.793 122.874 118.392 122.446C118.087 122.153 117.635 121.934 117.76 121.439C117.833 121.085 117.669 120.809 117.443 120.556C117.364 120.28 117.218 120.201 117.036 120.19C117.076 120.179 117.127 120.173 117.172 120.162C116.996 119.914 116.827 119.661 116.658 119.414C115.642 119.121 114.591 118.896 113.564 118.626C113.48 117.839 113.4 117.057 113.316 116.269C113.344 115.898 113.14 115.588 112.983 115.268C112.7 114.975 113.124 114.812 113.299 114.598C113.338 114.103 113.367 113.602 113.401 113.107C113.626 112.787 113.994 112.528 114.27 112.23C114.694 112.224 115.117 112.213 115.541 112.207C115.688 111.982 115.801 111.735 115.936 111.498C116.241 111.178 115.987 110.542 115.547 110.525C114.835 110.159 114.146 109.766 113.525 109.276C113.09 108.944 112.972 109.203 113.096 109.631C112.333 109.631 111.594 109.816 110.876 109.85C110.487 109.923 109.487 109.614 110.058 109.164C109.81 108.657 109.397 108.23 109.409 107.577C108.906 106.801 108.319 107.577 108.195 108.179C107.924 108.843 108.195 109.664 107.32 109.968C106.727 110.773 106.084 110.075 105.501 109.715C104.807 109.113 103.909 109.693 103.751 110.576C103.26 111.611 102.633 110.171 101.893 110.677C101.961 110.908 101.87 110.79 101.729 110.536C101.215 110.058 100.866 110.233 100.572 110.553C100.578 110.536 100.583 110.52 100.588 110.503C100.882 110.204 100.346 109.957 100.08 109.878C99.6285 109.85 99.3349 109.327 99.2784 108.922C99.6116 108.815 99.9334 108.579 100.272 108.489C100.555 108.168 100.831 107.836 101.013 107.448C101.069 107.077 101.651 106.857 101.329 106.486C101.408 106.126 101.227 105.693 101.408 105.333C101.549 104.883 101.787 104.461 101.815 103.982C101.837 103.6 101.95 103.223 101.922 102.846C101.945 102.407 101.56 102.165 101.149 102.193C100.866 101.929 100.645 102.148 100.443 102.413C100.189 102.84 99.7482 102.475 99.641 102.143C99.4428 102.289 99.2231 102.39 99.0531 102.621C98.5958 102.818 98.6748 103.285 98.4772 103.667C98.5732 103.819 98.5675 103.971 98.5224 104.129C98.4715 103.926 98.3078 103.741 98.1497 103.538C97.2971 103.094 96.6765 104.613 95.6991 103.904C95.0893 103.352 94.5353 103.751 93.9035 103.808C93.7059 102.762 92.7234 102.908 92.0904 103.465C91.7013 104.078 90.9277 104.686 91.0576 105.485C91.1474 106.345 90.4026 106.852 90.2727 107.583C89.7301 108.089 88.4489 107.037 88.183 108.19C88.0418 107.515 87.0932 107.324 86.7261 107.69C86.7713 108.652 85.9983 109.169 85.4224 109.833C84.8797 110.79 83.8244 110.249 82.9994 110.851C82.2089 111.003 81.8537 111.96 81.3342 112.5C80.5601 112.843 79.5556 112.072 79.1428 113.029C79.2049 114.047 78.5618 114.879 78.0931 115.712C78.0135 115.847 78.4093 115.898 78.4037 116.038C78.3754 116.775 78.9294 117.085 79.5556 117.197C79.629 117.844 80.0355 118.474 80.7973 118.592C80.8938 118.547 80.9898 118.497 81.0914 118.457C81.0468 118.502 81.0073 118.559 80.9729 118.637C81.1987 118.924 81.5375 119.206 81.402 119.616C81.8424 120.426 79.974 120.235 81.0355 120.753C80.629 121.298 79.5669 121.957 79.5217 122.373C78.6408 122.137 79.3692 120.983 78.5454 121.124C78.4494 121.495 77.0496 122.002 78.1101 121.788C78.7882 121.551 78.4827 121.945 78.127 122.198C79.0705 122.592 77.433 123.245 78.3133 123.397C78.3252 123.611 78.031 123.937 78.0649 124.241C78.0485 124.19 78.031 124.134 78.0197 124.066C77.5398 123.622 77.3766 123.042 76.6199 123.155C76.1682 122.947 75.6199 122.485 75.3269 123.205C74.7622 123.717 73.9209 123.442 73.5087 124.111C73.1422 124.578 73.8808 124.865 73.7232 125.411C74.1693 125.985 73.7848 126.136 73.2998 125.731C73.7577 126.474 72.6335 126.288 72.2952 126.153C71.8938 126.08 71.4364 125.956 71.6792 126.491C71.3398 126.755 71.2619 127.07 71.2331 127.447C70.8548 127.262 70.4991 126.3 70.0078 126.913C70.2105 127.695 69.4776 127.301 69.2738 126.885C68.3082 126.733 70.0982 127.987 69.0485 127.689C68.5798 128.167 67.9304 126.333 68.0372 127.548C67.896 127.824 68.6075 128.617 67.8847 128.33C67.4669 128.297 66.953 127.655 66.8909 128.381C66.9191 128.691 66.6029 128.769 66.4957 128.916C66.4335 128.612 65.97 128.443 65.8181 128.263C65.5521 128.752 66.3545 129.444 65.5132 129.517C65.1015 129.619 64.5984 129.197 64.3669 129.27C64.1585 129.81 64.4121 130.418 63.7684 130.727C63.4979 131.346 63.3675 132.032 63.1015 132.64C62.9327 133.067 62.0625 132.724 62.1196 133.416C61.7921 133.439 61.0744 132.73 61.3624 133.45C60.6289 133.63 60.8491 134.783 59.9287 134.766C59.3923 134.012 59.3296 135.537 58.6074 135.143C58.2511 135.734 56.8338 134.839 57.2409 135.886C57.2918 136.201 57.8621 136.6 57.2121 136.617C56.8734 136.73 56.9693 137.213 56.5351 137.253C56.4956 137.748 57.0428 137.922 56.9643 138.468C56.7779 138.839 57.0207 139.565 57.5509 139.301C57.7435 140.274 58.5786 138.316 58.7198 139.312C59.0473 139.897 59.7079 140.516 59.2844 141.168C58.8158 141.315 58.9349 141.945 59.1997 141.99C59.1997 142.007 59.1941 142.018 59.1941 142.029C59.1805 142.028 59.1698 142.04 59.1642 142.045Z\" fill=\"#BAC8FF\" stroke=\"white\" stroke-width=\"1.77165\"/>\r\n            <path d=\"M81.0468 59.7667C81.363 59.7949 81.7012 59.7499 82.0062 59.8511C82.4014 59.9918 82.8368 60.0536 83.0846 59.6373C83.4466 59.2717 83.8413 58.8216 84.4003 58.816C84.5759 58.8278 84.869 58.951 85.0948 58.9623C85.0604 59.0748 85.066 59.1873 85.1061 59.2942C85.0779 59.1985 85.0779 59.0973 85.1061 58.996C85.5127 59.0185 85.8464 58.7147 86.2467 58.7879C86.6589 58.9454 87.1281 59.0016 87.5742 58.9623C88.0875 58.9623 88.2919 58.1184 88.7769 58.2478C88.7544 58.2309 88.7318 58.214 88.7154 58.1915C88.9802 57.8202 89.1044 56.9314 89.7148 57.4602C90.1835 57.9778 90.6183 57.3252 90.7702 56.892C91.2388 56.3688 92.013 56.7907 92.5997 56.6163C93.052 56.4363 93.074 55.6206 93.6499 55.7331C94.1355 55.9356 94.6324 56.0707 95.0954 56.3238C95.677 56.4926 96.1971 56.8076 96.3495 57.4264C96.5579 57.9215 96.9481 58.2647 96.9255 58.8216C97.4789 58.9173 97.3942 59.823 98.0266 59.7724C98.5523 59.7892 99.1169 59.6036 99.6189 59.6992C100.268 60.138 99.4382 60.6162 99.3812 61.1169C99.2123 61.6851 98.8679 62.1351 98.8109 62.7483C98.6132 63.2603 98.7945 63.8285 98.4557 64.2729C98.1446 64.4811 98.4162 64.9705 98.2632 65.128C98.297 65.1168 98.3309 65.0999 98.3654 65.0718C98.7267 65.3249 98.0768 65.4431 98.2298 65.73C97.9695 66.0844 98.5856 66.2757 98.3654 66.6245C98.6415 66.7876 98.6754 67.5077 98.179 67.5471C97.7838 67.6314 97.4337 67.367 97.0379 67.4064C96.3659 67.3895 96.9588 68.0252 96.7674 68.374C96.5523 68.661 96.8182 68.5991 97.0266 68.6159C97.4111 68.7003 97.428 69.246 97.8854 69.291C98.3089 69.1729 98.642 69.4992 98.9074 69.8142C99.0994 70.118 98.7324 70.5231 98.7155 70.855C98.5009 71.2263 98.9136 71.6538 98.5912 71.9632C98.3258 72.177 97.9362 72.1995 97.6483 72.3964C97.546 72.7846 97.1626 73.3134 96.7392 73.2965C96.4512 73.1052 96.1632 73.0265 95.8357 73.0321C95.5698 72.7508 95.1186 73.049 94.9153 72.824C94.8927 72.7396 94.8583 72.6552 94.825 72.5708C94.9272 72.8971 94.882 73.2403 94.5816 73.5497C94.1242 74.1404 94.7228 74.4385 95.1073 74.7873C95.576 75.063 95.7228 75.4455 95.4348 75.9181C95.2874 76.4357 95.0503 76.987 94.6719 77.3583C94.6443 77.8927 94.1694 78.309 93.9323 78.7309C93.6561 79.3385 93.0514 78.7872 92.8763 78.3372C92.4585 78.1403 91.9955 77.9208 91.9898 77.3583C91.5274 77.0601 91.4252 76.4976 90.8216 76.3682C90.4771 75.7381 89.7544 76.1431 89.2349 75.8731C88.9238 75.7212 88.5059 75.3218 88.4777 75.9012C88.0429 76.3288 87.4839 76.7507 87.4782 77.4145C87.5347 77.6846 87.4782 78.084 87.2693 78.0727C87.5347 78.3147 86.9582 78.8772 86.9074 79.2204C86.8057 79.7661 86.2303 79.9742 86.0666 80.4637C85.9424 80.79 85.8577 81.0487 86.2919 81.1219C86.4952 81.5832 87.1389 81.3694 87.5008 81.6901C87.8848 81.9263 88.2462 82.2583 88.3478 82.7027C88.3591 83.0515 87.9977 83.4678 87.6702 83.6366C87.4669 83.8447 87.1445 83.9966 87.1564 84.2779C87.2919 84.2554 87.4331 84.3735 87.4782 84.5929C87.5347 84.9867 87.8503 85.1499 88.1615 85.2793C88.2123 85.7968 88.6866 85.8925 89.1044 85.7856C89.4545 85.7912 90.2563 86.0837 89.6465 86.4269C89.2738 86.5169 89.1044 87.1414 89.1778 87.5014C89.4941 87.6927 89.9226 88.1034 89.3472 88.2946C89.0937 88.4071 88.9125 88.7391 88.6979 88.7278L88.7097 88.739L88.7606 88.7841C88.7668 89.341 88.7775 89.9148 88.3032 90.3143C88.1677 90.7981 87.9864 91.2819 87.8289 91.7544C87.8509 92.1876 87.2806 92.8064 87.9864 92.9527C87.8848 93.2678 87.2863 93.1215 87.1903 93.5603C86.8515 93.4421 86.5917 93.3521 86.2642 93.4984C85.7334 93.1552 85.2196 93.6953 84.6888 93.7797C84.1355 93.6109 84.2145 94.5504 83.6335 94.3366C83.136 94.6123 82.4923 94.3197 82.2043 94.9667C81.8379 95.4449 81.1998 95.4055 80.7086 95.6812C80.5053 95.6812 80.324 95.7262 80.3077 95.6249C80.201 95.8443 80.0253 96.0525 79.8898 96.2606C79.4099 96.2325 79.2969 96.9976 78.8509 96.8963C78.5798 96.8963 78.3257 96.9807 78.049 96.8288C77.7323 96.75 77.0044 96.84 77.3263 97.2845C77.0609 97.5151 76.6543 97.7514 76.2647 97.7064C75.7289 97.8302 75.4178 98.3646 75.0112 98.7134C74.5708 98.9553 74.3506 99.3941 73.9209 99.6642C73.6504 99.9004 73.4409 100.221 73.1027 100.396C73.0908 100.379 73.0801 100.362 73.0682 100.345C73.0908 100.435 73.097 100.531 73.0626 100.637C72.887 100.969 72.656 101.267 72.4132 101.543C72.1478 101.841 71.8429 101.746 71.5098 101.808C70.9903 102.106 70.8209 102.871 70.1777 102.983C69.8214 103.118 69.5391 103.45 69.1834 103.619C68.8051 103.844 68.359 103.895 67.9299 103.867C67.5798 103.816 67.512 104.176 67.2918 104.339C67.2523 104.401 67.1676 104.395 67.1055 104.407C66.6938 104.322 66.5069 104.66 66.3375 104.98C66.2703 105.341 65.9818 105.194 65.7333 105.239C65.2082 105.526 64.8299 106.01 64.4408 106.449C64.2827 106.809 64.023 106.55 63.853 106.353C63.447 106.302 63.639 106.674 63.7119 106.876C63.5199 107.062 63.4019 106.336 63.0744 106.55C62.7073 106.674 62.425 106.381 62.1201 106.218C61.7085 105.931 61.8999 106.893 61.4651 106.82C61.3014 106.724 61.3409 106.691 61.4081 106.646C61.3691 106.657 61.3352 106.612 61.3064 106.488C61.1088 106.044 60.5724 106.544 60.2392 106.302C59.7932 106.533 59.4312 106.904 58.997 107.174C58.613 107.546 58.0088 107.512 57.879 106.944C57.2528 106.843 57.01 106.162 56.6204 105.729C56.2646 105.346 55.7395 105.222 55.237 105.234C55.1579 105.414 54.9998 105.813 54.7852 105.47C54.6215 104.98 54.2996 104.598 53.7688 104.525C53.7914 104.12 53.7073 103.535 53.8592 103.101C53.4809 102.494 54.7344 102.5 54.2991 101.875C54.1466 101.616 54.6384 101.352 54.7457 101.11C54.8925 100.812 55.1969 100.969 55.3776 100.801C55.1523 100.452 55.5639 99.9623 55.2482 99.6473C55.0337 99.2872 54.5989 99.0228 54.6215 98.5784C54.4639 98.0777 54.9038 97.8077 55.3217 97.7008C55.3951 97.6502 55.508 97.622 55.5424 97.532C56.0783 97.4307 56.4623 97.0088 56.9597 96.8119C57.3776 96.4688 57.5187 97.4814 57.8682 96.9413C58.0382 96.8007 58.2466 96.7219 58.4617 96.6657C57.9699 96.3337 57.7723 95.7881 57.4848 95.2986C57.3042 94.9948 56.5532 95.2761 56.7903 94.6629C56.5475 94.1285 56.7903 93.4253 56.3386 92.9696C56.0681 92.6208 55.6271 91.867 56.0958 91.6138C56.1184 91.3044 56.4289 91.7263 56.5475 91.3775C56.9597 91.0568 57.333 91.5632 57.6373 91.0794C57.9992 91.0118 58.3268 90.8206 58.6373 90.8881C58.5413 90.8093 58.4899 90.6968 58.5244 90.5112C58.53 90.483 58.5357 90.4493 58.5413 90.4212C58.5187 90.4549 58.4899 90.4774 58.4623 90.4943C58.0388 90.3424 57.7564 89.9486 57.3211 89.8304C57.0557 89.566 56.4007 90.0273 56.4289 89.3579C56.3555 88.7503 56.6271 88.2496 56.683 87.6195C56.0619 87.3158 56.7446 86.1287 55.9546 86.1906C55.7113 85.8531 55.5249 85.5887 55.1641 85.4312C54.9332 84.9586 55.277 84.3623 54.8987 83.9347C54.5148 83.3496 55.6949 83.5353 56.0111 83.299C56.5136 83.0346 57.1404 82.6633 57.5074 82.3876C57.0162 82.1514 57.8914 82.1289 57.7559 81.6844C57.9309 81.4257 57.5916 80.9643 58.1342 81.0375C58.1732 80.7449 58.3544 80.4974 58.303 80.1542C58.4103 80.0192 58.5916 79.9461 58.7892 79.9349C58.6537 79.8786 58.6136 79.7829 58.7892 79.5692C59.0427 78.9447 59.1161 78.2471 58.6029 77.6789C58.5458 77.3245 58.3482 77.0883 58.1449 76.807C58.6362 76.7057 59.0936 76.0587 59.534 76.6157C60.0648 76.807 60.4883 77.6058 61.1489 77.1782C61.6006 76.8745 61.8095 75.8618 62.3849 76.5988C62.9496 77.0151 63.582 77.4933 64.237 76.9589C64.6266 76.8801 64.9654 76.9645 64.8299 76.4582C64.9095 75.8675 64.2539 75.4343 64.294 74.8042C64.0733 74.461 63.6221 74.3317 63.9321 73.8704C64.0337 73.6003 64.0388 73.2346 64.0789 72.9083C63.757 72.3008 63.1924 71.3388 64.1241 71.0238C64.2997 70.5118 64.7057 70.0393 65.084 69.9436C64.8976 69.6173 65.3494 69.3473 65.5244 69.1223L65.5978 69.1673C65.3663 68.9254 65.3437 68.5147 65.4905 68.194C65.9485 67.9071 64.9936 67.2208 65.084 67.9127C64.7791 68.3797 64.294 68.6216 64.1529 69.1785C63.8474 69.5611 63.5939 70.3093 63.0061 69.848C62.4645 69.5667 61.9112 69.3417 61.3635 69.066C60.9117 68.8072 60.6294 68.3909 60.3527 67.9803C59.9688 67.7215 59.1557 68.0421 59.1613 67.4796C58.936 67.3164 58.8056 66.7876 59.2127 66.8214C59.2127 66.3432 59.534 65.6625 58.958 65.4206C59.0377 64.7792 58.3934 65.0493 58.1054 64.768C58.2692 64.3573 59.1161 64.5992 59.3025 64.031C59.5967 63.9967 59.9123 63.9916 60.0478 63.6091C60.3132 63.069 61.0021 63.0015 61.4933 63.2153C61.9456 63.6147 62.5267 63.2434 62.9953 63.6091C63.7356 63.8172 64.3392 63.204 64.8417 62.7652C64.9891 62.709 65.1359 62.7034 65.2652 62.6021C65.7683 63.024 66.3217 63.204 66.9711 63.1759C67.3827 63.3284 68.027 62.754 68.2811 63.0184C68.2692 62.9846 68.2528 62.9509 68.2359 62.9227C68.608 62.7427 68.9587 62.5064 69.3934 62.4896C69.9637 62.3433 70.224 61.6401 70.8333 61.6063C71.3189 61.6795 71.5278 60.9594 72.0304 61.2294C72.4652 61.4826 72.9338 61.3363 73.3856 61.3925C73.8147 61.5107 74.0067 61.055 74.001 60.7006C74.0067 60.4306 74.5149 60.5487 74.4245 60.1605C74.5262 60.0311 74.6272 59.6542 74.7012 59.7273C74.6668 59.5136 74.7407 59.2998 74.9779 59.1423C75.5363 59.0016 76.158 59.3842 76.739 59.3898C77.1625 59.6148 77.8802 60.048 77.9192 59.2374C78.1625 58.4891 78.7498 59.333 79.1676 59.3949C79.5911 59.4286 80.0598 59.3611 80.4381 59.5861C80.6397 59.6486 80.843 59.7099 81.0468 59.7667Z\" fill=\"#3B5BDB\" stroke=\"white\" stroke-width=\"1.77165\"/>\r\n            <path d=\"M69.1721 156.628C69.1388 156.611 69.0992 156.594 69.0597 156.583C69.342 156.521 69.6187 156.324 69.9519 156.279C69.6808 155.947 69.2912 155.446 69.551 155.058C69.6351 154.451 70.4544 154.282 70.6012 153.64C71.0919 153.084 70.6628 152.115 71.4138 151.851C71.7413 152.537 72.3059 151.486 72.7068 152.11C73.4578 152.07 73.848 152.797 74.503 153.027C75.2817 153.274 75.5527 154 76.2754 154.372C76.7786 154.209 76.7729 153.174 77.3539 152.858C77.2867 152.527 77.3991 152.229 77.5634 151.801C77.4561 151.266 78.2574 151.345 78.0767 150.946C77.5002 150.901 77.9807 150.299 77.7774 149.984C77.507 150.378 77.411 149.618 77.0101 149.506C77.1795 149.247 76.7334 149.224 76.7893 148.999C76.5521 148.74 76.3494 148.515 76.3946 148.065C76.6538 147.525 75.6831 147.784 75.8638 147.3C75.4798 147.098 75.1862 146.749 74.6554 146.777C74.4691 146.648 74.6837 146.096 74.1523 146.136C74.4635 145.77 73.7068 146.012 73.6221 145.584C73.0575 145.157 72.9389 146.147 72.4307 145.804C71.8152 145.933 71.0981 145.073 71.7023 144.712C71.708 144.037 71.5329 143.272 71.612 142.558C71.4595 142.035 71.6515 141.073 70.957 140.904C70.743 141.241 70.1608 141.753 69.6588 141.517C69.4217 140.583 68.3883 141.264 67.8852 140.78C67.6763 141.039 67.3369 141.191 67.0439 141.438C67.394 142.057 67.281 142.794 66.8745 143.362C66.4849 143.812 67.2472 144.6 66.8293 145.011C66.1235 145.472 66.355 146.299 66.7333 146.873C67.2923 147.081 66.6204 147.694 66.9315 147.773C67.5126 147.936 66.8412 148.245 66.5532 148.026C66.0337 148.493 65.4239 148.33 64.8079 148.442L64.8304 148.482C64.6497 148.234 64.3002 148.527 64.0574 148.352C63.7689 148.493 63.4984 148.572 63.1929 148.476C62.9614 148.167 62.7079 147.756 62.2669 147.773L62.2613 147.823C62.1822 147.891 62.1257 147.964 62.0862 148.049C62.1252 147.936 62.1534 147.846 62.1534 147.778C61.2669 147.778 60.7587 146.974 59.8044 147.098C59.6017 146.985 59.5904 146.58 59.2178 146.659C58.7773 146.687 59.4154 146.108 59.2234 145.832C59.6469 145.427 59.0986 144.988 59.1274 144.555C58.9467 144.071 59.6921 143.514 59.2906 143.165C59.071 143.368 58.6418 143.165 58.9241 142.901C59.2968 142.698 58.8903 142.288 59.1613 142.046C58.7892 141.838 58.9524 141.202 59.342 141.14C59.342 140.898 59.4606 140.527 59.3589 140.285C59.2121 139.897 58.7711 139.694 58.7096 139.25C58.6588 138.693 58.0602 139.284 57.9473 139.531C57.6079 139.852 57.6418 139.031 57.303 139.407C56.9591 139.205 56.7728 138.884 56.9812 138.541C56.9303 138.372 56.8795 138.198 56.8344 138.024C56.4504 137.832 56.0043 138.282 55.6203 137.967C55.338 137.742 54.6774 137.517 54.5362 137.9C54.9207 138.243 55.124 138.704 54.8417 139.182C54.8298 139.469 55.2482 140.195 54.7169 140.009C54.4854 139.711 54.2087 139.143 53.8643 139.677C53.4012 139.897 53.0399 140.443 52.526 140.488C52.1929 140.105 51.696 139.993 51.2386 140.246C50.7987 140.257 50.5949 140.628 50.5328 141.045C50.3244 141.281 50.2166 141.523 50.3696 141.258C50.1488 140.825 49.2459 142.057 49.3306 141.135C49.15 140.909 49.8157 140.291 49.1776 140.021C48.8671 139.419 48.7993 138.687 48.8162 137.995C48.7874 137.253 48.2516 136.611 48.3244 135.824C48.0082 135.402 47.6982 136.223 47.3425 136.263C47.0771 136.488 47.0432 137.242 46.7496 136.611C46.4277 136.004 46.0607 136.431 45.9817 136.904C45.4396 137.18 45.3097 137.934 44.7507 138.226C43.932 138.13 43.5762 139.362 42.6784 139.025C42.3509 138.665 42.2436 138.372 41.679 138.361C41.0522 138.31 40.4424 138.822 39.8947 139.166C39.2792 139.121 39.138 139.722 39.2227 140.246C38.8275 140.741 39.4599 141.191 39.33 141.601C39.7592 141.759 40.1431 142.322 39.4091 142.119C38.963 142.839 39.8213 143.098 40.3464 143.312C40.8264 143.458 41.6338 143.717 40.9845 144.307C40.7981 144.932 40.8038 145.815 39.9681 146.068C39.6124 146.569 38.483 146.518 38.2177 147.058C38.1725 147.891 39.1832 148.386 38.788 149.252C38.8444 150.023 38.8275 151.058 39.6349 151.458L39.6519 151.469C39.4825 151.441 39.3187 151.587 39.2002 151.789C38.8218 152.02 38.8218 152.431 38.4887 152.695C38.5395 153.24 37.9127 153.229 37.7603 153.662C37.4667 153.815 37.0658 153.381 36.8399 153.139C36.4277 152.74 36.0494 153.539 36.1905 153.904C36.2583 154.365 36.4446 154.748 36.6818 155.131C36.5858 155.446 37.2352 155.969 36.7834 156.081C36.3712 156.02 35.9477 156.081 35.6202 156.357C35.7106 156.447 35.7501 156.588 35.7783 156.728C35.5525 156.002 34.4683 155.986 33.8133 155.98C33.0398 156.143 32.2267 156.363 31.4248 156.43C30.7586 156.126 30.0019 156.166 29.7309 156.886C29.7704 156.959 29.8043 157.038 29.8382 157.117C29.7196 156.908 29.5276 156.79 29.1832 156.915C28.7371 157.707 28.2741 158.512 27.7602 159.271C27.6755 159.828 27.2464 160.272 27.3424 160.824C27.077 161.46 26.3034 160.891 25.9364 161.251C25.7783 161.493 25.3774 161.617 25.4508 161.128C25.5016 161.336 25.3717 161.853 25.1572 162.118C24.9991 162.652 24.5473 163.187 24.7506 163.761C24.9991 164.222 24.8748 164.818 25.2757 165.189C25.5807 165.786 24.5869 166.484 25.0725 166.967C25.6145 167.232 25.8065 167.732 25.5185 168.272C25.4621 168.57 25.1628 169.471 25.6258 169.369C26.1284 168.953 26.5519 169.318 26.9471 169.662C27.348 170.101 27.9353 169.949 28.387 170.078C28.6919 170.534 29.1211 169.785 29.4147 169.572C29.8551 169.397 30.6287 169.499 30.4932 169.392C30.0019 169.578 30.7473 170.523 31.1425 170.641C31.8314 170.9 32.4638 171.131 32.7066 172.003C32.6671 172.2 32.7518 172.318 32.8873 172.38C32.7631 172.397 32.6897 172.463 32.7518 172.667C32.5655 173.077 32.0403 173.066 31.7862 173.37C31.487 173.015 31.1595 173.634 30.8997 173.212C30.5779 173.1 30.3407 172.797 30.0019 173.078C29.5954 172.943 29.4937 173.297 29.3469 173.567C29.1436 173.894 28.7484 173.787 28.5282 173.769C28.4322 174.22 28.9912 174.591 29.3751 174.714C29.5897 174.878 29.6631 175.165 29.9398 175.255C30.0753 175.632 29.9793 176.301 30.5383 176.341C31.0296 176.341 31.2272 176.965 31.662 177.173C32.125 177.404 32.6501 177.359 33.0962 177.623C33.2939 177.848 33.6044 178.22 33.6665 178.422C33.0285 178.613 33.8867 179.058 33.9489 179.44C34.1183 179.761 34.2989 180.077 34.4175 180.414C34.3159 180.464 34.2142 180.498 34.107 180.537C33.356 180.666 33.2317 181.528 32.8026 182.023C32.9551 182.051 31.933 182.259 31.3401 182.135C30.6851 182.001 30.6117 182.54 31.1764 182.72C31.7636 182.861 31.4023 183.182 31.1933 183.587C30.3238 183.829 31.0409 185.005 30.3351 185.218C29.2792 185.724 31.3063 185.752 31.1482 186.241C30.5892 186.788 29.3639 186.658 29.2735 187.536C29.7648 188.542 28.3249 188.807 28.4604 189.78C28.4604 190.771 27.4948 191.321 27.1448 192.165C26.9641 192.812 26.0776 193.06 26.0776 193.757C26.4954 194.23 26.9132 194.708 27.3254 195.186C27.6304 195.4 27.444 195.783 27.4723 196.098C27.3706 196.429 27.6925 196.654 27.811 196.935C28.0934 197.178 27.8449 197.42 27.6981 197.661C27.9014 197.926 27.636 198.488 28.195 198.455C28.483 197.476 28.8895 199.214 29.5163 198.668C30.2617 198.365 30.8602 197.797 31.6225 197.543C32.4412 197.543 32.5824 198.86 33.339 198.725C33.7399 199.225 34.3328 199.31 34.9427 199.018C35.5186 199.535 36.0663 198.989 36.3938 198.494C37.2634 197.915 35.9364 197.555 36.0381 196.88C36.4842 195.541 37.7038 194.545 37.941 193.117C38.3983 192.756 38.5395 194.253 39.1889 194.207C39.3357 194.168 39.426 194.05 39.4712 193.887C39.6124 194.534 40.0246 195.046 40.7868 194.748C40.9619 193.91 41.9161 192.981 42.6954 193.217C42.2041 193.965 42.2098 194.764 42.2267 195.726C42.159 196.21 41.5096 196.711 42.4526 196.851C43.0963 197.701 44.1578 196.773 44.9653 197.504C45.5751 197.02 45.5864 196.047 46.4729 195.878C46.8569 194.95 47.9693 195.158 48.3645 195.759C49.3871 195.388 49.6802 194.337 50.194 193.583C50.7931 193.195 50.9343 194.814 51.4871 193.814C52.08 193.52 52.3284 193.167 52.2211 192.7C52.9665 191.49 54.0167 194.348 54.7112 192.632C55.1065 191.659 55.1122 192.418 55.587 192.666C55.801 192.193 55.9874 191.018 56.2132 192.07C56.5069 192.689 57.4724 193.116 57.7604 193.156C56.9806 193.92 58.709 195.023 59.3188 194.079C59.8327 193.662 60.2844 194.748 60.6175 195.085C60.0472 195.709 60.9281 196.109 61.2443 195.468C62.2155 195.412 61.2048 196.633 62.1585 196.795C62.7119 197.161 63.4634 197.206 63.2658 196.306C64.2421 195.67 63.9321 194.574 62.8135 194.377C63.119 195.051 62.1246 195.322 62.2607 194.415C62.2545 193.482 60.7757 193.684 61.3064 192.615C61.9727 192.255 62.8197 191.681 61.7587 191.254C60.9174 190.404 59.4832 190.742 58.5571 189.876C57.7491 189.853 56.936 189.134 57.9473 188.571C58.6695 187.806 59.2121 186.506 58.8959 185.511C58.6531 185.28 59.6525 184.864 59.8897 185.145C60.5673 184.684 59.5227 184.583 59.4606 183.953C59.2127 183.413 58.4724 184.437 58.3764 183.531C57.3036 183.143 58.3256 180.762 57.1003 181.101C55.9591 180.876 56.9535 179.148 55.6542 179.064C55.0613 178.738 54.5136 178.35 53.9377 178.35C54.2482 178.063 54.1522 177.601 54.6717 177.343C55.1184 176.521 55.6887 175.699 56.0721 174.918C56.8626 174.484 57.6305 173.95 58.4041 173.55C59.4764 173.528 59.8778 172.172 60.7982 171.716C61.4758 171.531 61.346 170.76 61.9157 170.489C61.8875 170.422 61.8541 170.354 61.8197 170.298C62.3172 170.619 63.3505 169.292 62.6503 168.735C62.8756 167.97 63.604 167.188 64.4736 167.255C64.2703 168.11 66.3369 168.329 66.2805 167.283C66.5284 166.36 67.5453 165.848 67.7712 164.836C68.8722 164.515 67.7542 162.99 68.7875 162.828C69.8604 163.035 69.7029 161.309 70.8768 161.826C71.5544 161.41 72.3505 160.465 72.2766 159.632C71.7181 159.244 70.9897 159.262 70.5098 158.519C69.726 158.254 69.2969 157.398 69.1721 156.628Z\" fill=\"#4263EB\" stroke=\"white\" stroke-width=\"1.77165\"/>\r\n            <path d=\"M79.6063 190.132C79.3466 190.025 79.0812 189.935 78.8102 189.862C77.9293 189.828 77.071 189.57 76.1625 189.575C75.8576 189.237 75.4623 189.13 75.0496 189.141C75.1687 189.068 75.2195 188.922 75.1399 188.63C75.0439 188.146 74.6204 187.752 74.8067 187.352C74.4121 187.144 73.7621 187.004 73.8474 186.402C73.3787 186.317 73.2709 185.158 72.7237 185.518C72.2494 185.8 71.6452 185.361 71.5436 186.12C71.1139 186.683 70.442 187.021 69.8773 187.313C69.4482 186.807 68.4775 187.831 68.6243 186.891C69.1658 186.385 68.6125 185.817 69.019 185.21C69.019 184.444 67.6639 184.776 67.7773 183.864C67.7598 183.229 66.9072 183.679 66.6757 183.139C65.9699 182.774 65.7615 183.808 65.6655 184.298C65.5808 184.844 65.9134 185.665 65.0331 185.67C63.9264 186.182 64.7113 184.714 64.2539 184.326C64.0388 183.926 64.6938 183.262 63.9264 183.353C63.5424 183.223 63.0676 183.161 63.0399 182.61C62.4978 182.211 62.4408 183.493 61.9275 182.875C61.2217 182.807 60.6401 183.949 60.2725 184.585L60.2217 184.681L60.1822 184.731C60.1601 185.108 59.7135 185.255 59.465 185.018C59.2279 185.294 58.4204 185.249 59.019 185.66C59.0585 186.363 58.827 187.05 58.5785 187.708C58.3809 188.383 57.5684 188.658 57.4379 189.323C57.9122 189.834 58.7592 189.851 59.3346 190.295C60.0015 190.672 60.7976 190.622 61.4583 190.942C61.6616 191.432 62.8417 191.623 62.0455 192.118C61.3962 192.304 60.7638 193.372 61.6559 193.626C62.3448 193.682 62.198 194.88 62.5424 195.044C63.0337 194.993 62.7677 194.424 62.9264 194.391C63.5362 194.262 63.7344 195.523 64.1178 195.178C63.8519 195.566 63.5645 195.933 63.2652 196.303C63.2482 196.675 63.2533 197.384 62.6774 196.985C62.6717 197.176 62.8129 197.35 62.9541 197.53C62.8129 197.362 62.6661 197.199 62.6774 196.985C61.8592 196.934 61.5368 196.157 61.6384 195.55C61.08 195.223 60.6847 196.337 60.3967 195.493C61.0066 194.875 59.8829 194.228 59.482 193.907C58.9399 195.071 56.9529 194.042 57.7654 193.153C57.2742 193.165 56.1223 192.27 55.9811 191.555C55.8569 192.174 55.4052 193.254 55.1285 192.057C54.7389 192.951 53.8467 193.733 53.1296 192.591C52.8411 191.994 51.7631 192.731 52.2826 193.26C51.622 193.659 50.8936 194.66 50.5435 193.507C49.5215 193.766 49.6796 195.415 48.4712 195.684C48.0195 195.797 47.5056 194.66 46.8619 195.442C46.094 196.033 45.4898 196.573 45.0437 197.472C45.3261 197.67 47.0257 197.534 46.7264 198.508C46.5231 198.57 46.382 198.705 46.382 198.975C46.1843 199.537 46.7321 199.993 46.9918 200.533C47.0991 201.119 47.7936 201.439 47.4768 202.075C46.8506 202.171 46.1838 201.917 45.5627 202.221C44.9077 202.424 44.1736 202.278 43.5807 202.711C43.3492 202.976 43.3436 203.414 42.9935 203.701C42.7789 204.275 42.0392 204.106 41.7738 204.584C41.3221 205.045 40.972 205.518 40.5711 205.996C40.1758 206.261 39.5321 206.66 39.9556 207.15C40.1476 207.667 40.1476 208.393 40.5429 208.876C40.6332 209.304 40.4638 210.035 41.1188 209.777C41.7512 209.535 42.3836 209.861 42.8805 210.233C43.1064 210.412 43.3379 210.137 43.5581 210.075C43.5638 210.846 44.1793 211.212 45.0714 211.037C45.9353 211.065 45.4102 212.641 46.4096 211.893C47.5333 211.285 45.2182 210.176 46.8444 210.064C47.3978 210.47 47.7592 211.145 48.4932 210.582C49.504 210.317 49.5548 212.123 50.7518 211.487C51.474 211.161 52.1635 209.8 53.0839 210.266C53.2188 211.363 54.3092 211.904 54.6875 212.821C54.823 213.817 56.1725 214.981 55.0658 215.656C54.6994 216.556 56.1725 216.68 56.6412 216.179C56.6356 216.241 56.6248 216.308 56.6068 216.371C56.6915 216.438 56.5622 216.585 56.6186 216.663C57.0252 217.26 56.4385 217.023 56.0709 217.17C56.3532 217.474 56.6412 218.132 56.1725 218.452C55.9523 219.116 55.303 219.549 55.1449 220.241C55.6982 219.994 56.19 220.072 56.7716 220.123C57.6525 219.976 57.2793 221.321 57.8388 221.254C58.5729 221.411 59.3239 221.693 60.1257 221.665C61.08 221.518 61.3566 222.559 62.0004 223.009C62.5481 223.583 62.5424 222.272 63.0619 222.767C63.2149 223.414 63.8185 224.089 64.4397 223.431C64.7835 222.79 65.3538 222.857 65.9021 223.206C66.512 223.673 67.1382 222.672 67.7768 223.212C68.1607 223.482 68.4482 223.944 68.9626 223.977C69.6006 224.506 70.3064 223.645 70.8372 223.386C71.5035 223.741 72.2144 224.005 72.8412 224.41C72.8412 224.455 72.8982 224.455 72.9767 224.433C72.8751 224.556 72.9377 224.669 73.3782 224.775C74.2252 224.928 74.6876 225.546 75.2585 226.07C75.7435 226.322 76.5227 226.322 76.5402 227.077C76.9293 227.2 77.1444 227.318 77.3195 227.048C78.0479 227.144 78.6922 227.802 79.5499 227.442C80.5154 227.02 81.193 227.971 82.0343 228.257C82.2822 229.214 83.4799 229.416 84.293 229.743C84.9926 230.345 85.9248 229.647 86.6357 229.501C87.3698 229.388 87.6069 230.53 88.2337 229.782C88.8435 229.973 89.3178 231.053 90.0807 230.508C90.9553 230.316 91.791 230.614 92.6555 230.727C93.0338 230.829 92.345 230.018 92.9717 229.867C93.7284 229.816 94.9932 228.876 94.389 228.196C94.5985 228.28 94.7961 228.139 94.9028 227.74C95.4844 227.397 95.7278 226.884 95.8294 226.254C96.2693 225.967 97.3026 225.951 96.812 225.18L96.7098 225.09C97.0147 225.298 97.3026 225.326 97.2744 224.769C97.2179 224.55 96.5567 224.314 97.2066 224.274C97.6019 224.837 98.0197 223.639 98.4207 224.348C99.1609 224.483 99.5663 224.033 99.7871 223.369C99.8775 223.037 100.199 222.755 100.357 223.222C100.951 223.144 101.261 222.474 101.939 222.649C102.255 222.204 102.994 222.418 102.729 223.026C103.344 223.222 102.334 224.144 103.22 224.123C103.887 224.454 103.396 225.416 104.073 225.832C104.451 226.519 105.259 226.654 105.908 226.952C106.8 226.918 106.579 228.038 106.382 228.578C106.931 229.011 107.28 229.608 107.472 230.26C107.67 230.71 108.054 231.739 108.534 231.542C108.697 230.923 109.788 231.784 109.788 230.833C109.878 230.53 110.206 230.603 110.443 230.569C110.002 229.415 109.551 228.274 109.059 227.142C108.924 226.569 108.822 225.978 108.664 225.416C108.337 225.135 107.936 224.921 107.648 224.606C107.111 223.723 106.614 222.812 106.055 221.95C105.378 221.14 104.656 220.37 104.012 219.543C103.622 218.952 103.238 218.367 102.854 217.776C102.842 217.523 102.928 217.242 102.876 217C102.374 216.724 101.888 216.409 101.381 216.156C101.11 216.122 100.816 215.992 100.556 216.01L100.539 216.021L100.59 215.987C100.037 215.992 100.551 215.694 100.72 215.492C101.053 215.154 101.42 214.833 101.73 214.485C101.781 214.113 101.922 213.736 101.933 213.371C101.589 213.444 101.228 213.613 100.883 213.72C100.934 213.067 100.99 212.42 101.041 211.767C101.29 211.548 101.6 211.357 101.82 211.115C101.792 210.671 101.645 210.192 101.674 209.765C102.193 209.191 102.662 208.578 103.046 207.909C103.244 207.267 103.351 206.581 103.61 205.962C103.757 205.709 104.04 205.495 104.136 205.214C103.814 205.073 103.43 205.011 103.091 204.899C103.051 203.559 103.012 202.221 102.973 200.882C103.102 200.645 103.317 200.443 103.413 200.201C103.458 199.937 103.176 199.498 103.464 199.363C103.91 199.098 104.424 198.93 104.83 198.615C104.966 198.39 105.434 198.176 105.35 197.934C105.135 197.591 104.87 197.343 104.57 197.276C104.847 197.074 104.994 196.415 104.497 196.544C104.254 195.959 105.191 195.7 105.118 195.177C105.52 194.637 104.808 194.148 105.198 193.602C105.745 193.568 105.254 193.388 105.028 193.253C104.769 193.326 104.622 193.658 104.469 193.18C104.277 192.735 103.256 192.061 103.233 192.893C103.509 193.472 102.804 192.938 102.566 193.236C102.436 193.674 102.081 193.692 101.861 193.297C101.341 192.515 101.059 193.798 100.5 193.781C100.003 194.102 100.534 194.552 100.375 194.929C99.9181 195.092 99.4777 195.367 98.9864 195.508C99.2179 194.99 98.5121 195.08 98.3032 195.373C97.8571 195.289 98.393 194.939 98.2242 194.72C97.7888 194.867 97.428 195.154 97.0378 195.39C97.2016 195.221 97.2016 194.968 97.0096 194.703C97.2123 194.225 96.7216 194.045 96.6595 193.657C96.6476 193.156 96.1739 192.925 95.7843 192.707C95.773 192.403 96.3433 192.504 96.5804 192.538C96.4449 192.313 96.3772 192.02 96.3145 191.812C96.0265 191.863 95.8746 191.166 95.773 191.598C95.5691 191.514 95.6883 190.979 95.6375 190.743C95.2812 190.18 96.1903 189.483 95.3834 189.112C94.9316 188.645 94.3218 188.465 93.808 188.127C94.175 187.84 94.4291 187.559 93.8306 187.272C94.197 187.013 93.6047 186.309 94.1807 186.321C94.6041 185.978 94.3382 185.905 93.9435 185.736C93.8532 184.994 92.7346 185.669 92.8481 185.174C93.136 184.442 92.3342 184.774 91.9841 184.707C91.459 184.802 91.3009 184.302 90.9621 183.891C90.9503 183.109 90.0191 183.514 90.2789 184.099C89.6403 183.981 90.053 184.577 90.1541 184.988C90.9446 185.759 89.2851 186.158 89.2506 186.513C89.1383 186.934 88.1383 186.417 87.6815 186.484C87.0428 186.941 86.7724 187.61 86.1507 188.009C85.6538 188.763 86.2077 188.088 86.625 187.986C86.9073 188.29 86.0891 188.313 86.241 188.74C85.507 189.235 84.7786 188.251 83.9937 188.037C83.4014 188.718 82.193 188.628 81.8034 187.694C81.5662 187.851 81.3455 188.954 80.7757 189.242C80.3178 190.091 79.3296 188.892 79.1721 189.933C79.3183 190.002 79.4595 190.064 79.6063 190.132Z\" fill=\"#91A7FF\"/>\r\n            <path d=\"M62.6774 196.985C63.2533 197.384 63.2482 196.675 63.2652 196.303C63.5645 195.933 63.8519 195.566 64.1178 195.178C63.7344 195.523 63.5362 194.262 62.9264 194.391C62.7677 194.424 63.0337 194.993 62.5424 195.044C62.198 194.88 62.3448 193.682 61.6559 193.626C60.7638 193.372 61.3962 192.304 62.0455 192.118C62.8417 191.623 61.6616 191.432 61.4583 190.942C60.7976 190.622 60.0015 190.672 59.3346 190.295C58.7592 189.851 57.9122 189.834 57.4379 189.323C57.5684 188.658 58.3809 188.383 58.5785 187.708C58.827 187.05 59.0585 186.363 59.019 185.66C58.4204 185.249 59.2279 185.294 59.4651 185.018C59.7135 185.255 60.1601 185.108 60.1822 184.731L60.2217 184.681L60.2725 184.585C60.6401 183.949 61.2217 182.807 61.9275 182.875C62.4408 183.493 62.4978 182.211 63.0399 182.61C63.0676 183.161 63.5424 183.223 63.9264 183.353C64.6938 183.262 64.0388 183.926 64.2539 184.326C64.7113 184.714 63.9264 186.182 65.0331 185.67C65.9134 185.665 65.5808 184.844 65.6655 184.298C65.7615 183.808 65.9699 182.774 66.6757 183.139C66.9072 183.679 67.7598 183.229 67.7773 183.864C67.6639 184.776 69.019 184.444 69.019 185.21C68.6125 185.817 69.1658 186.385 68.6243 186.891C68.4775 187.831 69.4482 186.807 69.8773 187.313C70.442 187.021 71.1139 186.683 71.5436 186.12C71.6452 185.361 72.2494 185.8 72.7237 185.518C73.2709 185.158 73.3787 186.317 73.8474 186.402C73.7621 187.004 74.4121 187.144 74.8067 187.352C74.6204 187.752 75.0439 188.146 75.1399 188.63C75.2195 188.922 75.1687 189.068 75.0496 189.141C75.4623 189.13 75.8576 189.237 76.1625 189.575C77.071 189.57 77.9293 189.828 78.8102 189.862C79.0812 189.935 79.3466 190.025 79.6063 190.132C79.4595 190.064 79.3183 190.002 79.1721 189.933C79.3296 188.892 80.3178 190.091 80.7757 189.242C81.3455 188.954 81.5662 187.851 81.8034 187.694C82.193 188.628 83.4014 188.718 83.9937 188.037C84.7786 188.251 85.507 189.235 86.241 188.74C86.0891 188.313 86.9073 188.29 86.625 187.986C86.2077 188.088 85.6538 188.763 86.1507 188.009C86.7724 187.61 87.0428 186.941 87.6815 186.484C88.1383 186.417 89.1383 186.934 89.2506 186.513C89.2851 186.158 90.9446 185.759 90.1541 184.988C90.053 184.577 89.6403 183.981 90.2789 184.099C90.0191 183.514 90.9503 183.109 90.9621 183.891C91.3009 184.302 91.459 184.802 91.9841 184.707C92.3342 184.774 93.136 184.442 92.8481 185.174C92.7346 185.669 93.8532 184.994 93.9435 185.736C94.3382 185.905 94.6041 185.978 94.1807 186.321C93.6047 186.309 94.197 187.013 93.8306 187.272C94.4291 187.559 94.175 187.84 93.808 188.127C94.3218 188.465 94.9316 188.645 95.3834 189.112C96.1903 189.483 95.2812 190.18 95.6375 190.743C95.6883 190.979 95.5691 191.514 95.773 191.598C95.8746 191.166 96.0265 191.863 96.3145 191.812C96.3772 192.02 96.4449 192.313 96.5804 192.538C96.3433 192.504 95.773 192.403 95.7843 192.707C96.1739 192.925 96.6476 193.156 96.6595 193.657C96.7216 194.045 97.2123 194.225 97.0096 194.703C97.2016 194.968 97.2016 195.221 97.0378 195.39C97.428 195.154 97.7888 194.867 98.2242 194.72C98.393 194.939 97.8571 195.289 98.3032 195.373C98.5121 195.08 99.2179 194.99 98.9864 195.508C99.4777 195.367 99.9181 195.092 100.375 194.929C100.534 194.552 100.003 194.102 100.5 193.781C101.059 193.798 101.341 192.515 101.861 193.297C102.081 193.692 102.436 193.674 102.566 193.236C102.804 192.938 103.509 193.472 103.233 192.893C103.256 192.061 104.277 192.735 104.469 193.18C104.622 193.658 104.769 193.326 105.028 193.253C105.254 193.388 105.745 193.568 105.198 193.602C104.808 194.148 105.52 194.637 105.118 195.177C105.191 195.7 104.254 195.959 104.497 196.544C104.994 196.415 104.847 197.074 104.57 197.276C104.87 197.343 105.135 197.591 105.35 197.934C105.434 198.176 104.966 198.39 104.83 198.615C104.424 198.93 103.91 199.098 103.464 199.363C103.176 199.498 103.458 199.937 103.413 200.201C103.317 200.443 103.102 200.645 102.973 200.882C103.012 202.221 103.051 203.559 103.091 204.899C103.43 205.011 103.814 205.073 104.136 205.214C104.04 205.495 103.757 205.709 103.61 205.962C103.351 206.581 103.244 207.267 103.046 207.909C102.662 208.578 102.193 209.191 101.674 209.765C101.645 210.192 101.792 210.671 101.82 211.115C101.6 211.357 101.29 211.548 101.041 211.767C100.99 212.42 100.934 213.067 100.883 213.72C101.228 213.613 101.589 213.444 101.933 213.371C101.922 213.736 101.781 214.113 101.73 214.485C101.42 214.833 101.053 215.154 100.72 215.492C100.551 215.694 100.037 215.992 100.59 215.987L100.539 216.021L100.556 216.01C100.816 215.992 101.11 216.122 101.381 216.156C101.888 216.409 102.374 216.724 102.876 217C102.928 217.242 102.842 217.523 102.854 217.776C103.238 218.367 103.622 218.952 104.012 219.543C104.656 220.37 105.378 221.14 106.055 221.95C106.614 222.812 107.111 223.723 107.648 224.606C107.936 224.921 108.337 225.135 108.664 225.416C108.822 225.978 108.924 226.569 109.059 227.142C109.551 228.274 110.002 229.415 110.443 230.569C110.206 230.603 109.878 230.53 109.788 230.833C109.788 231.784 108.697 230.923 108.534 231.542C108.054 231.739 107.67 230.71 107.472 230.26C107.28 229.608 106.931 229.011 106.382 228.578C106.579 228.038 106.8 226.918 105.908 226.952C105.259 226.654 104.451 226.519 104.073 225.832C103.396 225.416 103.887 224.454 103.22 224.123C102.334 224.144 103.344 223.222 102.729 223.026C102.994 222.418 102.255 222.204 101.939 222.649C101.261 222.474 100.951 223.144 100.357 223.222C100.199 222.755 99.8775 223.037 99.7871 223.369C99.5663 224.033 99.1609 224.483 98.4207 224.348C98.0198 223.639 97.6019 224.837 97.2066 224.274C96.5567 224.314 97.2179 224.55 97.2744 224.769C97.3026 225.326 97.0147 225.298 96.7097 225.09L96.812 225.18C97.3026 225.951 96.2693 225.967 95.8294 226.254C95.7278 226.884 95.4844 227.397 94.9028 227.74C94.7961 228.139 94.5985 228.28 94.389 228.196C94.9932 228.876 93.7284 229.816 92.9717 229.867C92.345 230.018 93.0338 230.829 92.6555 230.727C91.791 230.614 90.9553 230.316 90.0807 230.508C89.3178 231.053 88.8435 229.973 88.2337 229.782C87.6069 230.53 87.3698 229.388 86.6357 229.501C85.9248 229.647 84.9926 230.345 84.293 229.743C83.4799 229.416 82.2822 229.214 82.0343 228.257C81.193 227.971 80.5154 227.02 79.5499 227.442C78.6921 227.802 78.0479 227.144 77.3195 227.048C77.1444 227.318 76.9293 227.2 76.5402 227.077C76.5227 226.322 75.7435 226.322 75.2585 226.07C74.6876 225.546 74.2252 224.928 73.3782 224.775C72.9377 224.669 72.8751 224.556 72.9767 224.433C72.8982 224.455 72.8412 224.455 72.8412 224.41C72.2144 224.005 71.5035 223.741 70.8372 223.386C70.3064 223.645 69.6006 224.506 68.9626 223.977C68.4482 223.944 68.1608 223.482 67.7768 223.212C67.1382 222.672 66.512 223.673 65.9021 223.206C65.3538 222.857 64.7835 222.79 64.4397 223.431C63.8185 224.089 63.2149 223.414 63.0619 222.767C62.5424 222.272 62.5481 223.583 62.0004 223.009C61.3566 222.559 61.08 221.518 60.1257 221.665C59.3239 221.693 58.5729 221.411 57.8388 221.254C57.2793 221.321 57.6525 219.976 56.7716 220.123C56.19 220.072 55.6982 219.994 55.1449 220.241C55.303 219.549 55.9523 219.116 56.1725 218.452C56.6412 218.132 56.3532 217.474 56.0709 217.17C56.4385 217.023 57.0252 217.26 56.6186 216.663C56.5622 216.585 56.6915 216.438 56.6068 216.371C56.6248 216.308 56.6356 216.241 56.6412 216.179C56.1725 216.68 54.6994 216.556 55.0658 215.656C56.1725 214.981 54.823 213.817 54.6875 212.821C54.3092 211.904 53.2188 211.363 53.0839 210.266C52.1635 209.8 51.474 211.161 50.7518 211.487C49.5548 212.123 49.504 210.317 48.4932 210.582C47.7592 211.145 47.3978 210.47 46.8444 210.064C45.2182 210.176 47.5333 211.285 46.4096 211.893C45.4102 212.641 45.9353 211.065 45.0714 211.037C44.1793 211.212 43.5638 210.846 43.5581 210.075C43.3379 210.137 43.1064 210.412 42.8805 210.233C42.3836 209.861 41.7512 209.535 41.1188 209.777C40.4638 210.035 40.6332 209.304 40.5429 208.876C40.1476 208.393 40.1476 207.667 39.9556 207.15C39.5321 206.66 40.1758 206.261 40.5711 205.996C40.972 205.518 41.3221 205.045 41.7738 204.584C42.0392 204.106 42.7789 204.275 42.9935 203.701C43.3436 203.414 43.3492 202.976 43.5807 202.711C44.1736 202.278 44.9077 202.424 45.5627 202.221C46.1838 201.917 46.8506 202.171 47.4768 202.075C47.7936 201.439 47.0991 201.119 46.9918 200.533C46.7321 199.993 46.1843 199.537 46.382 198.975C46.382 198.705 46.5231 198.57 46.7264 198.508C47.0257 197.534 45.3261 197.67 45.0437 197.472C45.4898 196.573 46.094 196.033 46.8619 195.442C47.5056 194.66 48.0195 195.797 48.4712 195.684C49.6796 195.415 49.5215 193.766 50.5435 193.507C50.8936 194.66 51.622 193.659 52.2826 193.26C51.7631 192.731 52.8411 191.994 53.1296 192.591C53.8467 193.733 54.7389 192.951 55.1285 192.057C55.4052 193.254 55.8569 192.174 55.9811 191.555C56.1223 192.27 57.2742 193.165 57.7654 193.153C56.9529 194.042 58.9399 195.071 59.482 193.907C59.8829 194.228 61.0066 194.875 60.3967 195.493C60.6847 196.337 61.08 195.223 61.6384 195.55C61.5368 196.157 61.8592 196.934 62.6774 196.985ZM62.6774 196.985C62.6717 197.176 62.8129 197.35 62.9541 197.53C62.8129 197.362 62.6661 197.199 62.6774 196.985Z\" stroke=\"white\" stroke-width=\"1.77165\"/>\r\n            <path d=\"M32.8088 182.022C33.2323 181.526 33.3565 180.666 34.1075 180.536C34.7851 180.379 33.9156 179.625 33.8252 179.214C33.6445 178.904 33.0912 178.533 33.7179 178.365C33.334 177.886 32.9556 177.323 32.2668 177.38C31.7642 177.256 31.3407 176.992 31.0076 176.587C30.6575 176.238 29.9573 176.306 30.0138 175.608C30.0477 175.158 29.5621 175.04 29.3757 174.714C28.9861 174.702 28.1956 173.87 28.6755 173.763C29.4096 174.117 29.3701 172.846 30.0364 173.06C30.5446 172.632 30.9511 173.65 31.4311 173.257C31.6682 173.263 31.9223 173.504 32.0635 173.122C32.6902 173.1 32.933 172.413 32.6677 171.923C32.4587 171.418 32.1369 170.838 31.5835 170.894C31.2899 170.601 30.6518 170.574 30.5558 170.073C30.2679 169.808 30.3921 169.179 29.7992 169.421C29.3023 169.487 29.0821 170.028 28.6417 170.247C28.4271 170.152 28.1391 169.842 27.7947 170.05C27.1961 169.954 26.7557 169.487 26.2814 169.15C25.8749 169.179 25.5361 169.347 25.3271 169.622C25.4118 169.33 25.4175 169.015 25.4175 168.7C25.4288 168.272 25.8071 167.839 25.6038 167.422C25.3384 167.243 25.0222 166.798 24.7964 166.781C24.4011 167.062 23.9437 166.584 23.5485 166.781C23.0855 166.533 22.9895 165.83 22.4248 165.723C21.8771 165.645 21.6456 166.23 21.2221 166.443C20.9623 166.488 20.7647 166.652 20.5953 166.763C20.4372 167.017 19.9121 166.843 19.8895 167.298C19.8556 167.754 19.2684 167.867 19.1667 168.266C19.2119 168.687 18.9239 169.042 18.7263 169.397C18.4666 169.684 18.4383 170.342 18.0205 170.336C17.6139 169.931 17.6083 170.989 17.1622 170.775C16.7895 170.826 16.5863 171.354 16.6935 171.641C16.7387 171.709 16.75 171.776 16.75 171.85C16.7444 171.815 16.7387 171.782 16.7218 171.754C16.6314 171.405 16.1458 171.298 16.1515 170.853C16.2757 170.415 15.6885 170.195 15.6602 169.751C15.4118 169.402 15.7957 169.183 15.8014 168.884C15.5529 168.451 16.2305 168.277 16.1741 167.928C15.8522 167.596 15.7393 167.146 15.6885 166.702C15.7788 166.173 15.1577 165.964 14.7737 166.167C14.5479 165.863 14.1865 166.195 13.9211 165.892C13.4807 165.959 13.204 165.678 12.9951 165.346C12.8991 165.486 12.7014 165.593 12.5264 165.672C12.0916 165.745 12.3683 166.207 12.0295 166.358C11.6681 166.448 11.6907 166.989 11.3124 167.174C11.0413 166.96 10.5557 167.05 10.2565 166.797C9.93462 166.775 9.61277 166.792 9.29656 166.848C9.36997 167.011 9.43772 167.169 9.50548 167.326C9.35867 168.682 9.21186 170.033 9.09328 171.388C9.00858 171.731 8.85048 172.057 8.73755 172.395C8.59639 172.604 8.86177 172.502 8.98035 172.508H8.99165C8.89001 172.53 8.78837 172.542 8.69238 172.53C8.42699 173.29 8.13337 174.038 7.77764 174.764C7.58001 175.332 7.15087 175.765 6.80078 176.243C6.61445 176.761 6.48457 177.301 6.31518 177.824C6.08367 178.353 5.76746 178.843 5.49643 179.349C5.56419 179.709 5.72229 180.069 5.81828 180.429C5.59242 181.43 5.3722 182.432 5.14634 183.434C5.2875 184.598 5.45125 185.768 5.6263 186.933C5.55854 187.237 5.41173 187.534 5.31574 187.838L5.36091 187.833C5.24233 187.905 5.23104 188.114 5.16328 188.255C4.67203 189.559 4.24854 190.888 3.66694 192.153C3.14181 193.357 2.5941 194.556 1.97862 195.72C1.91086 195.917 1.69065 196.097 1.80922 196.328C1.87134 196.586 1.90522 196.862 1.97862 197.11C2.13108 197.278 2.28354 197.442 2.43599 197.605H2.44164L2.43599 197.61C2.53198 197.735 2.69009 197.83 2.73526 197.976C2.79173 198.252 2.84819 198.527 2.90466 198.804C2.70138 199.225 2.48116 199.647 2.28354 200.069C2.31741 200.288 2.34 200.513 2.39082 200.727C2.8369 200.941 3.28862 201.161 3.74035 201.369C4.18643 201.481 4.6438 201.611 5.08987 201.723C5.42867 201.509 5.76746 201.296 6.10626 201.088C6.89113 201.425 7.69294 201.746 8.46087 202.134C8.83354 202.308 9.20621 202.488 9.57889 202.668V202.612C9.57889 202.634 9.58453 202.657 9.60147 202.678C10.296 202.251 10.9905 201.807 11.6907 201.374C12.453 201.386 13.2153 201.396 13.9776 201.408L13.9832 201.341C14.0566 201.543 14.3389 201.65 14.5309 201.763C15.4626 201.532 16.3943 201.296 17.326 201.059C17.6309 200.998 17.8963 200.845 18.2012 200.766C18.5061 200.637 18.8449 200.587 19.1272 200.412C19.3587 200.046 19.5733 199.664 19.7935 199.292C19.929 199 20.217 198.741 20.2057 198.409C20.1323 197.819 20.121 197.223 20.1436 196.626C20.1492 196.333 20.1323 196.035 20.2452 195.754C20.392 195.248 20.505 194.725 20.68 194.224C20.8946 193.796 21.1092 193.363 21.3237 192.935C21.4197 192.744 21.5101 192.552 21.6061 192.367C21.6964 192.052 22.0465 191.968 22.278 191.776C22.7749 191.286 23.3 190.814 23.7743 190.308C23.8816 189.796 23.9607 189.284 24.0567 188.778C24.2543 188.446 24.5084 188.136 24.7286 187.815C24.7512 188.114 24.7794 188.417 24.8077 188.721C24.898 189.267 24.7964 189.807 24.7286 190.353C24.8924 190.493 25.1069 190.595 25.2876 190.718C25.3836 190.943 25.378 191.23 25.4344 191.478C25.3441 191.657 25.1352 191.804 24.9827 191.956C25.1747 192.49 25.4175 193.014 25.6151 193.542C25.7337 193.626 25.8918 193.66 26.016 193.728C26.1515 193.644 26.1572 193.132 26.4847 193.025C26.9985 192.608 27.2074 191.962 27.5858 191.438C28.0488 190.933 28.5174 190.347 28.4666 189.622C28.444 188.975 29.1273 188.716 29.3701 188.21C29.2628 187.788 29.1103 187.017 29.7202 186.91C30.2171 186.708 30.9003 186.527 31.2108 186.082C30.9172 185.795 29.5621 185.734 30.234 185.256C30.8608 185.199 30.6067 184.681 30.6857 184.277C30.8325 183.731 31.4085 183.433 31.5666 182.937C30.4147 182.47 30.7704 181.942 31.8715 182.139C32.1821 182.128 32.4926 182.056 32.8088 182.022Z\" fill=\"#364FC7\" stroke=\"white\" stroke-width=\"1.77165\"/>\r\n            <path d=\"M76.5442 227.078C76.9508 227.235 77.1151 227.269 77.3234 227.049C77.9948 227.033 78.4584 227.792 79.2546 227.5C79.8757 227.33 80.7114 227.224 81.1744 227.82C81.9869 228.05 82.123 228.731 82.8006 229.176C83.3534 229.479 84.0321 229.536 84.5516 229.913C85.2343 230.172 85.9971 229.643 86.6346 229.502C87.3687 229.379 87.6171 230.543 88.2382 229.784C88.8085 229.891 89.0852 230.864 89.791 230.622C90.367 230.363 91.1462 230.391 91.7673 230.61C92.1344 230.554 92.603 230.638 92.9136 230.858C92.7329 230.509 92.6087 230.171 92.9757 229.867C94.1953 229.772 94.5398 228.703 94.9068 227.741C95.8893 227.342 95.4715 225.839 96.7696 225.918C96.7696 225.356 97.7753 224.855 96.917 224.484C97.1259 224.045 97.7069 224.709 98.0519 224.101C99.0119 224.883 99.7013 223.78 100.051 222.937C100.661 223.685 101.152 222.374 101.937 222.65C102.643 221.969 102.699 222.841 102.987 223.229C102.513 223.881 103.021 224.107 103.535 224.331C103.461 225.575 104.478 226.441 105.522 226.852C106.449 226.807 106.782 227.622 106.432 228.365C106.889 229.147 107.493 230.126 107.871 231.098C108.092 231.267 108.267 231.475 108.385 231.7L108.391 231.689C108.516 231.638 108.561 231.487 108.651 231.289C109.069 231.312 109.684 231.525 109.769 230.901C109.808 230.558 110.186 230.586 110.44 230.57C110.632 230.749 110.824 230.93 111.011 231.11C111.203 231.368 111.53 231.391 111.807 231.503C112.095 231.273 112.377 231.042 112.67 230.811C112.8 230.924 112.914 231.093 113.043 231.222C113.585 231.014 114.127 230.806 114.669 230.598C114.771 230.345 114.856 230.086 114.963 229.833C116.081 229.608 117.194 229.338 118.3 229.073C118.43 229.287 118.548 229.529 118.662 229.754C118.487 230.052 118.255 230.333 118.058 230.626C117.827 230.868 117.527 231.036 117.268 231.256C117.127 231.757 116.985 232.263 116.839 232.769C116.85 232.876 117.155 232.657 117.285 232.628C117.346 232.634 117.465 232.487 117.51 232.567C117.487 232.865 117.403 233.163 117.358 233.461C117.29 233.979 117.132 234.479 116.968 234.974C116.878 235.137 116.911 235.385 116.743 235.486C116.601 235.581 116.438 235.779 116.313 235.801L116.29 235.773C116.307 236.55 116.189 237.365 116.184 238.158C116.302 238.574 115.794 238.67 115.585 238.923C115.46 239.373 115.585 239.936 115.539 240.431C114.744 240.555 113.913 240.651 113.101 240.645C112.784 240.774 112.665 240.46 112.474 240.29C112.079 239.756 111.474 239.503 110.905 239.199C110.577 239.464 110.255 239.734 109.928 239.998C109.696 240.291 109.956 240.785 109.916 241.151C110.029 241.382 109.859 241.478 109.662 241.528C109.171 241.798 108.668 242.046 108.093 242.068C107.686 242.266 107.342 241.956 106.975 241.827C106.586 241.488 106.258 241.827 105.925 242.057C105.648 242.344 105.27 242.377 104.897 242.412C104.383 242.372 104.045 242.749 103.672 243.042C103.807 243.233 104.084 243.368 104.163 243.587L104.135 243.649C104.118 243.688 104.067 243.722 103.994 243.751L104.175 244.999C103.853 245.787 103.474 246.563 103.016 247.289C102.723 247.621 102.745 248.026 102.785 248.431C102.892 248.791 102.683 249.078 102.531 249.376C102.096 250.428 101.396 251.323 100.763 252.262C100.493 252.847 99.8436 253.05 99.3687 253.432C98.5788 253.842 98.1321 254.631 97.5505 255.272C97.4438 255.582 97.1327 255.339 96.9119 255.356C96.6183 255.638 96.1553 255.812 96.1728 256.279L96.1101 256.301C96.0881 256.318 96.0649 256.33 96.0429 256.346C96.1728 256.381 96.2004 256.532 96.0316 256.881C96.1157 257.19 96.24 257.5 96.0085 257.781C95.6527 258.619 95.2688 259.452 95.1615 260.369C95.0203 260.954 94.9588 261.573 94.7549 262.13C94.2744 262.884 93.8402 263.694 93.3314 264.415C92.7052 264.386 92.8464 264.82 93.0039 265.259C93.1903 265.601 92.7335 265.838 92.6375 266.136C92.406 266.575 92.0158 267.003 91.8808 267.447C92.101 267.965 92.175 268.578 92.6708 268.921C91.9706 268.932 91.2591 269.343 90.7453 269.101C90.2433 269.663 89.4472 268.279 89.3173 269.41C89.1473 269.989 88.4647 269.484 88.3636 270.288C87.9282 270.502 87.5443 270.553 87.4093 271.059C86.8785 271.149 86.5623 270.119 86.0711 270.873C85.817 270.091 84.7272 270.26 83.97 270.569C83.3715 270.918 83.0722 270.243 82.6719 270.958C82.18 270.552 82.2422 271.458 81.6097 271.132C81.7961 271.694 80.9999 271.936 80.6668 271.346C80.9943 271.987 80.2094 271.7 79.9327 272.308C79.1648 272.201 78.9107 273.264 78.0355 273.163C78.1151 272.061 77.7136 274.024 76.9683 273.512C76.2455 273.4 76.6408 274.682 75.8841 274.125C75.3364 274.682 74.8841 274.327 74.6018 273.855C74.6639 274.047 74.743 274.227 74.9293 274.362C74.8333 274.502 74.6921 274.626 74.6588 274.8C74.7774 274.834 75.2173 275.436 74.8389 275.532C74.4951 275.144 74.2579 275.362 74.2404 275.762C73.992 276.516 74.1162 275.341 73.6249 275.864C73.2466 275.346 73.1845 276.303 72.5634 276.139C72.7271 275.622 72.2133 275.903 72.0383 276.117C71.6537 275.447 71.1517 276.673 70.892 276.027C70.2935 275.824 70.8801 276.454 70.4403 276.595C69.8638 276.364 69.7627 276.719 69.6774 277.276C70.2935 277.214 69.1918 277.771 69.7847 277.732C69.6774 278.317 70.3381 277.754 70.1009 278.215C70.5188 278.413 70.0275 278.401 69.7904 278.603C69.6492 278.677 69.4516 278.508 69.0563 278.682C69.3048 279.166 68.4634 278.963 68.5199 279.318C67.9716 279.155 68.4973 279.768 68.1128 279.684C68.4126 280.167 67.3736 279.767 67.7288 280.246C67.4973 280.724 66.9891 280.578 66.9213 280.988C66.3736 280.882 65.8536 280.302 65.211 280.572C64.3804 280.477 63.4719 280.224 62.6017 280.184C61.9411 279.774 61.1511 279.842 60.5464 279.352C60.958 278.75 59.7785 278.958 59.5701 278.452C58.9038 278.159 58.5424 277.546 57.9778 277.135C57.5994 277.461 57.5317 277.09 57.1195 277.141C56.9947 276.741 57.2607 276.241 57.6102 275.914C57.5989 275.852 57.5938 275.808 57.5938 275.768C57.2883 276.213 56.3346 275.003 55.9111 274.749C55.2561 274.164 54.3075 274.468 53.5057 274.199C53.2968 274.665 52.574 274.896 52.3594 274.604C52.3024 274.722 52.2126 274.789 52.0545 274.756C51.2132 274.8 50.0274 275.532 50.2815 276.359C50.5638 277.603 49.0229 276.708 49.028 277.867C48.1465 277.783 47.1759 276.77 46.3227 277.366C45.3007 277.613 44.5949 276.05 43.5502 275.741C42.6186 276.517 41.1166 275.689 40.6818 277.018C40.4164 278.109 39.9026 277.417 39.6541 276.753C39.1968 275.915 38.5869 276.427 38.09 276.567C37.5254 276.432 36.8647 276.382 36.4412 276.393C35.662 276.849 36.029 275.527 35.2893 275.245C35.5378 274.868 35.2893 274.379 34.7077 274.452C34.4141 273.89 33.4203 274.261 32.754 274.069C33.1154 272.775 33.1549 271.431 33.3752 270.115C33.5897 269.338 33.4034 268.568 33.2905 267.797C32.9742 266.851 32.5959 265.907 32.0934 265.035C32.1894 264.472 32.4717 263.921 32.579 263.347C32.5959 262.616 32.771 261.918 33.0477 261.243C33.3526 260.664 33.2792 260.028 33.2509 259.403C33.0872 258.914 33.4824 258.571 33.6857 258.171C33.3639 257.553 33.1098 256.883 32.5564 256.422C32.7032 255.662 32.9065 254.892 32.9121 254.11C32.8783 253.345 33.2114 252.659 33.4542 251.95C33.7139 251.978 33.968 252.113 34.2165 252.113C34.8037 252.906 36.1024 251.905 36.1476 252.794C36.7631 253.862 37.7795 254.56 38.2481 255.55C39.3887 254.52 40.4842 255.562 41.5344 256.067C41.7829 255.173 42.5282 255.786 43.0929 255.505C42.6242 254.532 42.9178 252.602 44.0867 252.079C44.5723 251.528 44.081 249.8 45.583 249.913C46.5994 249.919 47.9376 250.369 48.7168 249.424C49.4396 250.16 49.7445 249.018 50.5407 249.373C51.1618 249.367 51.4159 249.632 51.5232 250.014C51.5345 249.885 51.5627 249.767 51.6135 249.677C52.613 249.536 53.4487 250.014 54.3295 250.476C54.3973 250.566 54.5949 250.431 54.6288 250.559V250.566C54.6119 250.307 54.6056 250.047 54.5718 249.778C54.233 248.996 55.4069 248.777 55.5938 248.175C55.6508 247.538 55.4871 246.909 55.5938 246.301C55.7412 245.491 56.4069 244.822 56.3956 243.978C56.1421 243.37 56.3623 242.683 56.3679 242.043C56.3623 241.851 56.3956 241.649 56.3335 241.463C56.3787 241.452 56.4238 241.447 56.4747 241.435C56.2883 241.413 56.1076 241.379 55.9326 241.317C55.255 240.664 54.5548 240.029 54.0692 239.207C53.1601 239.584 52.2623 239.46 51.6406 238.633C50.8281 238.121 51.1499 237.384 51.5678 236.754C51.923 236.316 51.6243 234.717 52.4876 235.286C53.2448 236.327 53.578 234.701 53.6401 234.099C53.1771 233.424 53.9444 233.559 54.3007 233.373C54.3854 232.76 54.967 232.355 54.9614 231.743C55.4752 231.084 56.7621 231.59 56.7965 230.544C57.3499 230.729 57.5531 229.425 57.9874 230.217C58.7101 230.314 59.4334 230.122 60.1048 229.993C61.1325 230.347 61.5334 229.166 62.4318 229.037C62.7361 229.189 63.0924 228.963 63.3459 229.042L63.3403 229.031L63.2838 228.958C63.9727 228.755 63.8316 227.906 63.8824 227.349C63.9614 226.859 63.7531 226.381 63.5775 225.954C63.4758 225.498 63.5041 224.992 63.2048 224.598C62.8999 224.154 62.4826 223.72 62.4318 223.153C62.4651 222.596 63.1376 222.517 63.25 223.091C63.2669 223.642 63.888 223.901 64.3177 223.547C64.6509 223.238 65.0399 222.613 65.5199 223.068C65.9722 223.231 66.4239 223.558 66.8525 223.136C67.2421 222.911 67.6769 223.209 67.9987 223.35C68.1963 223.727 68.5182 223.901 68.8852 223.929C69.3307 224.424 70.0202 223.968 70.4262 223.66C70.8722 223.052 71.4425 223.828 71.9733 223.924C72.2161 224.155 73.3059 224.351 72.6453 224.728C72.7576 224.695 72.8316 224.577 72.8988 224.52C73.2432 224.74 73.7063 224.976 74.1354 225.067C74.5419 225.19 74.8017 225.68 75.0665 226.006C75.3997 226.074 75.6481 226.163 75.9022 226.389C76.4217 226.276 76.4951 226.822 76.5233 227.216L76.5442 227.078Z\" fill=\"#5C7CFA\" stroke=\"white\" stroke-width=\"1.77165\"/>\r\n            <path d=\"M73.2697 50.9169C72.8344 50.5907 72.5521 50.0112 71.9422 49.9043C71.4623 49.9943 70.6379 49.5274 71.084 49.0211C71.1065 48.6048 72.0495 48.3967 71.4792 47.9635C71.2025 47.5078 70.3273 47.8791 70.6768 47.1027C70.4007 46.4445 70.1692 47.7891 69.8982 48.0366C70.0337 48.7567 69.1528 48.5823 68.9891 49.1336C68.9772 49.5949 68.2437 49.3755 68.4244 49.8931C67.7694 50.4444 67.3177 49.4712 66.849 49.2518C66.5724 48.9705 66.4538 48.6048 66.0416 48.9086C66.0529 49.4374 65.4538 49.6455 65.2511 49.0942C64.9292 49.0211 64.4436 48.5542 64.2465 48.6892C64.2742 48.8523 64.4323 49.1055 64.4893 49.2743C64.3363 48.9873 64.2686 48.6667 64.0088 48.5035C63.5176 48.5035 63.7604 47.9353 63.3877 47.7666C63.0828 47.8341 63.0094 47.3728 63.1788 47.1815C63.6474 46.7933 62.9416 46.7314 62.6649 46.602C62.3092 46.4614 62.36 46.0001 62.3431 45.6851C62.168 45.3869 61.8236 45.2744 61.5531 45.4769C61.4459 45.1225 61.2827 44.6612 60.8247 44.8693C60.5255 44.8525 60.198 44.6724 59.893 44.8075C59.893 44.875 59.8592 44.9312 59.8196 44.9818C59.4583 45.1562 59.9834 45.8594 59.5599 45.8032C59.2493 45.7526 58.8597 45.7751 58.5661 45.9045C58.0974 46.0339 58.2217 46.6471 57.7699 46.7427C57.6796 46.9733 57.5554 47.1196 57.2787 47.0296C57.0924 47.0015 56.5847 47.4234 56.731 47.0127C56.9625 46.5964 56.2341 46.7989 56.273 47.0409C56.2115 47.1365 56.2058 47.2096 56.2392 47.2771C56.194 47.2265 56.1601 47.2209 56.1099 47.3728C56.0647 47.5247 55.8891 47.4909 55.8157 47.5922C55.7874 47.5528 55.6463 47.6428 55.5108 47.6822C54.9348 47.7497 55.3583 46.9508 55.1488 46.7708C54.8608 46.9452 54.4718 46.7033 54.3532 47.069C54.0088 47.3278 53.557 47.4853 53.1166 47.519C52.8908 47.204 52.5638 47.474 52.2696 47.5978C51.9308 47.3446 52.4452 46.7933 52.6028 46.4895C53.0381 46.3995 52.2753 46.5627 52.1793 46.3939C51.7219 46.0114 51.7953 46.8271 51.4119 46.8721C51.2538 47.2715 50.836 47.339 50.5361 47.5359C50.0059 47.7722 49.9099 47.024 49.4915 46.889C49.1928 47.0915 48.8365 46.8158 48.583 47.0465C48.2775 47.3559 47.5152 46.889 47.4757 47.4571C47.0245 47.5415 46.8043 47.9185 46.928 48.4135C46.9054 48.4585 46.8659 48.4923 46.8376 48.5317L46.8602 48.5486C46.7586 48.5317 46.6287 48.571 46.5101 48.5317C46.2109 48.3741 45.8777 48.8017 45.6462 48.4585C45.4034 48.1772 45.1211 48.7286 44.8501 48.5767C44.5903 48.3967 44.2628 48.6386 44.0087 48.4023C43.7151 48.5485 43.3311 48.3854 43.0545 48.5879C43.0488 48.8411 42.7778 48.948 42.6084 48.7342C42.6084 48.5091 42.4841 48.1041 42.3373 47.9466C42.3373 47.806 42.4051 47.4122 42.2865 47.294C42.2809 47.1646 42.2752 47.0409 42.2696 46.9171C42.1002 46.6752 42.1171 46.5571 42.1171 46.2758C42.0607 46.242 42.0042 46.2026 41.9534 46.1632C42.0268 46.2083 42.1058 46.2364 42.1792 46.2364C42.4841 45.9832 42.7891 45.8032 43.1843 45.7582C43.5683 45.7076 43.6191 45.2631 43.2464 45.145C43.077 44.8918 42.9246 44.6218 42.6084 44.8243C42.2075 44.7512 41.8913 44.498 41.5412 44.3068C41.129 44.4024 40.8184 44.1099 40.8636 43.7105C40.7394 43.3729 40.5135 43.0691 40.2481 42.8216C40.0053 42.6359 39.6213 42.4897 39.3334 42.6472C39.0849 42.8385 38.6897 43.0072 38.6332 42.5572C38.4073 42.1803 37.9669 42.1234 37.5942 42.2253C37.1143 42.169 37.0578 41.2914 36.5666 41.5277C36.3181 41.4545 36.0979 41.2745 35.8212 41.2858C35.6518 41.2126 35.6066 41.3139 35.6123 41.4714C35.5106 42.1634 35.409 42.861 35.2566 43.5473C35.2001 43.8342 35.1267 44.1155 35.0872 44.4024C35.4147 45.2631 35.7478 46.1295 36.081 46.9959L36.5383 48.5092L36.9618 48.3516L36.9392 48.7229V48.7398L37.0522 50.3319V50.3375V50.3432L37.0578 50.36L37.4926 52.0927L37.5321 52.9028C37.566 53.5048 37.5999 54.1011 37.6225 54.6974C37.7806 55.0181 37.9725 55.3219 38.1363 55.6369C38.0968 55.9238 38.0572 56.2051 38.0121 56.492C38.1815 56.8633 38.3847 57.2178 38.5711 57.589C38.7744 57.9378 39.0228 58.2641 39.243 58.6017C39.3051 58.6804 39.356 58.8267 39.4237 58.8604L39.4124 58.8722C39.5254 59.0523 39.6383 59.2323 39.7512 59.4123C39.8246 59.598 39.8641 59.7949 39.9206 59.9861C40.0674 60.5037 40.2142 61.0213 40.3554 61.5388C40.3667 61.8201 40.2989 62.1183 40.2763 62.4052C40.3667 62.9002 40.4796 63.3897 40.5813 63.8791C40.6434 64.3967 40.6377 64.9199 40.6773 65.4374C40.8128 65.9269 40.9765 66.405 41.1233 66.8945C41.2363 67.1026 41.1798 67.3333 41.1629 67.5583C41.1403 67.7215 41.3944 67.4627 41.496 67.4402C41.8066 67.0801 42.3317 67.2377 42.6818 66.9564C43.2182 66.9339 42.8963 67.9127 43.3989 67.6708C43.7829 67.7046 44.0821 67.4627 44.4435 67.5639C44.9009 67.7215 45.0872 67.4346 45.0929 67.0126C45.2171 66.6976 45.4994 66.2025 45.8947 66.3207C46.0358 66.1069 46.2109 66.0394 46.2278 66.3488C46.3125 66.7201 46.6005 67.0182 46.7642 67.3445C47.1821 67.4683 47.2555 68.2784 47.7524 67.8902C48.1595 67.6933 48.5773 67.4008 48.487 66.9057C48.1595 66.6863 48.3571 66.4669 48.4751 66.2307C48.7405 65.8594 48.3221 65.6962 48.0065 65.7131C47.6852 65.3868 48.43 65.5106 48.5937 65.3643C48.8817 65.685 49.3108 65.5218 49.4243 65.1393L49.4068 65.0661C49.356 64.9874 49.3052 64.8805 49.2493 64.768C49.4017 65.0436 49.548 65.3137 49.797 65.5274C49.9382 65.91 50.723 66.1688 50.4746 66.5626C50.2939 67.0183 50.7733 67.0633 51.0957 67.0914C51.2205 67.4796 51.9997 67.7383 51.6265 68.1715C51.8518 68.239 52.2984 68.419 52.5186 68.2615C52.5305 67.9015 52.6028 67.3727 52.4114 67.007C51.9263 66.9001 51.7564 66.4219 51.8755 65.955C51.8015 65.2012 52.5977 65.9213 52.9986 65.685C52.9252 65.5725 52.8693 65.4543 52.8405 65.3418C52.9478 65.6113 53.2363 65.8256 53.5243 65.9494C53.897 66.5851 54.6141 66.1463 54.823 65.6062C55.2296 65.0549 56.2228 65.3193 56.364 64.4529C56.6068 64.2335 56.5729 63.9748 56.5791 63.7216C56.613 63.8904 56.7423 64.0254 56.9455 64.0648C57.1375 64.5373 57.5554 65.0549 58.0805 64.6667C58.5322 64.4586 59.1138 64.4979 59.3628 63.9691C60.0517 64.2223 60.0687 63.0521 60.7745 63.114C61.3273 62.9678 61.757 63.5528 62.2928 63.4178C62.8518 63.4459 63.4391 63.9073 63.9868 63.4403C64.4555 63.2041 64.7271 62.709 65.2629 62.6077L65.2691 62.6021V62.6077C65.6644 62.8102 65.9919 63.204 66.4662 63.1422C67.0139 63.2378 67.5159 63.1984 67.9959 62.9396C68.4589 62.9565 68.7644 62.5346 69.2217 62.5177C69.9213 62.4952 70.1873 61.6007 70.8931 61.6007C71.3674 61.5951 71.6441 60.9144 72.1692 61.28C72.5645 61.4544 73.3719 61.567 73.2251 60.9088C72.9428 60.3968 73.5583 60.0649 73.6368 59.6655C73.4956 59.2548 74.3144 59.1085 73.9135 58.6303C73.8231 58.1634 74.5521 57.7302 74.2127 57.1789C74.32 56.7514 73.7271 56.3857 74.1167 55.9975C74.3872 55.5081 74.7096 54.9793 74.6588 54.3942C74.6193 54.1242 73.9925 53.8766 73.9812 54.0679C73.9693 54.096 73.9643 54.1242 73.953 54.1523C73.9925 53.916 73.6989 53.7079 73.936 53.4491C73.761 53.044 73.4956 52.7459 73.0891 52.5265C73.1794 51.992 72.259 51.7445 72.9597 51.3338C73.0772 51.2095 73.2472 51.1026 73.2697 50.9169Z\" fill=\"#364FC7\" stroke=\"white\" stroke-width=\"1.77165\"/>\r\n            <path d=\"M60.7203 18.0106C60.6243 17.6955 60.556 17.3636 60.4436 17.0542C60.2516 16.8573 59.9637 16.7167 59.9693 16.4073C59.8445 16.1541 59.9405 15.9403 60.1048 15.7378C60.1494 15.5634 60.46 15.3496 60.3527 15.1977L60.4035 15.2427C60.6915 14.7758 60.9456 14.2864 61.3465 13.8982C61.7135 13.5213 61.8948 13.015 62.1771 12.5705C62.2443 12.2386 62.3121 11.9011 62.3798 11.5692C62.6565 11.5073 62.9501 11.4792 63.2155 11.406C63.3906 11.0797 63.5707 10.7534 63.7457 10.4328C64.1466 10.3428 64.5583 10.2978 64.9547 10.1852C65.1862 10.0502 65.4453 9.93209 65.6605 9.78019C65.6543 9.18949 65.6661 8.58192 65.643 7.99123C65.3951 7.55242 65.1805 7.07987 64.9151 6.65794C64.6272 6.40478 64.3505 6.11787 64.0625 5.88159C63.7802 6.01661 63.543 6.29788 63.2037 6.22475C63.0004 6.25288 62.7463 6.13474 62.5938 6.33164C62.2607 6.56792 61.9219 6.80419 61.5887 7.04666C61.4645 6.70912 61.2556 6.39409 61.3064 6.0228C61.29 5.57274 61.3183 5.11706 61.2725 4.667C61.1703 4.31821 61.0072 3.96379 60.9394 3.60937C61.0072 3.33934 61.1427 3.07493 61.1765 2.8049C60.9902 2.5118 60.8321 2.18043 60.6288 1.9104C60.2669 2.28732 59.9174 2.6755 59.556 3.05805C59.2172 2.96241 58.8784 2.82177 58.5396 2.74864C58.4267 3.0468 58.3702 3.36746 58.2742 3.67125C57.9298 3.65943 57.5797 3.60375 57.2353 3.615C56.8338 3.98067 56.4555 4.38008 56.0376 4.72325C55.7722 4.80763 55.5018 4.89203 55.2358 4.97641C55.1178 5.30833 54.9252 5.62337 54.8411 5.96091C54.7903 5.84277 54.5588 5.84278 54.4289 5.77527C54.1353 5.68526 53.8417 5.57274 53.5537 5.49398C53.2595 5.76964 52.9665 6.0453 52.6728 6.31533C52.4125 6.20282 52.1533 6.07341 51.8987 5.97215C51.5435 6.1803 51.1872 6.39408 50.8315 6.60786C50.6282 6.43909 50.4306 6.25344 50.2222 6.09592C49.7084 6.04529 49.1889 5.97217 48.6751 5.93279C47.9749 6.03405 47.2747 6.12405 46.574 6.19156C46.5401 6.45597 46.5853 6.73163 46.5796 7.00166C46.2352 7.21544 45.8908 7.42359 45.5463 7.63174C45.1002 7.65424 44.6598 7.67112 44.2137 7.688C43.9145 7.59236 43.6208 7.46297 43.3272 7.35045C42.819 7.55298 42.3221 7.78364 41.8139 7.99179C41.509 8.31246 41.2098 8.64436 40.9048 8.96503C40.7919 9.50509 40.7185 10.062 40.6225 10.6077C40.3515 10.8046 40.0804 11.0015 39.8094 11.1984L39.8376 11.2491C39.7868 11.2097 39.7304 11.2266 39.6513 11.3166C39.4876 11.4403 39.3238 11.5641 39.1205 11.6091C38.6575 11.7666 38.1888 11.9185 37.7315 12.0873C37.4322 12.363 37.1216 12.6274 36.8337 12.9086C36.845 13.3081 36.8676 13.7131 36.8845 14.1182C36.5175 14.4051 36.1053 14.647 35.7947 14.9958C35.6592 15.1252 35.5293 15.2546 35.3994 15.384L35.439 15.4515C35.4164 15.4233 35.3882 15.4121 35.3656 15.4177C35.2639 15.5415 35.1397 15.6202 34.9816 15.6315C34.575 15.7159 34.1685 15.789 33.7676 15.8846C33.2425 16.6272 32.7343 17.3867 32.1978 18.118C32.0454 18.2531 31.8703 18.3712 31.7292 18.5174C31.6953 18.8437 31.6953 19.1813 31.6501 19.5019C31.5033 19.8057 31.3226 20.0983 31.2153 20.4077C31.4186 20.8746 31.6275 21.3472 31.8365 21.8141C31.7122 22.0054 31.588 22.1911 31.4638 22.3823C31.4073 22.5398 31.5033 22.7367 31.4977 22.9055C31.5203 23.2037 31.6219 23.5075 31.4751 23.7888C31.3565 24.1826 31.1984 24.5707 31.1024 24.9645C31.2775 25.589 31.3622 26.2472 31.6671 26.8322C31.8591 27.2542 32.0172 27.7042 32.2374 28.1149C32.5705 28.5087 32.9545 28.8856 33.265 29.2907C33.4344 30.3089 33.5756 31.3384 33.7619 32.351C33.9144 32.6942 34.0669 33.043 34.2193 33.3862C34.6541 33.2737 35.0607 33.0599 35.4898 32.9305C35.8455 32.8742 36.5909 33.1443 36.5401 32.4804C36.828 32.1316 37.116 32.8905 37.5113 32.5142C37.6976 32.2273 37.9517 31.3778 38.5163 31.8785C38.8326 31.4284 39.4311 31.3159 39.9562 31.4228C40.391 31.164 40.775 31.5635 40.9274 31.8729C41.7631 32.0079 40.8484 30.984 41.3735 30.6802C41.3396 30.5621 41.3283 30.4327 41.3283 30.3033C41.334 30.3933 41.3453 30.4833 41.3679 30.5621L41.3735 30.6802C41.8309 30.6465 41.9607 31.029 42.068 31.254C42.74 31.2203 43.1014 32.1879 43.6265 31.4228C44.3492 30.9221 44.3662 32.2273 44.8744 32.4129C45.1906 32.7336 45.7609 32.2442 45.8456 31.9798C45.7665 31.3778 46.303 30.7871 45.8173 30.2527C45.2075 29.842 46.111 29.6619 46.0714 29.2063C47.0257 29.5494 46.6643 28.3231 46.8394 27.828C46.9918 27.3723 47.1556 26.7929 46.8733 26.5172C47.3701 26.3428 47.5847 25.3077 48.1155 25.7071C48.2341 26.0503 48.155 26.5903 48.7197 26.3147C48.9512 26.2415 49.2499 26.1853 49.2222 26.0615L49.2668 26.084C49.6847 26.1909 49.5943 25.4539 49.967 25.2852C50.5096 24.9645 51.0455 24.4301 51.7513 24.6607C52.1805 24.5538 52.7395 24.5876 53.0105 24.07C53.3041 24.0082 53.705 24.7676 54.2014 24.4976C54.6593 24.1263 55.2064 24.2669 55.5966 24.6157L55.7152 24.6045C56.4041 24.6438 56.6582 23.8 57.3188 23.7662C57.8445 23.4624 58.482 23.3724 58.9168 22.9786C59.5831 23.0799 59.7355 22.1686 60.255 21.9942C60.6221 21.5891 61.1811 21.5328 61.582 21.8535C62.0055 22.101 62.0902 21.5778 62.1918 21.2965C62.2714 20.7508 62.2765 20.1827 62.3273 19.6314C62.3047 19.457 62.4233 19.2488 62.3273 19.0913C62.0224 18.7031 61.9546 18.208 61.7852 17.7636C61.3843 17.8311 60.9772 17.9549 60.5769 18.0393H60.5882C60.635 18.0275 60.6751 18.0162 60.7203 18.0106Z\" fill=\"#4C6EF5\"/>\r\n            <path d=\"M41.3735 30.6802C40.8484 30.984 41.7631 32.0079 40.9274 31.8729C40.775 31.5635 40.391 31.164 39.9562 31.4228C39.4311 31.3159 38.8326 31.4284 38.5163 31.8785C37.9517 31.3778 37.6976 32.2273 37.5113 32.5142C37.116 32.8905 36.828 32.1316 36.5401 32.4804C36.5909 33.1443 35.8455 32.8742 35.4898 32.9305C35.0607 33.0599 34.6541 33.2737 34.2193 33.3862C34.0669 33.043 33.9144 32.6942 33.7619 32.351C33.5756 31.3384 33.4344 30.3089 33.265 29.2907C32.9545 28.8856 32.5705 28.5087 32.2374 28.1149C32.0172 27.7042 31.8591 27.2542 31.6671 26.8322C31.3622 26.2472 31.2775 25.589 31.1024 24.9645C31.1984 24.5707 31.3565 24.1825 31.4751 23.7888C31.6219 23.5075 31.5203 23.2037 31.4977 22.9055C31.5033 22.7367 31.4073 22.5398 31.4638 22.3823C31.588 22.1911 31.7122 22.0054 31.8365 21.8141C31.6275 21.3472 31.4186 20.8746 31.2153 20.4077C31.3226 20.0983 31.5033 19.8057 31.6501 19.5019C31.6953 19.1813 31.6953 18.8437 31.7292 18.5174C31.8703 18.3712 32.0454 18.2531 32.1978 18.118C32.7343 17.3867 33.2425 16.6272 33.7676 15.8846C34.1685 15.789 34.575 15.7159 34.9816 15.6315C35.1397 15.6202 35.2639 15.5415 35.3656 15.4177C35.3882 15.4121 35.4164 15.4233 35.439 15.4515L35.3994 15.384C35.5293 15.2546 35.6592 15.1252 35.7947 14.9958C36.1053 14.647 36.5175 14.4051 36.8845 14.1182C36.8676 13.7131 36.845 13.3081 36.8337 12.9086C37.1216 12.6274 37.4322 12.363 37.7315 12.0873C38.1888 11.9185 38.6575 11.7666 39.1205 11.6091C39.3238 11.5641 39.4876 11.4403 39.6513 11.3166C39.7304 11.2266 39.7868 11.2097 39.8376 11.2491L39.8094 11.1984C40.0804 11.0015 40.3515 10.8046 40.6225 10.6077C40.7185 10.062 40.7919 9.50509 40.9048 8.96503C41.2098 8.64436 41.509 8.31246 41.8139 7.99179C42.3221 7.78364 42.819 7.55298 43.3272 7.35045C43.6208 7.46297 43.9145 7.59236 44.2137 7.688C44.6598 7.67112 45.1002 7.65424 45.5463 7.63174C45.8908 7.42359 46.2352 7.21544 46.5796 7.00166C46.5853 6.73163 46.5401 6.45597 46.574 6.19156C47.2747 6.12405 47.9749 6.03405 48.6751 5.93279C49.1889 5.97217 49.7084 6.04529 50.2222 6.09592C50.4306 6.25344 50.6282 6.43909 50.8315 6.60786C51.1872 6.39408 51.5435 6.1803 51.8987 5.97215C52.1533 6.07341 52.4125 6.20281 52.6728 6.31533C52.9665 6.0453 53.2595 5.76964 53.5537 5.49398C53.8417 5.57274 54.1353 5.68526 54.4289 5.77527C54.5588 5.84278 54.7903 5.84277 54.8411 5.96091C54.9252 5.62337 55.1178 5.30833 55.2358 4.97641C55.5018 4.89203 55.7722 4.80763 56.0376 4.72325C56.4555 4.38008 56.8338 3.98067 57.2353 3.615C57.5797 3.60375 57.9298 3.65943 58.2742 3.67125C58.3702 3.36746 58.4267 3.0468 58.5396 2.74864C58.8784 2.82177 59.2172 2.96241 59.556 3.05805C59.9174 2.6755 60.2669 2.28732 60.6288 1.9104C60.8321 2.18043 60.9902 2.5118 61.1765 2.8049C61.1427 3.07493 61.0072 3.33934 60.9394 3.60937C61.0072 3.96379 61.1703 4.31821 61.2725 4.667C61.3183 5.11706 61.29 5.57274 61.3064 6.0228C61.2556 6.39409 61.4645 6.70912 61.5887 7.04666C61.9219 6.80419 62.2607 6.56792 62.5938 6.33164C62.7463 6.13474 63.0004 6.25288 63.2037 6.22475C63.543 6.29788 63.7802 6.01661 64.0625 5.88159C64.3505 6.11787 64.6272 6.40478 64.9151 6.65794C65.1805 7.07987 65.3951 7.55242 65.643 7.99123C65.6661 8.58192 65.6543 9.18949 65.6605 9.78019C65.4453 9.93209 65.1862 10.0502 64.9547 10.1852C64.5583 10.2978 64.1466 10.3428 63.7457 10.4328C63.5707 10.7534 63.3906 11.0797 63.2155 11.406C62.9501 11.4792 62.6565 11.5073 62.3798 11.5692C62.3121 11.9011 62.2443 12.2386 62.1771 12.5705C61.8948 13.015 61.7135 13.5213 61.3465 13.8982C60.9456 14.2864 60.6915 14.7758 60.4035 15.2427L60.3527 15.1977C60.46 15.3496 60.1494 15.5634 60.1048 15.7378C59.9405 15.9403 59.8445 16.1541 59.9693 16.4073C59.9637 16.7167 60.2516 16.8573 60.4436 17.0542C60.556 17.3636 60.6243 17.6955 60.7203 18.0106C60.6751 18.0162 60.635 18.0275 60.5882 18.0393H60.5769C60.9772 17.9549 61.3843 17.8311 61.7852 17.7636C61.9546 18.2081 62.0224 18.7031 62.3273 19.0913C62.4233 19.2488 62.3047 19.457 62.3273 19.6314C62.2765 20.1827 62.2714 20.7508 62.1918 21.2965C62.0902 21.5778 62.0055 22.101 61.582 21.8535C61.1811 21.5328 60.6221 21.5891 60.255 21.9942C59.7355 22.1685 59.5831 23.0799 58.9168 22.9786C58.482 23.3724 57.8445 23.4624 57.3188 23.7662C56.6582 23.8 56.4041 24.6438 55.7152 24.6044L55.5966 24.6157C55.2064 24.2669 54.6593 24.1263 54.2014 24.4976C53.705 24.7676 53.3041 24.0082 53.0105 24.07C52.7395 24.5876 52.1805 24.5538 51.7513 24.6607C51.0455 24.4301 50.5096 24.9645 49.967 25.2852C49.5943 25.4539 49.6847 26.1909 49.2668 26.084L49.2222 26.0615C49.2499 26.1853 48.9512 26.2415 48.7197 26.3147C48.155 26.5903 48.2341 26.0503 48.1155 25.7071C47.5847 25.3077 47.3702 26.3428 46.8733 26.5172C47.1556 26.7929 46.9918 27.3723 46.8394 27.828C46.6643 28.3231 47.0257 29.5494 46.0714 29.2063C46.111 29.6619 45.2075 29.842 45.8173 30.2527C46.303 30.7871 45.7665 31.3778 45.8456 31.9798C45.7609 32.2442 45.1906 32.7336 44.8744 32.4129C44.3662 32.2273 44.3492 30.9221 43.6265 31.4228C43.1014 32.1879 42.74 31.2203 42.068 31.254C41.9607 31.029 41.8309 30.6465 41.3735 30.6802ZM41.3735 30.6802C41.3396 30.5621 41.3283 30.4327 41.3283 30.3033C41.334 30.3933 41.3453 30.4833 41.3679 30.5621L41.3735 30.6802Z\" stroke=\"white\" stroke-width=\"1.77165\"/>\r\n            <path d=\"M45.8168 32.1952C45.7208 31.6833 46.0878 31.1882 46.0201 30.6819C45.7942 30.2994 45.3142 29.7537 45.9805 29.5399C46.0201 29.1461 46.2346 29.2192 46.5678 29.2474C46.9913 28.7917 46.6073 28.1222 46.8896 27.599C46.9913 27.2502 47.251 26.7833 46.8049 26.5751C47.2284 26.3276 47.5107 25.7819 47.8721 25.5794C48.4599 25.6131 47.9292 26.6145 48.6288 26.3445C49.0641 26.187 49.7304 26.1251 49.7191 25.5344C50.1364 25.1912 50.5599 24.7468 51.1138 24.6905C51.4695 24.4543 51.9213 24.8706 52.2268 24.5049C52.7626 24.8312 53.0116 23.5429 53.3674 24.2686C53.7344 24.668 54.2877 24.5218 54.6994 24.2742C55.2584 24.2067 55.6537 24.6061 55.7446 25.1237C55.7276 24.9774 55.6937 24.8312 55.609 24.6849C56.0839 24.5893 56.6254 24.1898 57.0433 23.8073C57.6136 23.5935 58.3137 23.481 58.7485 23.0366C59.3646 23.0647 59.7429 22.5078 60.076 22.0521C60.4606 21.9621 60.6689 21.4783 61.0981 21.692C61.3922 21.6189 62.058 22.249 62.1207 21.512C62.137 21.2364 62.3183 21.197 62.5605 21.2645C62.8491 21.2763 63.0744 21.5064 63.3347 21.602C63.5266 21.6977 63.713 21.8496 63.927 21.7314C64.2545 21.6583 64.5713 21.5345 64.9095 21.5964C65.2088 21.6077 65.5137 21.6752 65.7853 21.5233C66.0444 21.4389 66.3047 21.3264 66.5645 21.2589C66.7734 21.3489 66.9818 21.4276 67.1009 21.1745C67.2985 20.9832 67.276 21.6752 67.4171 21.7708C67.5526 22.2434 66.7954 22.1365 66.7734 22.6653C66.5131 22.9747 66.6887 23.4754 66.6035 23.8804C67.0157 24.5274 66.0106 24.8031 65.9772 25.3938C65.9208 25.9676 65.87 26.5751 65.5876 27.1152C65.4583 27.7903 64.6785 27.7453 64.3567 28.2629C64.3228 28.4766 64.1929 28.5779 64.0292 28.6454C64.2726 28.6285 64.5261 28.6679 64.7519 28.6623C65.3561 28.8085 65.8756 28.066 66.4007 28.5723C66.9259 28.6229 67.3719 28.3022 67.8406 28.1335C68.4222 27.9928 68.3482 28.7242 68.8677 28.7242C69.1111 28.6679 69.3144 28.9098 69.591 28.8704C69.822 29.1011 70.5792 29.3599 69.9914 29.7705C69.6249 30.1081 69.2974 30.5469 69.5114 31.042C69.1676 31.4695 69.7774 32.1165 69.3703 32.4146C69.0823 32.5778 69.246 32.9547 69.1275 33.1684L69.1947 33.146C69.4098 33.461 69.4657 33.8154 69.9236 33.8323C70.2788 33.5397 70.9733 33.4666 71.0981 34.0404C71.2901 34.5411 71.6966 33.9561 71.9841 34.2711C72.4075 33.8885 72.7859 34.5411 73.2319 34.4117C73.5594 34.8449 73.8644 34.3555 74.1077 34.2486C74.5312 34.6705 75.1015 34.1586 75.3387 33.7704C75.8294 33.731 75.6091 32.9265 76.0558 32.9941C76.5866 33.326 76.8576 33.9167 77.2139 34.4117C77.5182 34.7887 77.8237 35.5988 77.2359 35.8575C77.4002 36.527 76.3099 36.0826 76.4685 36.7576C77.0671 36.7745 76.2082 36.977 76.4516 37.2865C76.237 37.5509 75.9208 37.7253 75.6667 37.9615C75.0061 37.9672 75.6323 38.856 75.136 38.9854C74.7294 39.0136 74.1704 39.0248 73.9163 38.9404C73.8429 39.413 74.0185 39.9924 73.4539 40.2737C73.0016 40.0205 72.5273 40.2062 72.3584 40.6956C72.0371 40.8306 72.0817 41.0051 72.093 41.3145C72.1213 41.8208 71.6752 42.1189 71.94 42.6084C71.9118 42.6196 71.8835 42.6252 71.861 42.6309C72.0755 42.7597 71.8666 43.2947 71.9733 43.5703C71.7362 43.7447 71.3471 44.0823 71.0755 44.3749C70.5956 44.5886 71.1715 45.1568 70.7542 45.3368C70.5284 45.1568 70.4041 45.2525 70.5001 45.5337C70.1613 45.5844 70.2974 46.0963 70.5905 45.7925C70.844 45.9444 70.7091 46.5632 70.534 46.8389C70.4318 47.0358 70.2172 47.3058 70.1557 47.5702C69.783 47.8797 70.0422 48.5829 69.5007 48.6954C68.9129 48.701 69.0829 49.6236 68.4329 49.5336C68.5289 49.8205 68.3657 50.0062 68.1054 50.0512C67.6204 50.0849 67.2754 49.6517 67.0382 49.2917C66.6718 49.3255 66.6085 48.6672 66.3098 48.8079C65.8355 48.7966 66.1009 49.5561 65.5475 49.4436C65.3381 48.9541 64.7169 48.9598 64.3561 48.5941C64.1867 48.7179 64.1579 48.6729 64.0117 48.5041C63.5266 48.5153 63.7638 47.9528 63.4188 47.8009C62.9727 47.7896 63.0461 47.1989 63.3347 46.957C63.3798 46.912 63.4527 46.8839 63.5323 46.8614C63.3968 46.8614 63.2663 46.8333 63.154 46.7714C62.7017 46.6926 62.2725 46.4057 62.3465 45.8938C62.4137 45.3368 61.7474 45.3762 61.5159 45.4043C61.4544 44.9768 61.1828 44.7011 60.7485 44.8643C60.3702 44.808 60.0258 44.7236 59.67 44.718C59.7604 44.7293 59.8394 44.7574 59.8959 44.808C59.6864 45.1343 59.6582 45.3087 59.7316 45.6969C59.4611 45.9444 58.5458 45.5787 58.224 46.175C58.1449 46.6082 57.7333 46.7376 57.5351 47.0527C57.2471 46.8333 56.7615 47.4183 56.7107 47.0639C57.0212 46.6251 56.2928 46.7545 56.2815 47.0077C56.2815 47.5309 55.1522 48.0597 55.1805 47.2777C55.3335 46.9064 55.1743 46.6082 54.7852 46.867C54.3453 46.7939 54.1415 47.4183 53.6215 47.4296C53.1867 47.7109 52.9156 47.1652 52.5435 47.4746C52.1821 47.7952 52.0974 47.4296 52.1991 47.1202C52.3177 46.8389 52.5661 46.6532 52.7242 46.4338C52.6175 46.5126 52.465 46.5295 52.2843 46.4563C51.81 45.9556 51.8213 46.7208 51.4487 46.822C51.2962 47.2102 50.8959 47.3114 50.6017 47.514C50.0822 47.7952 49.9128 47.1202 49.552 46.9064C49.2352 47.0302 48.8575 46.8502 48.5859 47.0471C48.2815 47.3508 47.5187 46.8839 47.4797 47.4577C47.129 47.5534 46.8303 47.7727 46.915 48.2115C47.0054 48.8304 46.1866 48.3241 45.8817 48.6054C45.605 48.3128 45.3114 48.3859 44.9952 48.5997C44.7355 48.4422 44.4136 48.5941 44.1482 48.4591C43.832 48.476 43.2222 48.3522 43.0189 48.6898C42.7309 49.1736 42.5277 48.4366 42.4712 48.1497C42.2284 47.6827 42.4204 47.0864 42.1324 46.6082C42.0251 45.9894 42.8439 45.8544 43.2899 45.7137C43.7699 45.5393 43.3634 45.2187 43.1601 45.0274C43.0189 44.5661 42.6858 44.9093 42.3809 44.7574C42.0985 44.6955 42.0759 44.5717 42.1437 44.4255C41.9912 44.5717 41.8218 44.5886 41.5903 44.3073C40.6925 44.4873 40.9805 43.3347 40.3933 42.9572C39.9641 42.3833 39.3091 42.6477 38.7896 42.8671C38.6315 42.2652 38.0387 42.1077 37.5248 42.1977C37.1973 41.9952 36.8698 41.6576 36.8755 41.3032C36.8529 41.3538 36.8416 41.4045 36.8246 41.4551C36.6835 41.5114 36.5367 41.5732 36.3842 41.4607C36.1696 41.2976 35.8986 41.2976 35.6445 41.2582C35.6671 41.1288 35.684 40.9994 35.7066 40.87C35.4808 40.4481 35.2605 40.0318 35.0347 39.6099C35.0177 39.413 35.0516 39.2104 35.046 39.0079C35.0855 38.3835 35.0516 37.7534 35.029 37.129C34.8032 36.2682 34.5547 35.4187 34.3176 34.558C34.2611 34.2036 34.2611 33.8323 34.2272 33.4666C34.1821 33.3147 34.4192 33.3597 34.5039 33.2979C34.8314 33.2135 35.1081 33.0222 35.4356 32.9547C35.7179 32.8253 36.1245 33.0391 36.4294 32.8872C36.4689 32.6284 36.6552 32.0996 36.9432 32.4934C37.1465 32.7465 37.4683 32.4371 37.7055 32.5553C37.5982 32.4315 37.5305 32.3077 37.7394 32.0883C37.9257 31.3401 38.6485 32.2177 38.88 31.5426C39.3712 31.2782 39.9641 31.4695 40.4441 31.3738C40.6982 31.537 40.8168 31.627 40.9353 31.8745C41.7654 32.0039 40.8563 30.9801 41.3758 30.6763C41.8331 30.6481 41.9687 31.0307 42.0759 31.2557C42.7422 31.2164 43.1093 32.1896 43.6344 31.4189C44.3571 30.9238 44.3684 32.2233 44.8766 32.409C45.2578 32.8197 45.4385 32.2008 45.8168 32.1952Z\" fill=\"#3B5BDB\" stroke=\"white\" stroke-width=\"1.77165\"/>\r\n            <path d=\"M73.2703 50.9175C72.9767 51.3844 72.3386 51.7557 73.0445 52.1777C73.0332 52.8134 74.2754 53.044 73.8243 53.7697C73.8971 53.9498 73.9874 53.9498 74.0834 53.8654C74.0614 53.9104 74.0383 53.961 74.0162 54.0116C74.3437 54.006 74.6261 54.2029 74.7384 54.4954C74.7893 54.5348 74.8401 54.5573 74.8965 54.5742C74.8175 54.563 74.7435 54.5348 74.6712 54.4786C74.6594 55.1368 74.2754 55.6993 73.9711 56.2507C73.9541 56.5376 74.0891 56.6838 74.2477 56.8189C74.1455 56.8189 74.2082 57.1114 74.2359 57.2127C74.3652 57.494 74.224 57.7809 74.1337 58.0397C74.032 58.2534 73.739 58.4053 73.9253 58.6641C74.0608 58.8779 74.0213 59.1198 73.8124 59.2717C73.5419 59.3392 73.6317 59.6317 73.6374 59.8455C73.4454 60.0199 73.2139 60.1943 73.1794 60.4699C73.145 60.7287 73.2861 60.9706 73.1851 61.2351C73.1568 61.4995 73.569 61.3588 73.7384 61.3757C73.9411 61.1788 74.0038 60.8919 73.9982 60.6162C74.0998 60.4643 74.4386 60.5431 74.4047 60.2618C74.4843 60.0705 74.5685 59.8736 74.6526 59.6767C74.6701 59.4348 74.8677 59.2492 75.0371 59.086C75.6136 59.0917 76.1439 59.3729 76.7255 59.3673C76.7255 59.3336 76.7311 59.3054 76.7367 59.2717C76.7311 59.3223 76.7486 59.3673 76.7819 59.4123C77.132 59.5412 77.7644 60.0649 77.8723 59.4005C77.8723 58.8885 78.4589 58.7761 78.7305 59.1867C79.0744 59.5018 79.5431 59.3667 79.9615 59.4399C80.4076 59.4793 80.7865 59.7943 81.2489 59.7718C81.6216 59.7718 81.9773 59.8224 82.3393 59.9293C82.7848 60.1375 83.0332 59.648 83.3212 59.4005C83.6154 59.108 83.9649 58.8211 84.3997 58.8154C84.4787 58.7479 84.5346 58.6579 84.5747 58.5623C84.5352 58.6692 84.4906 58.7648 84.4172 58.8267H84.4228C84.9706 59.018 85.49 59.0011 86.0265 58.7817C86.5968 58.8436 87.2009 59.1136 87.7882 58.9055C88.1722 58.5117 88.7029 58.281 88.9457 57.8028C88.9909 57.5947 89.0982 57.4034 89.2055 57.2178C89.1885 57.2628 89.1716 57.3021 89.1547 57.3415C89.3749 57.2065 89.6007 57.3921 89.7871 57.5103C90.3173 57.9884 90.6228 57.1671 90.8368 56.7958C91.3675 56.4358 92.0282 56.7677 92.6047 56.6214C93.0502 56.4414 93.0734 55.62 93.6493 55.7326C94.0564 55.9688 94.7222 56.1826 94.7109 55.4738C94.8464 55.035 94.6375 53.9773 95.3326 54.1405C95.6713 54.0561 96.1626 54.613 96.2863 54.1855C95.9249 53.7973 95.8119 53.2572 96.2072 52.8297C96.1903 52.3909 95.9023 52.0421 96.1282 51.5808C96.6132 51.6821 96.7493 51.2264 96.9915 50.9788C97.7933 50.5344 96.026 50.3713 96.7995 50C97.1666 49.8706 97.1553 49.6399 96.9972 49.4824C97.1615 49.5612 97.3026 49.5781 97.4043 49.2686C97.7707 49.1786 98.2513 49.0155 98.6403 48.7848C98.917 48.6723 99.6121 48.7173 98.9735 48.4641C98.3185 48.211 97.4946 47.8566 97.3083 47.1084C97.415 46.8046 97.8842 46.5177 97.3755 46.242C97.3365 45.7188 96.9576 45.2856 97.0988 44.7737C96.9576 44.183 97.5223 43.6148 97.1107 43.0129L97.0988 42.8947L97.0373 42.7597C97.3591 43.0354 98.0536 42.1184 98.5054 42.1296C98.5562 41.4545 100.42 41.9271 99.703 41.2295C99.7194 40.2788 100.036 39.3505 100.527 38.6023C101.25 38.3604 102.215 38.5967 102.898 38.0735C102.729 37.359 102.074 36.954 101.978 36.2845C101.227 35.7501 101.95 34.94 101.667 34.293C101.514 33.3423 102.418 32.5659 102.091 31.6715C102.373 30.777 102.966 30.04 103.254 29.1568C103.831 28.3748 103.147 26.9796 104.271 26.5689C104.056 25.6576 105.163 25.8657 105.276 25.1794C105.044 24.6562 105.225 24.3299 105.355 23.8405C105.033 23.4411 104.57 23.0585 104.068 23.0979C104.328 23.0416 104.514 22.9854 104.237 22.6591C104.514 21.9728 103.374 21.5565 103.802 20.7745C103.587 20.1219 103.768 19.4074 103.994 18.7942C104.203 18.3048 104.282 17.9785 103.875 17.5735C103.848 17.4947 103.819 17.4216 103.791 17.3484C102.436 17.911 101.007 18.2992 99.7036 18.9855C98.9012 19.2049 98.0994 19.4243 97.2919 19.6381C97.0937 19.4693 96.9023 19.2555 96.699 19.1037C96.3546 19.3456 95.9988 19.565 95.6657 19.8125C95.4342 20.195 95.2987 20.6676 95.0051 20.9883C94.7447 21.157 94.4856 21.3314 94.2315 21.5002C94.1801 21.1177 94.1976 20.7126 94.1242 20.3413C93.8814 20.0713 93.5432 19.8406 93.3568 19.5425C93.328 19.233 93.4076 18.8899 93.1586 18.6423C93.0513 18.5298 93.0344 18.1979 92.7973 18.3554C92.4189 18.4342 92.035 18.513 91.6566 18.5861C91.498 18.4398 91.3856 18.1867 91.2157 18.0798C90.9565 18.2317 90.5443 18.2148 90.3975 18.4848C90.4709 18.7886 90.5443 19.0924 90.6177 19.3962C89.8836 19.6718 89.1722 20.0431 88.4268 20.2625C87.9299 20.285 87.433 20.3132 86.9356 20.3357C86.9243 20.3582 86.9192 20.3863 86.9079 20.4088C86.8339 20.195 86.241 20.4482 86.0101 20.3751C86.1513 19.9138 86.2981 19.4524 86.4392 18.9911C86.4675 18.5805 86.7498 18.3779 87.1163 18.2486C87.1733 17.9954 87.2518 17.7085 87.2574 17.4497C86.1733 17.4216 85.0558 17.4666 83.9598 17.4666C83.35 16.9546 82.7345 16.4427 82.1247 15.9313C81.6165 16.2126 81.114 16.567 80.6114 16.8764C80.3003 16.989 79.9734 16.5839 79.6577 16.4883C79.3579 16.7414 79.0812 17.0452 78.7876 17.3209C77.9011 17.4334 77.0202 17.5459 76.1343 17.6584C75.7051 18.1366 75.3212 18.6992 74.9027 19.2055C74.6938 19.7005 74.3155 19.0817 74.0112 18.9636C74.1235 18.4066 74.2365 17.8497 74.3499 17.2927C74.254 16.7583 74.2088 16.2295 74.3274 15.695C74.4855 15.3688 74.18 15.155 74.0332 14.9018C73.7796 14.9075 73.503 15.02 73.237 15.0537C73.0507 15.7625 72.9265 16.5108 72.7627 17.2365C72.8079 17.6978 72.311 17.7428 72.0061 17.9341C71.6503 18.1872 71.3059 18.2435 70.9784 17.9172C70.578 17.9847 70.1659 18.1535 69.7649 18.2435C69.5216 18.7385 69.3076 19.2505 69.0761 19.7512C68.8841 20.0493 68.8841 20.6232 68.3985 20.4938C68.15 20.5782 67.7661 20.3812 67.5961 20.64C67.1218 20.9438 67.1562 21.3882 67.4549 21.8383C67.0828 22.2771 66.4786 22.7328 66.608 23.526C67.0094 24.3755 66.1229 24.758 65.9761 25.5006C65.8688 26.4176 65.6994 27.7003 64.6209 27.9534C63.5594 28.8817 65.3776 28.8198 65.9083 28.3416C66.7045 29.1855 67.8564 27.509 68.4211 28.471C68.9569 28.9267 70.0077 28.7073 70.211 29.5286C69.3352 30.17 69.364 31.1376 69.4939 32.0883C69.2054 32.4877 68.9405 33.5172 69.7762 33.7985C70.3917 33.5791 71.0236 33.5172 71.3228 34.288C72.198 33.7873 73.1642 34.8393 73.9315 34.3555C74.5696 34.5692 75.4674 33.9729 75.7723 33.2303C75.7108 33.0616 75.5803 32.9434 75.4166 32.8534C75.4674 32.8647 75.5295 32.8815 75.5803 32.8928C76.4273 32.9603 76.8056 33.8323 77.2461 34.4624C77.3025 34.6818 77.455 34.873 77.5623 34.8393C77.5058 35.2275 77.6871 35.7056 77.2348 35.8575C77.4381 36.4539 76.0546 36.2513 76.586 36.7801C76.9304 36.8308 76.1794 37.0558 76.4386 37.3483C76.0772 37.6465 75.7108 37.9278 75.3324 38.1584C75.394 38.5579 75.3776 39.1767 74.7842 38.9967C74.4736 39.0867 74.084 38.946 73.9208 38.9404C73.8305 39.413 74.0388 39.9924 73.4521 40.2737C73.5312 40.4087 73.5363 40.5325 73.5137 40.6563C73.508 40.33 73.2658 40.0431 72.8926 40.2006C72.4465 40.1106 72.5086 40.8588 72.0682 40.8644C72.1021 41.2695 72.1472 41.8039 71.8248 42.0908C71.8305 42.2764 71.9496 42.4565 71.9321 42.6365C71.9377 42.9515 71.9999 43.4578 71.9095 43.6772C71.486 43.801 71.294 44.2567 70.9439 44.4986C70.6673 44.7405 71.198 45.365 70.6498 45.3087C70.3223 45.0443 70.6385 45.6744 70.2884 45.6856C70.2376 46.1469 70.8141 45.5112 70.7 46.0344C70.853 46.4338 70.3731 46.7714 70.678 47.0977C70.5142 47.5534 70.678 47.7615 71.1467 47.6996C71.525 47.8347 71.892 48.3691 71.412 48.6166C71.1128 48.6785 71.062 49.1004 70.9264 49.3029C71.0676 49.8711 71.5651 49.8655 72.0275 49.933C72.4454 49.9724 72.7333 50.4337 72.9705 50.6644C73.1235 50.7769 73.2472 50.8725 73.3714 50.8725C73.3381 50.8894 73.3048 50.9006 73.2703 50.9175Z\" fill=\"#3B5BDB\" stroke=\"white\" stroke-width=\"1.77165\"/>\r\n            <path d=\"M132.351 28.0328C131.968 27.5546 132.532 27.5039 132.566 27.1495C132.21 26.3619 131.855 25.58 131.504 24.7924C131.855 24.0779 132.267 23.3747 132.583 22.6546C132.498 22.2383 132.278 21.8107 132.594 21.4394C133.108 20.6293 133.024 19.6392 133.306 18.7504C133.402 18.2441 133.634 17.7208 133.65 17.2258C133.311 17.0064 132.803 17.0064 132.397 16.8658C132.12 16.7133 131.403 16.8095 131.403 16.4945C131.685 15.4987 132.035 14.4973 132.284 13.4959C131.702 12.9784 131.115 12.4608 130.533 11.9376C130.149 12.1008 129.895 12.5565 129.562 12.8378C129.296 13.164 129.009 13.4453 128.557 13.3384C127.642 13.2653 126.778 13.5916 125.897 13.766C125.089 13.6253 124.283 13.4847 123.475 13.3384C123.215 12.5565 122.989 11.7407 122.712 10.97C122.058 10.9081 121.403 10.8463 120.748 10.7844C120.505 11.1613 120.556 11.707 120.431 12.1514C120.364 12.5396 120.296 12.9278 120.228 13.3159C119.59 13.2709 118.941 13.1978 118.308 13.1697C118.1 13.3216 117.885 13.4847 117.699 13.6647C117.738 13.5916 117.711 13.5522 117.535 13.5635C116.745 13.5128 115.948 13.4566 115.158 13.406C114.971 13.0403 114.814 12.6521 114.616 12.2977C114.153 12.0952 113.695 11.8533 113.238 11.6732C112.95 12.1177 112.673 12.5677 112.385 13.0178C111.809 13.0122 111.222 12.8828 110.646 12.9559C110.251 13.029 109.861 13.0965 109.466 13.164C109.258 12.7477 109.071 12.3146 108.85 11.9039C108.444 11.6451 108.043 11.3694 107.636 11.1107C107.191 11.0544 106.733 10.9644 106.299 10.925C106.129 11.1557 105.966 11.3813 105.801 11.6114C105.548 11.5607 105.294 11.482 105.045 11.4482C104.865 11.5888 104.587 11.6507 104.435 11.8195C104.441 12.4608 104.419 13.1078 104.435 13.7435C104.627 14.1767 104.819 14.6042 105.006 15.0374C104.74 15.7519 104.48 16.4663 104.215 17.1808C103.871 17.2483 103.702 17.3946 103.933 17.7152C104.639 18.2778 103.572 19.0204 103.798 19.7686C103.509 20.3087 103.945 20.86 103.718 21.4169C104.08 21.8895 104.356 22.2664 104.339 22.8402C104.435 23.4759 105.745 23.4422 105.243 24.3085C104.955 24.6686 105.65 25.5799 104.786 25.7206C104.747 25.7543 104.735 25.8106 104.747 25.8725C104.498 25.6868 104.227 26.3394 104.137 26.6995C103.12 27.1383 103.86 28.5616 103.188 29.2985C102.928 30.1705 102.262 30.885 102.075 31.802C102.459 32.7077 101.245 33.6022 101.77 34.5867C101.404 35.3518 101.748 36.2626 102.233 36.8145C102.329 37.2589 103.311 37.9902 102.561 38.2603C101.878 38.7272 100.556 38.0746 100.308 39.0029C99.794 39.7286 99.641 40.9662 99.8335 41.5738C98.9024 41.6807 98.3705 42.1476 97.6138 42.6033C96.7104 42.7721 97.467 43.4697 97.1966 43.9754C96.9261 44.8361 97.0893 45.7812 97.6138 46.4845C97.1904 46.9514 97.3151 47.6659 98.0035 47.9865C98.58 48.2622 99.0938 48.656 99.6856 48.8135C99.4992 48.7629 99.3417 48.7179 99.2739 48.6841C98.7545 48.6335 98.3428 48.9542 97.9018 49.1454C97.3033 49.016 97.235 49.7305 96.8007 50.0005C96.1683 50.3606 97.1678 50.3662 97.2079 50.7375C96.9927 50.9912 96.7782 51.2163 96.5862 51.4919C96.1288 51.4863 96.0385 51.7901 96.0272 52.1839C96.3829 52.5608 96.1062 52.9883 95.9701 53.3315C95.7448 53.7872 96.4507 53.9559 96.2191 54.3779C95.829 54.3272 95.3434 53.9391 95.0051 54.1979C94.5421 54.6367 95.0051 55.4918 94.4969 55.9306C94.5585 56.2512 95.3609 56.3525 95.6997 56.5832C96.2304 56.7801 96.2762 57.4158 96.5466 57.8433C97.0548 58.1415 96.6432 58.8728 97.2587 59.0191C97.4507 59.4916 97.8572 60.0036 98.4219 59.7335C98.947 59.7729 99.6189 59.396 99.9013 60.0429C100.347 60.2511 100.855 60.1611 101.296 59.9811C101.726 59.6098 102.358 59.6154 102.804 59.9473C103.052 60.1442 103.459 60.1892 103.673 60.0317C103.645 60.0711 103.617 60.1105 103.583 60.1498C103.871 60.1442 104.153 60.2511 104.396 60.3917C105.05 60.9037 106.451 60.8193 106.315 59.7392C106.389 58.9122 107.524 58.9291 107.574 58.1302C107.918 57.2076 108.252 58.254 108.15 58.7434C108.591 59.4466 107.072 59.6154 107.732 60.2173C108.332 59.8967 109.975 60.2061 109.37 61.14C108.648 61.7419 108.885 62.5689 108.805 63.379C109.591 63.8965 110.782 64.0878 111.149 65.0555C111.312 66.0006 112.346 65.8205 112.961 65.8768C113.294 66.1637 113.543 66.13 113.729 65.9612C113.678 66.0231 113.616 66.0849 113.548 66.1356C113.769 66.2087 113.983 66.2819 114.197 66.355C114.463 66.1018 114.83 66.1468 115.18 66.3156C115.671 66.5069 116.168 66.5294 116.676 66.49C116.958 66.5856 117.037 66.2706 117.19 66.1018C118.319 66.2762 119.442 66.4506 120.566 66.625C121.018 66.4787 121.464 66.2593 121.916 66.0962C121.989 65.8937 121.978 65.6518 122.023 65.438C122.203 65.2355 122.497 65.1061 122.723 64.9429C123.271 64.0203 123.795 63.0865 124.338 62.1638C124.072 61.5281 123.739 60.9093 123.446 60.2792C123.666 60.0486 123.886 59.8123 124.106 59.5816C124.818 58.8109 125.574 58.0852 126.348 57.382C126.517 56.9657 126.63 56.5156 126.783 56.0825C126.89 55.9081 126.857 55.8518 126.766 55.8406L126.868 55.8349C127.365 55.3005 127.89 54.7773 128.376 54.2372C128.489 53.9559 128.427 53.354 128.856 53.6691C129.488 53.911 130.188 53.8547 130.849 53.9728C131.182 54.0122 131.527 54.1191 131.831 53.9053C132.182 53.7478 132.622 53.7197 132.825 53.3371C133.243 52.8814 133.656 52.4201 134.067 51.9645C134.209 52.1445 134.327 52.3808 134.48 52.5383C134.982 52.2908 135.519 52.0826 135.993 51.8069C135.891 51.5369 135.682 51.295 135.541 51.0306C135.891 50.7999 136.162 50.3892 136.62 50.4399C136.863 50.3949 137.139 50.4174 137.364 50.3499C137.681 49.8773 138.053 49.416 138.347 48.9378C138.33 48.6003 138.008 48.2121 138.319 47.9421C138.403 47.824 138.392 47.7395 138.33 47.6664C138.37 47.7002 138.41 47.7283 138.443 47.7677C138.573 47.4526 138.804 47.3401 139.138 47.4301C139.368 47.3908 139.685 47.5764 139.821 47.3008C139.939 47.1151 140.215 46.997 140.272 46.7888C140.052 46.485 139.821 46.1925 139.601 45.8943C139.86 45.6131 140.126 45.3374 140.391 45.0561C140.798 45.3261 141.198 45.6243 141.604 45.8774C142.051 45.5455 142.536 45.2418 142.96 44.8873C142.739 44.4935 142.44 44.1335 142.197 43.7509C142.473 43.6272 142.785 43.5372 143.05 43.3965C143.265 42.9802 143.536 42.5808 143.728 42.1589C143.632 41.9282 143.378 41.7088 143.361 41.4838C143.886 40.6287 144.361 39.7229 144.908 38.8903C145.105 38.7103 145.489 38.6709 145.534 38.384C145.297 38.0859 145.291 37.8552 145.687 37.7315C145.941 37.5627 146.229 37.4333 146.461 37.2476C146.731 36.6176 146.935 35.9537 147.24 35.3462C147.539 34.9186 147.917 34.5135 148.171 34.0691C148.069 33.7147 147.748 33.4222 147.555 33.0959C147.403 32.7808 146.985 32.7808 146.72 32.6008C146.387 32.4095 145.93 32.3645 145.789 31.9651C145.529 31.5544 145.275 31.1269 145.009 30.7162C144.179 30.1424 143.35 29.5629 142.514 28.9947C141.621 28.8597 140.735 28.7247 139.848 28.5841C139.024 28.4603 138.193 28.3534 137.369 28.2409C136.698 27.9371 136.466 28.4209 136.336 29.0173C135.573 29.0904 134.671 29.7205 134.004 29.4223C133.744 28.8035 133.111 28.6178 132.547 28.3815C132.367 27.8865 132.067 28.134 131.853 28.3984C131.883 28.1565 132.165 28.1177 132.351 28.0328Z\" fill=\"#748FFC\"/>\r\n            <path d=\"M139.848 28.5841C140.735 28.7247 141.621 28.8597 142.514 28.9947C143.35 29.5629 144.179 30.1424 145.009 30.7162C145.275 31.1269 145.529 31.5544 145.789 31.9651C145.93 32.3645 146.387 32.4095 146.72 32.6008C146.985 32.7808 147.403 32.7808 147.555 33.0959C147.748 33.4222 148.069 33.7147 148.171 34.0691C147.917 34.5135 147.539 34.9186 147.24 35.3462C146.935 35.9537 146.731 36.6176 146.461 37.2476C146.229 37.4333 145.941 37.5627 145.687 37.7315C145.291 37.8552 145.297 38.0859 145.534 38.384C145.489 38.6709 145.105 38.7103 144.908 38.8903C144.361 39.7229 143.886 40.6287 143.361 41.4838C143.378 41.7088 143.632 41.9282 143.728 42.1589C143.536 42.5808 143.265 42.9802 143.05 43.3965C142.785 43.5372 142.473 43.6272 142.197 43.7509C142.44 44.1335 142.739 44.4935 142.96 44.8873C142.536 45.2418 142.051 45.5455 141.604 45.8774C141.198 45.6243 140.798 45.3261 140.391 45.0561C140.126 45.3374 139.86 45.6131 139.601 45.8943C139.821 46.1925 140.052 46.485 140.272 46.7888C140.215 46.997 139.939 47.1151 139.821 47.3008C139.685 47.5764 139.368 47.3908 139.138 47.4301C138.804 47.3401 138.573 47.4526 138.443 47.7677C138.41 47.7283 138.37 47.7002 138.33 47.6664C138.392 47.7395 138.403 47.824 138.319 47.9421C138.008 48.2121 138.33 48.6003 138.347 48.9378C138.053 49.416 137.681 49.8773 137.364 50.3499C137.139 50.4174 136.863 50.3949 136.62 50.4399C136.162 50.3892 135.891 50.7999 135.541 51.0306C135.682 51.295 135.891 51.5369 135.993 51.8069C135.519 52.0826 134.982 52.2908 134.48 52.5383C134.327 52.3808 134.209 52.1445 134.067 51.9645C133.656 52.4201 133.243 52.8814 132.825 53.3371C132.622 53.7197 132.182 53.7478 131.831 53.9053C131.527 54.1191 131.182 54.0122 130.849 53.9728C130.188 53.8547 129.488 53.911 128.856 53.6691C128.427 53.354 128.489 53.9559 128.376 54.2372C127.89 54.7773 127.365 55.3005 126.868 55.8349L126.766 55.8406C126.857 55.8518 126.89 55.9081 126.783 56.0825C126.63 56.5156 126.517 56.9657 126.348 57.382C125.574 58.0852 124.818 58.8109 124.106 59.5816C123.886 59.8123 123.666 60.0486 123.446 60.2792C123.739 60.9093 124.072 61.5281 124.338 62.1638C123.795 63.0865 123.271 64.0203 122.723 64.9429C122.497 65.1061 122.203 65.2355 122.023 65.438C121.978 65.6518 121.989 65.8937 121.916 66.0962C121.464 66.2593 121.018 66.4787 120.566 66.625C119.442 66.4506 118.319 66.2762 117.19 66.1018C117.037 66.2706 116.958 66.5856 116.676 66.49C116.168 66.5294 115.671 66.5069 115.18 66.3156C114.83 66.1468 114.463 66.1018 114.197 66.355C113.983 66.2819 113.769 66.2087 113.548 66.1356C113.616 66.0849 113.678 66.0231 113.729 65.9612C113.543 66.13 113.294 66.1637 112.961 65.8768C112.346 65.8205 111.312 66.0006 111.149 65.0555C110.782 64.0878 109.591 63.8965 108.805 63.379C108.885 62.5689 108.648 61.7419 109.37 61.14C109.975 60.2061 108.332 59.8967 107.732 60.2173C107.072 59.6154 108.591 59.4466 108.15 58.7434C108.252 58.254 107.918 57.2076 107.574 58.1302C107.524 58.9291 106.389 58.9122 106.315 59.7392C106.451 60.8193 105.05 60.9037 104.396 60.3917C104.153 60.2511 103.871 60.1442 103.583 60.1498C103.617 60.1104 103.645 60.0711 103.673 60.0317C103.459 60.1892 103.052 60.1442 102.804 59.9473C102.358 59.6154 101.726 59.6098 101.296 59.9811C100.855 60.1611 100.347 60.2511 99.9013 60.0429C99.6189 59.396 98.947 59.7729 98.4219 59.7335C97.8572 60.0036 97.4507 59.4916 97.2587 59.0191C96.6432 58.8728 97.0548 58.1415 96.5466 57.8433C96.2762 57.4158 96.2304 56.7801 95.6997 56.5832C95.3609 56.3525 94.5585 56.2512 94.4969 55.9306C95.0051 55.4918 94.5421 54.6367 95.0051 54.1979C95.3434 53.9391 95.829 54.3272 96.2191 54.3779C96.4507 53.9559 95.7448 53.7872 95.9701 53.3315C96.1062 52.9883 96.3829 52.5608 96.0272 52.1839C96.0385 51.7901 96.1288 51.4863 96.5862 51.4919C96.7782 51.2163 96.9927 50.9912 97.2079 50.7375C97.1678 50.3662 96.1683 50.3606 96.8007 50.0005C97.235 49.7305 97.3033 49.016 97.9018 49.1454C98.3428 48.9541 98.7545 48.6335 99.2739 48.6841C99.3417 48.7179 99.4992 48.7629 99.6856 48.8135C99.0938 48.656 98.58 48.2622 98.0035 47.9865C97.3151 47.6659 97.1904 46.9514 97.6138 46.4845C97.0893 45.7813 96.9261 44.8361 97.1966 43.9754C97.467 43.4697 96.7104 42.7721 97.6138 42.6033C98.3705 42.1476 98.9024 41.6807 99.8335 41.5738C99.641 40.9662 99.794 39.7286 100.308 39.0029C100.556 38.0746 101.878 38.7272 102.561 38.2603C103.311 37.9902 102.329 37.2589 102.233 36.8145C101.748 36.2626 101.404 35.3518 101.77 34.5867C101.245 33.6022 102.459 32.7077 102.075 31.802C102.262 30.885 102.928 30.1705 103.188 29.2985C103.86 28.5616 103.12 27.1383 104.137 26.6995C104.227 26.3394 104.498 25.6868 104.747 25.8725C104.735 25.8106 104.747 25.7543 104.786 25.7206C105.65 25.5799 104.955 24.6686 105.243 24.3085C105.745 23.4422 104.435 23.4759 104.339 22.8402C104.356 22.2664 104.08 21.8895 103.718 21.4169C103.945 20.86 103.509 20.3087 103.798 19.7686C103.572 19.0204 104.639 18.2778 103.933 17.7152C103.702 17.3946 103.871 17.2483 104.215 17.1808C104.48 16.4663 104.74 15.7519 105.006 15.0374C104.819 14.6042 104.627 14.1767 104.435 13.7435C104.419 13.1078 104.441 12.4608 104.435 11.8195C104.587 11.6507 104.865 11.5888 105.045 11.4482C105.294 11.482 105.548 11.5607 105.801 11.6114C105.966 11.3813 106.129 11.1557 106.299 10.925C106.733 10.9644 107.191 11.0544 107.636 11.1107C108.043 11.3694 108.444 11.6451 108.85 11.9039C109.071 12.3146 109.258 12.7477 109.466 13.164C109.861 13.0965 110.251 13.029 110.646 12.9559C111.222 12.8828 111.809 13.0122 112.385 13.0178C112.673 12.5677 112.95 12.1177 113.238 11.6732C113.695 11.8533 114.153 12.0952 114.616 12.2977C114.814 12.6521 114.971 13.0403 115.158 13.406C115.948 13.4566 116.745 13.5128 117.535 13.5635C117.711 13.5522 117.738 13.5916 117.699 13.6647C117.885 13.4847 118.1 13.3216 118.308 13.1697C118.941 13.1978 119.59 13.2709 120.228 13.3159C120.296 12.9278 120.364 12.5396 120.431 12.1514C120.556 11.707 120.505 11.1613 120.748 10.7844C121.403 10.8463 122.058 10.9081 122.712 10.97C122.989 11.7407 123.215 12.5565 123.475 13.3384C124.283 13.4847 125.089 13.6253 125.897 13.766C126.778 13.5916 127.642 13.2653 128.557 13.3384C129.009 13.4453 129.296 13.164 129.562 12.8378C129.895 12.5565 130.149 12.1008 130.533 11.9376C131.115 12.4608 131.702 12.9784 132.284 13.4959C132.035 14.4973 131.685 15.4987 131.403 16.4945C131.403 16.8095 132.12 16.7133 132.397 16.8658C132.803 17.0064 133.311 17.0064 133.65 17.2258C133.634 17.7208 133.402 18.2441 133.306 18.7504C133.024 19.6392 133.108 20.6293 132.594 21.4394C132.278 21.8107 132.498 22.2383 132.583 22.6546C132.267 23.3747 131.855 24.0779 131.504 24.7924C131.855 25.58 132.21 26.3619 132.566 27.1495C132.532 27.5039 131.968 27.5546 132.351 28.0328C132.165 28.1177 131.883 28.1565 131.853 28.3984C132.067 28.134 132.367 27.8865 132.547 28.3815C133.111 28.6178 133.744 28.8035 134.004 29.4223C134.671 29.7205 135.573 29.0904 136.336 29.0173C136.466 28.4209 136.698 27.9371 137.369 28.2409C138.193 28.3534 139.024 28.4603 139.848 28.5841ZM139.848 28.5841L139.831 28.6347\" stroke=\"white\" stroke-width=\"1.77165\"/>\r\n            <path d=\"M27.9697 128.137C28.5795 126.647 29.1781 125.145 29.675 123.609C30.3525 123.665 30.6631 124.284 30.968 124.745C31.7247 124.773 32.2272 124.391 32.9048 124.875C33.492 125.628 34.1978 125.043 34.2769 124.245C34.8698 123.446 35.9426 123.868 36.6654 124.29C37.2639 124.07 38.1448 124.571 38.6812 124.464C39.6185 124.121 39.9573 125.066 40.697 125.37C41.4988 125.364 40.2114 126.967 41.3916 126.568C42.2837 126.827 42.4757 125.712 42.8201 125.139C43.0629 124.267 44.1922 124.205 44.8585 124.627C45.3272 125.454 44.8981 126.506 45.2086 127.361C44.3729 128.182 45.5757 129.038 45.5135 128.976C45.858 128.694 46.1121 128.301 46.2928 127.89C46.1798 127.479 46.3154 126.889 46.8574 127.069C47.2527 126.928 47.6824 126.922 47.8744 126.461C48.1957 126.208 48.5802 126.107 48.9354 125.893C49.1386 125.668 49.111 125.223 49.2013 125.049C49.5853 125.116 49.67 125.567 50.0088 125.747C50.0257 126.118 50.9805 125.887 50.596 125.724C50.2296 125.718 49.9743 124.773 50.5339 124.751C50.7654 124.908 51.0421 125.077 51.0765 125.336C51.3018 125.443 51.0929 125.741 51.3809 125.713C51.4605 126.191 51.8388 126.641 51.7315 127.147C51.5164 127.513 52.1206 127.519 52.0415 127.918C52.3239 128.171 52.4769 128.543 52.5723 128.858C52.273 128.914 52.0528 129.116 52.1607 129.465C52.3131 129.994 51.4944 129.926 51.4492 130.174C51.9004 130.14 52.3414 130.315 52.7869 130.202C53.194 130.135 53.7242 129.932 53.7299 129.448C53.9902 129.465 54.1251 128.931 54.1985 129.189C54.2155 129.06 54.2725 128.942 54.4018 128.846C54.9664 128.537 54.893 127.789 55.4069 127.53C55.2313 127.282 55.4182 126.613 55.6949 126.889C55.6553 127.434 55.8812 127.867 56.4679 127.912C56.7056 128.273 57.4171 128.661 57.1121 128.008C57.242 127.71 57.722 127.682 57.2307 127.401C57.0958 127.125 57.9648 126.63 57.1918 126.647C56.7508 126.467 56.3052 125.803 56.3668 125.342C56.7564 124.976 56.9314 124.481 57.0111 124.036C57.2934 123.603 57.5469 123.024 58.1912 123.215C58.4792 122.737 58.6599 122.034 59.3149 122.585C59.6028 122.81 59.936 123.041 59.9812 123.333C60.0376 123.187 60.111 123.069 60.2522 122.956C60.3538 122.546 60.6977 122.253 60.9462 121.927C61.1381 121.651 61.2793 121.347 61.539 121.122C61.844 121.291 62.2505 121.342 62.403 121.696C62.6734 121.78 62.849 122.039 63.1477 122.073C63.2725 122.349 63.2104 122.81 62.9558 122.99C62.8716 123.412 62.7418 123.834 62.6678 124.261C62.6339 124.312 62.5887 124.335 62.5323 124.346C62.6571 124.374 62.7186 124.441 62.617 124.672C62.6396 125.156 63.2612 125.274 63.3115 125.775C63.3397 126.185 63.4747 126.461 63.8762 126.697C63.9942 127.085 64.3392 127.311 64.5532 127.659C64.7175 128.002 64.8863 128.604 64.4465 128.829C64.0173 128.807 64.2037 129.527 63.735 129.583C63.3115 129.904 63.9552 130.247 64.2765 130.146C64.1528 130.523 63.6221 130.635 63.6334 131.119C63.4527 131.474 63.3392 131.873 63.2663 132.256C63.2268 132.779 62.831 132.914 62.3685 132.942C62.1703 133.139 62.1652 133.645 61.7468 133.336C61.5266 132.925 61.1031 133.127 61.3459 133.493C61.0292 133.623 60.6746 133.848 60.7468 134.269C60.5441 134.528 60.0755 134.99 59.7875 134.618C59.5899 134.585 59.5447 134.489 59.5447 134.36C59.5159 134.455 59.4707 134.551 59.4092 134.63C59.3414 135.361 58.517 135.029 58.1274 135.389C57.692 135.316 56.8789 135.186 57.2352 135.89C57.2742 136.205 57.8614 136.604 57.2121 136.615C56.8733 136.722 56.9693 137.217 56.5294 137.251C56.2923 137.594 57.3137 138.067 56.6135 137.96C55.9811 138.343 55.4453 137.701 54.8405 137.724C54.321 137.876 54.4842 137.459 54.5746 137.065C54.3939 137.454 54.4504 137.977 54.8117 138.236C55.2584 138.635 54.6198 139.181 54.9416 139.642C55.1951 139.985 54.727 140.25 54.5797 139.845C54.4165 139.456 54.089 139.31 53.823 139.715C53.3939 139.918 53.072 140.345 52.6265 140.503C52.242 140.34 51.9546 139.912 51.4803 140.165C51.0794 140.289 50.6615 140.334 50.5819 140.829C50.5311 141.313 49.8761 141.122 49.5938 141.454C49.2662 141.757 49.4757 141.093 49.2329 141.065C49.4018 140.75 49.6784 140.385 49.255 140.086C48.9506 139.828 48.967 139.355 48.8879 138.973C48.7304 138.579 48.849 138.112 48.8264 137.673C48.6005 137.319 48.5384 136.902 48.3747 136.52C48.4763 136.115 48.2674 135.8 48.1313 135.473C48.0805 135.8 47.7366 136.058 47.3413 136.267C47.0534 136.621 46.9969 137.184 46.6694 136.509C46.0765 135.856 46.0144 137.189 45.4667 137.375C45.19 138.348 44.1341 138.129 43.6146 138.832C43.1121 139.338 42.4119 138.961 42.2086 138.438C41.8077 138.562 41.7343 138.371 41.6835 138.129C41.6835 138.157 41.6835 138.191 41.6778 138.219C41.5367 138.32 41.0059 138.494 40.6784 138.68C40.2154 139.057 39.4926 139.102 39.2837 139.558C39.3006 139.974 38.8941 140.694 39.2781 141.127C39.1934 141.617 39.6338 141.735 39.8709 142.078C39.1595 141.92 39.12 143.068 39.9218 143.113C40.4921 143.445 41.7795 143.558 40.9268 144.385C40.9833 145.189 40.4525 145.819 39.854 146.275C39.3176 146.213 38.5271 147.113 38.1205 146.792C38.2899 147.068 38.2109 147.434 38.3633 147.737C38.5496 148.064 38.9054 148.334 38.8659 148.744C38.7247 149.206 38.8828 149.65 38.8433 150.123C38.8715 150.567 39.0917 150.972 39.391 151.298C39.6225 151.585 39.0522 151.889 38.8489 152.097C38.7868 152.497 38.4028 152.716 38.3407 153.116C38.1092 153.307 37.8156 153.419 37.6914 153.746C37.234 153.65 37.0025 153.195 36.5959 153.014C36.0708 153.222 36.116 153.931 36.3193 154.386C36.5338 154.876 36.7484 155.337 36.9291 155.85C36.946 156.362 36.0595 155.833 35.7828 156.26C35.3085 156.355 34.7665 156.047 34.247 155.94C33.7501 155.99 33.2701 156.114 32.7676 156.204C32.1182 156.35 31.4124 156.575 30.7856 156.255C30.3508 156.002 30.1702 156.558 29.8257 156.637C29.7975 156.953 29.3119 157.009 29.1594 156.812C29.0013 157.515 28.4197 158.094 28.0979 158.759C27.5389 159.445 27.4937 160.345 27.1718 161.06C26.5564 161.2 25.9748 161.037 25.5343 161.51L25.5005 161.398C25.4327 161.876 25.077 162.28 24.9471 162.747C24.6139 163.276 24.8059 163.834 24.9866 164.373C24.964 164.948 25.6416 165.307 25.2802 165.886C25.1278 166.41 24.8229 167.214 24.1058 166.798C23.654 166.832 23.2983 166.708 23.0781 166.252C22.8635 165.728 22.1351 165.548 21.7737 166.021C21.5817 166.252 21.0227 166.713 20.8477 166.522C20.8533 166.584 20.859 166.64 20.859 166.685C20.571 166.646 20.5879 167.04 20.2548 166.933C19.8257 167.073 19.9555 167.67 19.5433 167.867C19.2102 168.024 19.1537 168.356 19.1594 168.676C18.9674 169.053 18.7698 169.408 18.5495 169.779C18.4423 170.032 18.1995 170.657 17.8889 170.252C17.5501 170.325 17.6066 170.927 17.217 170.815C16.8104 170.826 16.7483 171.253 16.6184 171.552C16.2683 171.455 16.1046 170.983 16.1723 170.668C16.0142 170.375 15.7319 170.145 15.6585 169.796C15.4496 169.459 15.7093 169.245 15.8223 168.958C15.6077 168.592 15.986 168.311 16.2006 168.08C16.0425 167.709 15.7263 167.394 15.7206 166.949C15.698 166.578 15.6529 166.134 15.1898 166.111C14.9866 166.06 14.772 166.336 14.6082 166.055C14.3937 166.077 14.0097 166.111 13.9194 165.847L13.9081 165.908C13.4338 165.988 13.095 165.633 12.9425 165.24V165.233C12.9594 165.396 12.8973 165.543 12.6602 165.611C12.4117 165.723 12.1238 165.869 12.1972 166.179C12.056 166.448 11.6833 166.387 11.6833 166.742C11.5026 166.994 11.2711 167.4 10.9775 167.062C10.7178 166.949 10.4072 167.034 10.1813 166.82C9.93854 166.803 9.70139 166.82 9.46423 166.842C9.39647 166.854 9.32871 166.865 9.26095 166.877C8.95039 166.167 8.62854 165.458 8.32927 164.75C8.32927 164.434 8.32362 164.126 8.32362 163.816C8.09212 163.602 7.86625 163.388 7.64039 163.175C7.22255 163.107 6.79905 163.056 6.38686 162.977C6.34733 162.876 6.45461 162.775 6.47155 162.674C6.53931 162.522 6.58449 162.353 6.66354 162.212C7.03056 162.167 7.39194 162.1 7.75332 162.06C7.91143 162.302 8.06953 162.539 8.22763 162.775C8.59466 162.679 8.96733 162.601 9.32871 162.494C9.88208 162.134 10.4524 161.796 11.0001 161.425L11.5873 160.964C12.0729 160.57 12.5868 160.193 13.0611 159.788C13.366 159.468 13.6653 159.147 13.9702 158.826C14.2582 158.516 14.5461 158.213 14.8341 157.909C15.0882 157.403 15.2971 156.868 15.5343 156.35C16.1328 155.782 16.7539 155.225 17.3581 154.663C17.5953 154.612 17.8607 154.584 18.0978 154.551L18.1148 154.657C18.143 154.584 18.2164 154.545 18.3689 154.556C18.3406 154.258 18.3067 153.959 18.2842 153.661C18.7359 153.171 19.2384 152.711 19.7071 152.226C19.7918 152.165 19.8595 152.142 19.9217 152.147L19.8482 152.091C20.3677 151.371 20.8929 150.65 21.418 149.925C21.3728 149.643 21.3276 149.362 21.2825 149.081C21.1357 149.047 20.9776 149.047 20.842 148.996C20.8308 148.845 20.9211 148.698 20.938 148.552C21.147 147.748 21.3559 146.943 21.5648 146.144C21.7455 145.452 21.9262 144.76 22.1069 144.068C22.1351 143.77 22.2819 143.534 22.4965 143.331C22.6376 143.067 22.5134 142.707 22.553 142.403C22.6772 141.88 22.9143 141.379 23.0781 140.862L23.2588 140.367C23.3943 140.125 23.3096 139.849 23.3152 139.59C23.6032 139.056 23.9251 138.533 24.23 138.004C24.4897 137.458 24.6817 136.879 24.9189 136.322C25.3875 135.191 25.7884 134.038 26.195 132.884C26.6862 131.495 27.1436 130.088 27.7308 128.733C27.8381 128.547 27.8607 128.204 28.0358 128.148L27.9697 128.137Z\" fill=\"#5C7CFA\" stroke=\"white\" stroke-width=\"1.77165\"/>\r\n            <path d=\"M61.9179 170.484C61.3928 171.249 60.687 171.851 59.9021 172.498C59.3888 173.257 58.7112 173.572 57.8919 173.786C56.836 174.484 55.7355 174.968 55.3284 176.189C55.0856 177.156 53.273 178.09 54.8597 178.67C55.8823 179.012 56.7344 179.547 56.5198 180.711C56.8981 181.409 57.8693 180.554 57.7169 181.674C57.8411 182.512 57.9252 183.704 58.8462 183.93C59.6367 183.153 59.8852 185.707 60.4555 184.262C60.8564 183.367 61.7034 182.59 62.4154 182.951C62.8219 181.961 63.1094 183.08 63.5447 183.249C63.7135 183.192 63.8101 183.069 63.866 182.911C63.8829 183.181 63.9902 183.378 64.2776 183.407C64.1653 183.874 64.3516 184.492 64.4363 185.044C63.8598 186.281 66.1811 185.696 65.6447 184.756C65.6836 184.11 65.7237 183.26 66.4521 183.007C66.8637 183.367 67.2709 183.479 67.7344 183.62C67.5137 184.678 68.9253 184.447 69.0213 185.206C68.6147 185.769 69.1568 186.331 68.6774 186.788C68.4115 187.356 68.9027 187.446 69.3262 187.17C70.1958 187.553 70.7949 186.703 71.5058 186.231C71.5673 185.421 72.1495 185.741 72.6294 185.55C73.0473 185.145 73.228 185.921 73.5944 185.876C73.4369 186.039 73.4313 186.27 73.7701 186.399C73.8152 186.906 74.3968 187.198 74.883 187.401C74.4815 187.975 75.4414 188.458 75.1422 189.145C75.6848 189.021 75.8367 189.387 76.2551 189.617C76.8988 189.516 77.4748 189.742 78.1015 189.803C78.4234 189.674 79.0784 190.129 79.2308 189.764C79.4008 189.117 79.8407 189.68 80.2246 189.572C80.9474 189.33 81.3376 188.662 81.6306 188.014C81.721 187.075 82.1162 188.47 82.6301 188.464C83.3082 188.863 83.7537 187.755 84.2964 188.189C84.9 188.307 85.2727 188.943 85.8605 188.864C86.4025 189.117 86.1083 188.285 86.5211 188.33C87.0801 187.834 86.1089 188.003 85.996 188.42C85.8661 188.24 86.363 187.587 86.747 187.581C87.0174 187.125 87.4471 186.248 88.1191 186.563C88.424 186.428 89.3099 186.996 89.254 186.512C89.2202 186.106 90.4398 186.056 90.3608 185.364C90.0395 185.026 90.1123 184.318 89.7453 184.07C90.0559 184.121 90.389 184.307 90.2478 183.823C90.2196 183.564 90.7334 183.458 90.7509 183.322L90.7673 183.333C90.7221 183.772 91.2196 184.087 91.3715 184.493C91.5691 184.819 91.9079 184.566 92.2072 184.763C92.7323 184.414 93.0762 184.875 92.8114 185.353C93.1389 185.342 93.8159 185.241 94.0135 185.792C94.7481 185.899 94.1999 186.281 93.9012 186.456C94.0988 186.934 93.568 187.39 94.2682 187.615C94.149 187.97 93.4376 188.166 94.1942 188.369C94.7589 188.638 95.7696 189.089 95.7131 189.787C95.3856 190.384 95.7244 190.969 95.6849 191.581C95.8029 191.739 95.86 191.131 95.9893 191.587C96.3337 191.744 96.9159 192.921 96.2326 192.465C95.3518 192.538 96.1197 192.91 96.4754 193.18C96.5776 193.765 97.1474 194.142 97.0282 194.783C97.0006 195.953 98.175 194.255 98.2371 194.952C97.6894 195.914 99.2987 194.57 98.9881 195.515C99.4512 195.239 100.32 195.233 100.434 194.677C99.8521 193.951 100.858 193.805 101.083 193.326C101.557 192.511 101.913 193.715 102.37 193.563C102.387 192.792 103.511 193.512 103.234 192.894C103.381 191.944 104.482 192.973 104.662 193.485C104.837 193.085 105.356 193.35 105.453 193.558C104.6 193.772 105.56 194.706 105.125 195.245C105.035 195.724 103.911 196.5 104.86 196.657C104.448 197.181 105.001 197.457 105.289 197.862C105.47 198.222 105.713 197.603 105.921 197.496C106.266 197.013 106.865 196.889 107.367 196.624C107.553 196.41 107.684 196.129 107.853 195.893C108.299 195.308 108.897 194.841 109.399 194.301C109.778 194.205 110.212 194.25 110.608 194.216C110.992 193.592 111.246 192.884 111.743 192.337C111.975 191.966 112.302 191.702 112.68 191.488C113.092 191.325 113.2 190.875 113.437 190.554C113.415 190.206 113.296 189.851 113.239 189.508C113.076 189.401 112.968 189.047 112.771 189.047C112.867 188.986 112.601 188.816 112.545 188.709C112.85 188.507 113.155 188.299 113.46 188.096C113.68 187.617 113.872 187.123 114.081 186.639C114.42 186.138 114.815 185.671 115.176 185.181C115.442 184.726 115.634 184.231 115.876 183.758C116.159 183.089 116.56 182.487 116.938 181.869C116.814 181.317 116.639 180.765 116.492 180.215C116.046 179.473 115.583 178.741 115.137 178.004C114.38 177.514 113.601 177.047 112.839 176.563C111.919 176.917 110.992 177.294 110.06 177.637C109.823 177.778 109.57 177.581 109.327 177.542C109.112 177.497 108.875 177.384 108.683 177.384L108.66 177.407L108.694 177.362C108.435 177.351 108.31 177.193 108.259 176.952C108.163 176.75 108.079 176.546 108.198 176.333C108.373 175.725 108.587 175.128 108.638 174.499C108.677 174.161 108.767 173.812 108.779 173.475C107.486 173.069 106.142 172.828 104.855 172.4C104.493 172.355 104.312 171.995 104.053 171.782C103.945 171.675 103.832 171.517 103.759 171.545L103.765 171.494C103.612 170.667 103.527 169.829 103.437 168.991C103.618 168.502 103.923 168.046 104.131 167.562C103.81 167.264 103.42 167.022 103.076 166.74C102.618 166.285 102.263 165.734 101.845 165.233C101.455 164.788 100.953 164.456 100.517 164.051C100.529 163.545 100.556 163.033 100.562 162.526C100.37 162.206 100.178 161.891 99.9859 161.57C100.223 161.222 100.545 160.912 100.625 160.485C100.721 160.153 100.839 159.82 100.929 159.488C100.872 158.976 100.816 158.465 100.76 157.953C100.923 157.739 101.121 157.548 101.262 157.322C101.2 157.188 101.042 157.103 100.941 156.985C100.754 156.811 100.585 156.608 100.382 156.457C99.4218 156.012 98.4624 155.562 97.4907 155.14C97.3043 155.061 97.1242 154.977 96.9379 154.898C96.9497 154.611 96.9661 154.323 96.9831 154.037C96.8809 153.7 96.6945 153.379 96.5765 153.041C95.983 152.873 95.3676 152.743 94.769 152.585C94.3687 151.989 93.9734 151.392 93.5782 150.791C93.3241 150.6 93.0248 150.448 92.7538 150.273L92.7368 150.33C92.6973 150.138 92.3529 150.077 92.2066 149.936C91.9187 149.728 91.8955 149.295 91.721 148.991C91.5516 148.552 91.3766 148.113 91.0547 147.764C90.6595 147.371 90.8063 146.757 90.5691 146.279C90.4624 145.981 90.3546 145.677 90.2524 145.379C89.7108 145.644 89.2704 146.037 88.6549 145.666C87.9265 145.756 87.6047 146.285 87.3901 146.847C86.7464 147.219 86.1586 148.001 85.3686 147.883C84.8548 147.511 84.6459 146.6 83.9632 146.499C83.2179 146.78 82.2805 147.348 82.1445 148.181C82.5516 149.098 81.6532 149.998 80.7102 149.852C80.0044 150.318 79.9762 151.331 79.1857 151.741C78.7791 152.451 77.9321 152.591 77.2833 152.928C76.7752 153.311 76.7639 154.015 76.346 154.43C75.9677 154.11 75.4369 153.913 75.2732 153.418C74.7311 153.204 74.2455 152.855 73.726 152.579C73.3821 152.079 72.6927 152.146 72.2297 151.888C71.9253 152.271 71.5809 152.051 71.3098 151.86C70.7164 152.248 71.0947 153.019 70.6379 153.548C70.5538 154.183 69.774 154.391 69.6159 154.903C69.2652 155.353 69.6215 155.899 69.9547 156.281C69.4352 156.281 69.0117 156.619 69.3104 157.131C69.4459 157.626 69.8242 158.222 70.3273 158.402C70.818 158.645 71.0213 159.297 71.5809 159.263C71.7898 159.601 71.9925 159.162 72.1845 159.556C72.5182 160.096 72.0157 160.613 71.6594 161.074C71.4617 161.407 71.0608 161.739 71.0106 162.076C70.8299 161.783 70.5645 161.626 70.0162 161.829C69.6949 162.599 69.3223 162.881 68.4634 162.903C68.1873 163.572 68.5538 164.489 67.7463 164.94C67.4244 166.042 66.2217 166.565 66.1822 167.741C65.6966 168.191 64.2731 168.034 64.4764 167.257C63.6068 167.19 62.6294 168.084 62.7254 168.928C63.2844 169.539 62.3527 170.157 61.9179 170.484Z\" fill=\"#5C7CFA\"/>\r\n            <path d=\"M97.4907 155.14C98.4624 155.562 99.4218 156.012 100.382 156.457C100.585 156.608 100.754 156.811 100.941 156.985C101.042 157.103 101.2 157.188 101.262 157.322C101.121 157.548 100.923 157.739 100.76 157.953C100.816 158.465 100.872 158.976 100.929 159.488C100.839 159.82 100.721 160.153 100.625 160.485C100.545 160.912 100.223 161.222 99.9859 161.57C100.178 161.891 100.37 162.206 100.562 162.526C100.556 163.033 100.529 163.545 100.517 164.051C100.953 164.456 101.455 164.788 101.845 165.233C102.263 165.734 102.618 166.285 103.076 166.74C103.42 167.022 103.81 167.264 104.131 167.562C103.923 168.046 103.618 168.502 103.437 168.991C103.527 169.829 103.612 170.667 103.765 171.494L103.759 171.545C103.832 171.517 103.945 171.675 104.053 171.782C104.312 171.995 104.493 172.355 104.855 172.4C106.142 172.828 107.486 173.069 108.779 173.475C108.767 173.812 108.677 174.161 108.638 174.499C108.587 175.128 108.373 175.725 108.198 176.333C108.079 176.546 108.163 176.75 108.259 176.952C108.31 177.193 108.435 177.351 108.694 177.362L108.66 177.407L108.683 177.384C108.875 177.384 109.112 177.497 109.327 177.542C109.57 177.581 109.823 177.778 110.06 177.637C110.992 177.294 111.919 176.917 112.839 176.563C113.601 177.047 114.38 177.514 115.137 178.004C115.583 178.741 116.046 179.473 116.492 180.215C116.639 180.765 116.814 181.317 116.938 181.869C116.56 182.487 116.159 183.089 115.876 183.758C115.634 184.231 115.442 184.726 115.176 185.181C114.815 185.671 114.42 186.138 114.081 186.639C113.872 187.123 113.68 187.617 113.46 188.096C113.155 188.299 112.85 188.507 112.545 188.709C112.601 188.816 112.867 188.986 112.771 189.047C112.968 189.047 113.076 189.401 113.239 189.508C113.296 189.851 113.415 190.206 113.437 190.554C113.2 190.875 113.092 191.325 112.68 191.488C112.302 191.702 111.975 191.966 111.743 192.337C111.246 192.884 110.992 193.592 110.608 194.216C110.212 194.25 109.778 194.205 109.399 194.301C108.897 194.841 108.299 195.308 107.853 195.893C107.684 196.129 107.553 196.41 107.367 196.624C106.865 196.889 106.266 197.013 105.921 197.496C105.713 197.603 105.47 198.222 105.289 197.862C105.001 197.457 104.448 197.181 104.86 196.657C103.911 196.5 105.035 195.724 105.125 195.245C105.56 194.706 104.6 193.772 105.453 193.558C105.356 193.35 104.837 193.085 104.662 193.485C104.482 192.973 103.381 191.944 103.234 192.894C103.511 193.512 102.387 192.792 102.37 193.563C101.913 193.715 101.557 192.511 101.083 193.326C100.858 193.805 99.8521 193.951 100.434 194.677C100.32 195.233 99.4512 195.239 98.9881 195.515C99.2987 194.57 97.6894 195.914 98.2371 194.952C98.175 194.255 97.0006 195.953 97.0282 194.783C97.1474 194.142 96.5776 193.765 96.4754 193.18C96.1197 192.91 95.3518 192.538 96.2326 192.465C96.9159 192.921 96.3337 191.744 95.9893 191.587C95.86 191.131 95.8029 191.739 95.6849 191.581C95.7244 190.969 95.3856 190.384 95.7131 189.787C95.7696 189.089 94.7589 188.638 94.1942 188.369C93.4376 188.166 94.149 187.97 94.2682 187.615C93.568 187.39 94.0988 186.934 93.9012 186.456C94.1999 186.281 94.7481 185.899 94.0135 185.792C93.8159 185.241 93.1389 185.342 92.8114 185.353C93.0762 184.875 92.7323 184.414 92.2072 184.763C91.9079 184.566 91.5691 184.819 91.3715 184.493C91.2196 184.087 90.7221 183.772 90.7673 183.333L90.7509 183.322C90.7334 183.458 90.2196 183.564 90.2478 183.823C90.389 184.307 90.0559 184.121 89.7453 184.07C90.1123 184.318 90.0395 185.026 90.3608 185.364C90.4398 186.056 89.2202 186.106 89.254 186.512C89.3099 186.996 88.424 186.428 88.1191 186.563C87.4471 186.248 87.0174 187.125 86.747 187.581C86.363 187.587 85.8661 188.24 85.996 188.42C86.1089 188.003 87.0801 187.834 86.5211 188.33C86.1083 188.285 86.4025 189.117 85.8605 188.864C85.2727 188.943 84.9 188.307 84.2964 188.189C83.7537 187.755 83.3082 188.863 82.6301 188.464C82.1162 188.47 81.721 187.075 81.6306 188.014C81.3376 188.662 80.9474 189.33 80.2246 189.572C79.8407 189.68 79.4008 189.117 79.2308 189.764C79.0784 190.129 78.4234 189.674 78.1015 189.803C77.4748 189.742 76.8988 189.516 76.2551 189.617C75.8367 189.387 75.6848 189.021 75.1422 189.145C75.4414 188.458 74.4815 187.975 74.883 187.401C74.3968 187.198 73.8152 186.906 73.7701 186.399C73.4313 186.27 73.4369 186.039 73.5944 185.876C73.228 185.921 73.0473 185.145 72.6294 185.55C72.1495 185.741 71.5673 185.421 71.5058 186.231C70.7949 186.703 70.1958 187.553 69.3262 187.17C68.9027 187.446 68.4115 187.356 68.6774 186.788C69.1568 186.331 68.6147 185.769 69.0213 185.206C68.9253 184.447 67.5137 184.678 67.7344 183.62C67.2709 183.479 66.8637 183.367 66.4521 183.007C65.7237 183.26 65.6836 184.11 65.6447 184.756C66.1811 185.696 63.8598 186.281 64.4363 185.044C64.3516 184.492 64.1653 183.874 64.2776 183.407C63.9902 183.378 63.8829 183.181 63.866 182.911C63.8101 183.069 63.7135 183.192 63.5447 183.249C63.1094 183.08 62.8219 181.961 62.4154 182.951C61.7034 182.59 60.8564 183.367 60.4555 184.262C59.8852 185.707 59.6367 183.153 58.8462 183.93C57.9252 183.704 57.8411 182.512 57.7169 181.674C57.8693 180.554 56.8981 181.409 56.5198 180.711C56.7344 179.547 55.8823 179.012 54.8597 178.67C53.273 178.09 55.0856 177.156 55.3284 176.189C55.7355 174.968 56.836 174.484 57.8919 173.786C58.7112 173.572 59.3888 173.257 59.9021 172.498C60.687 171.851 61.3928 171.249 61.9179 170.484C62.3527 170.157 63.2844 169.539 62.7254 168.928C62.6294 168.084 63.6068 167.19 64.4764 167.257C64.2731 168.034 65.6966 168.191 66.1822 167.741C66.2217 166.565 67.4245 166.042 67.7463 164.94C68.5538 164.489 68.1873 163.572 68.4634 162.903C69.3223 162.881 69.6949 162.599 70.0162 161.829C70.5645 161.626 70.8299 161.783 71.0106 162.076C71.0608 161.739 71.4617 161.407 71.6594 161.074C72.0157 160.613 72.5182 160.096 72.1845 159.556C71.9925 159.162 71.7898 159.601 71.5809 159.263C71.0213 159.297 70.818 158.645 70.3273 158.402C69.8242 158.222 69.4459 157.626 69.3104 157.131C69.0117 156.619 69.4352 156.281 69.9547 156.281C69.6215 155.899 69.2652 155.353 69.6159 154.903C69.774 154.391 70.5538 154.183 70.6379 153.548C71.0947 153.019 70.7164 152.248 71.3098 151.86C71.5809 152.051 71.9253 152.271 72.2297 151.888C72.6927 152.146 73.3821 152.079 73.726 152.579C74.2455 152.855 74.7311 153.204 75.2732 153.418C75.4369 153.913 75.9677 154.11 76.346 154.43C76.7639 154.015 76.7751 153.311 77.2833 152.928C77.9321 152.591 78.7791 152.451 79.1857 151.741C79.9762 151.331 80.0044 150.318 80.7102 149.852C81.6532 149.998 82.5516 149.098 82.1445 148.181C82.2805 147.348 83.2179 146.78 83.9632 146.499C84.6459 146.6 84.8548 147.511 85.3686 147.883C86.1586 148.001 86.7464 147.219 87.3901 146.847C87.6047 146.285 87.9265 145.756 88.6549 145.666C89.2704 146.037 89.7108 145.644 90.2524 145.379C90.3546 145.677 90.4624 145.981 90.5691 146.279C90.8063 146.757 90.6595 147.371 91.0547 147.764C91.3766 148.113 91.5516 148.552 91.721 148.991C91.8955 149.295 91.9187 149.728 92.2066 149.936C92.3529 150.077 92.6973 150.138 92.7368 150.33L92.7538 150.273C93.0248 150.448 93.3241 150.6 93.5782 150.791C93.9734 151.392 94.3687 151.989 94.769 152.585C95.3676 152.743 95.983 152.873 96.5765 153.041C96.6945 153.379 96.8809 153.7 96.9831 154.037C96.9661 154.323 96.9497 154.611 96.9379 154.898C97.1242 154.977 97.3043 155.061 97.4907 155.14ZM97.4907 155.14V155.146\" stroke=\"white\" stroke-width=\"1.77165\"/>\r\n            <path d=\"M52.9225 106.538C53.1144 106.155 53.7124 106.318 53.7356 105.829C53.9157 105.469 53.7068 105.159 53.6396 104.805C53.7011 104.456 53.8536 104.164 53.7638 103.798C53.8028 103.64 53.7519 103.483 53.6616 103.348C53.7915 103.421 53.905 103.393 53.8598 103.1C53.5154 102.493 54.5142 102.594 54.3849 101.992C54.0066 101.688 54.6221 101.39 54.7407 101.114C54.9044 100.839 55.1929 100.957 55.3731 100.799C55.1478 100.456 55.5594 99.9612 55.2488 99.6462C55.0343 99.2918 54.5938 99.0217 54.6221 98.5773C54.4753 98.116 54.8423 97.8178 55.2545 97.7278C55.5538 97.6266 55.5312 97.5422 55.4013 97.4465C55.4301 97.4634 55.4634 97.4747 55.4916 97.4803C56.1749 97.5759 56.5701 96.7152 57.2026 96.7827C57.5922 97.3227 57.9202 96.8052 58.377 96.6814C58.1738 96.3608 57.7729 96.0063 57.6486 95.5675C57.5809 94.9825 56.9592 95.3538 56.8073 94.9093C56.6435 94.3355 56.7169 93.7223 56.4798 93.1654C56.1692 92.7266 55.6949 92.1753 56.0055 91.6071C56.3273 91.5621 56.7909 91.1401 57.1913 91.3089C57.4792 91.1626 58.0778 90.9826 58.4849 90.797C58.5126 90.2456 57.5758 90.0431 57.1574 89.7393C56.8468 89.835 56.4007 89.7562 56.4177 89.278C56.1862 89.0136 56.7616 88.3498 56.2647 88.5411C56.3324 88.4904 56.412 88.4567 56.5131 88.4736C56.6091 88.3273 56.5747 87.8828 56.6825 87.6184C56.3381 87.3765 56.3883 86.9321 56.3431 86.5721C56.49 86.0432 55.8073 86.3414 55.7277 85.9138C55.6712 85.4975 55.1015 85.6719 55.1015 85.2331C54.9942 84.8225 55.2195 84.3612 54.9434 83.9899C54.661 83.8492 54.8191 83.5286 55.0727 83.5061C55.4002 83.4329 55.7672 83.4667 56.0552 83.281C56.4115 83.1798 56.6368 82.8929 56.9586 82.7353C57.0885 82.5553 57.7384 82.5722 57.3996 82.3303C57.1286 82.139 57.5797 82.1896 57.608 82.0546C57.6368 82.0546 57.608 82.0428 57.5628 82.0209C57.6588 82.0321 57.7384 81.959 57.7266 81.7565C57.9863 81.5258 57.5408 81.042 58.0371 81.0533C58.2127 81.0364 58.0879 80.7438 58.2974 80.6426C58.2404 80.3107 58.2466 80.0575 58.6136 79.9169C58.8734 79.6243 58.7717 79.2137 59.0145 78.8874C59.0879 78.4148 58.7774 78.021 58.5741 77.6216C58.512 77.3628 58.3369 76.8846 58.0665 76.8227C58.2641 76.744 58.4612 76.6652 58.6594 76.5808C59.128 76.1083 59.6983 76.6821 60.0879 76.9859C60.5171 77.5203 61.3353 77.2728 61.5837 76.6877C61.8322 75.9339 62.3466 76.6315 62.7582 76.8452C63.272 77.4022 63.8757 77.1659 64.4522 76.8959C64.9327 77.0309 64.8079 76.6933 64.8531 76.3727C64.7684 75.8101 64.2771 75.3319 64.2602 74.7131C63.5092 74.3755 64.062 73.6836 64.0682 73.0535C63.8875 72.5416 63.6385 71.9734 63.56 71.4277C64.1981 71.1577 64.3505 70.4432 64.7915 70.0044C65.2602 70.2407 64.8982 69.6612 65.1755 69.5037C65.695 69.2168 65.3505 68.8342 65.4234 68.3898C65.7226 68.0691 65.6097 67.6528 65.158 67.5797C65.1975 68.1367 64.5425 68.3561 64.3505 68.7555C64.0563 69.2224 63.7345 70.3644 63.001 69.8469C62.4075 69.4812 61.7074 69.3462 61.1427 68.9074C60.5781 68.5586 60.4369 67.6303 59.5956 67.861C59.3528 67.7091 59.2568 67.771 59.2009 67.906C59.2353 67.6697 59.246 67.4391 58.9801 67.3322C59.11 67.1353 58.7486 66.8484 59.0992 66.8596C59.3584 66.8202 59.0936 66.4771 59.2856 66.3196C59.3245 66.0045 59.3759 65.577 58.9914 65.5038C58.9406 65.1607 58.8163 64.8006 58.3928 64.9244C58.0936 64.9863 58.1269 64.5025 57.8672 64.7387C57.495 64.975 57.1896 64.5587 57.0653 64.2493C56.9242 63.8105 56.4781 63.9511 56.4109 64.3449C56.2409 64.7106 56.0382 65.1832 55.5752 65.2113C55.18 65.2169 54.8637 65.4476 54.6831 65.7964C54.5131 66.0664 54.2144 66.4152 53.8587 66.2408C53.5594 66.072 53.3222 65.5657 52.9213 65.7232C52.6108 65.8133 52.1026 65.4757 51.9275 65.6501C51.9157 65.9708 51.7581 66.3308 51.905 66.6402C52.0574 66.9609 52.582 66.8934 52.5368 67.3547C52.4978 67.6472 52.5148 67.9229 52.5712 68.2154L52.6509 68.2098C52.5261 68.2548 52.4194 68.3335 52.3234 68.4348C52.3798 68.1648 51.3121 68.3898 51.7468 67.9623C51.6283 67.636 51.2556 67.3322 51.0292 67.0621C50.6232 67.1634 50.2274 66.7752 50.5605 66.4152C50.2505 66.0214 49.8039 65.5207 49.4199 65.1382C49.2957 65.4476 48.9738 65.7289 48.6859 65.4082C48.5057 65.3744 47.5684 65.4926 48.0822 65.7289C48.5057 65.6613 48.6525 65.9989 48.4662 66.3364C48.0258 66.5615 48.613 66.8259 48.4543 67.1409C48.4606 67.6191 47.8056 67.8891 47.4097 68.0016C47.1387 67.6247 46.7208 67.3716 46.5232 66.9328C46.2183 66.7696 46.2974 65.8414 45.9473 66.2633C45.5238 66.252 45.1398 66.7021 45.0551 67.1409C45.1172 67.6135 44.7333 67.6529 44.3549 67.5516C43.9314 67.5966 43.412 67.6078 42.9885 67.8104C43.1071 67.7485 43.1579 67.6585 43.1014 67.5235C43.0619 67.3097 42.9885 67.0565 42.7683 66.9665C42.6327 66.9271 42.5367 67.0678 42.4238 67.124C42.2827 67.124 42.1415 67.1353 42.0003 67.1578C41.7801 67.1522 41.6841 67.3884 41.4921 67.4391C41.3792 67.5066 41.2663 67.5685 41.1533 67.6303C41.1308 67.861 41.1082 68.0916 41.0856 68.3167C40.9839 68.958 40.8823 69.5993 40.7807 70.2463C40.6056 71.197 40.3967 72.1478 40.2951 73.1154C40.233 73.6105 40.1821 74.1112 40.0297 74.5837C39.6683 75.9789 39.2674 77.3684 38.9794 78.7805C38.9342 78.893 38.9117 78.9999 38.9681 79.0505L38.9173 79.0393C38.7253 79.9562 38.4769 80.8564 38.2397 81.7677C38.0703 82.2965 37.867 82.8141 37.7146 83.3542C37.5508 84.0011 37.3927 84.6481 37.229 85.3006C37.2855 85.3344 37.3363 85.3794 37.3871 85.4244C37.3137 85.3907 37.2572 85.3738 37.2233 85.3907C37.0483 86.2739 36.9523 87.1853 36.5853 88.0179C36.4385 88.5185 36.3764 89.3118 36.2917 89.8237C36.5345 89.3849 37.3024 89.2836 37.5734 88.9124C38.2962 88.1079 38.1833 86.9996 38.7536 86.0714C39.2617 85.807 39.2166 86.7858 39.2956 87.0952C39.4481 88.181 39.2674 89.1542 39.2335 90.2456V90.3413C39.194 91.4495 38.7987 92.5015 38.5333 93.5704C38.5616 93.5704 38.2171 93.9023 38.2115 94.1161C38.0816 94.403 37.9856 94.9375 37.6242 94.9487C37.2798 94.7631 37.2911 94.3018 37.212 93.9586C37.1386 93.7054 37.4266 92.9122 37.2177 92.7884C37.3363 92.7547 37.421 92.6647 37.4153 92.4903C37.4887 92.1584 37.5621 91.8208 37.5113 91.4833C37.5 90.9938 37.6976 90.4819 37.4661 90.015C37.2459 89.9981 37.133 90.3244 36.941 90.4256C36.8958 90.4594 36.8563 90.4875 36.8055 90.51C36.557 90.7126 36.2352 90.8307 36.0093 91.0276C35.8399 91.3764 35.8456 91.7814 35.7214 92.1471L35.5802 92.6197C35.4503 93.3679 35.2583 94.1048 35.1115 94.8474C35.0042 95.3369 34.9026 95.8263 34.7897 96.3158C35.247 96.5295 35.6479 96.839 36.0037 97.199C36.6135 97.6716 36.9805 98.3748 37.5508 98.8867C38.0703 99.3086 38.5503 99.7924 38.8665 100.378C39.1714 100.49 38.9399 100.951 39.1545 101.036C39.6796 101.3 40.2047 101.581 40.7863 101.688C41.159 101.795 41.4639 101.328 41.3961 100.979C41.3114 100.535 41.2606 100.051 41.4187 99.618C41.4074 99.1511 41.7858 98.7404 41.893 98.3354C42.0455 98.2004 42.1641 98.1779 42.4238 98.1722C42.5537 98.4648 42.8473 98.2285 43.0958 98.341C43.5418 98.3185 43.6491 98.7292 43.7508 99.0442C43.8468 99.2749 44.0105 99.2974 43.8976 99.2749C43.8919 99.4605 44.0557 99.6237 44.05 99.8375C44.242 100.271 43.6943 100.501 43.7959 100.895C43.6604 101.396 43.7903 101.896 43.8411 102.408C43.7338 103.083 44.4058 103.027 44.8631 102.903C45.3544 102.903 45.5746 102.363 45.9868 102.257C46.2522 102.043 46.8677 101.778 47.0766 102.2C47.2234 102.493 47.534 102.465 47.0766 102.206C46.8959 102.099 46.8055 103.022 47.172 103.157C47.4775 103.128 47.5616 103.573 47.8615 103.669C48.172 103.916 48.2341 104.338 48.1268 104.659C47.884 104.968 48.0647 105.384 47.9015 105.756C47.7824 106.121 47.8168 106.431 47.9631 106.785C48.0026 107.162 48.0371 107.567 47.9123 107.933C47.5955 108.012 47.2177 108.062 46.879 108.085C46.6192 108.085 46.1731 107.584 46.0489 107.893C46.128 108.327 46.3256 108.76 46.2127 109.21C46.2127 109.514 46.7717 109.294 46.958 109.48C47.3984 109.553 47.8727 109.064 48.2511 109.508C48.5729 109.424 48.8276 109.502 48.8552 109.868C49.0868 110.189 49.4594 109.947 49.4995 109.632C49.7022 109.362 49.6288 109.041 49.7474 108.743C49.6627 108.456 49.4199 107.938 49.7762 107.77C50.1427 107.713 50.4476 107.32 50.792 107.584C51.0467 107.393 51.639 107.64 51.4075 107.156C51.4815 106.87 51.9558 106.543 51.6509 106.256C51.4137 106.088 51.5153 105.66 51.7977 105.947C52.159 106.138 52.543 106.251 52.8649 106.47L52.8937 106.498L52.9225 106.538Z\" fill=\"#3B5BDB\" stroke=\"white\" stroke-width=\"1.77165\"/>\r\n            <path d=\"M77.1032 97.4707C77.4985 97.33 77.0129 96.7225 77.7018 96.8181C78.4528 96.9306 79.1699 97.0769 79.6442 96.3343C80.0903 96.098 80.3218 95.5354 80.9316 95.603C81.1851 95.4679 81.6651 95.2598 81.795 95.423C81.9248 95.0348 82.4336 94.7873 82.7216 94.5116C83.2862 94.416 84.0937 94.5172 84.3139 93.8477C84.878 93.7915 85.4313 93.4258 86.0073 93.3752C86.4138 93.6115 86.7645 93.3021 87.1936 93.5609C87.5324 93.0545 88.153 93.0939 88.4133 92.4976C88.2433 92.852 87.769 93.1445 87.6115 92.6382C87.7408 92.1657 87.8543 91.6931 88.0062 91.2093C88.1818 90.7986 88.227 90.3261 88.5482 89.9942C88.8757 89.6622 88.6894 89.1897 88.7572 88.7846C88.9271 88.4077 89.7623 88.3064 89.5985 87.862C89.0113 87.6145 89.0954 87.0407 89.3896 86.5906C89.4517 86.4106 89.9091 86.4218 89.8865 86.1012C89.9209 86.0843 89.9599 86.0674 89.9932 86.0505C89.5985 86.0393 89.1185 85.578 88.6612 85.8593C88.1812 85.7467 88.2603 85.1167 87.7408 85.0773C87.4923 84.841 87.5093 84.4303 87.2213 84.2222C87.1987 83.7327 87.9328 83.654 88.136 83.2264C88.52 82.8776 88.3167 82.3938 87.983 82.0732C87.6047 81.6738 87.0796 81.4431 86.5375 81.3925C86.3619 81.2293 86.1931 81.0156 85.9107 80.9312C86.04 80.5036 86.1812 80.0648 86.594 79.806C86.8989 79.3166 87.1191 78.754 87.345 78.2196C87.5708 77.8483 87.4071 77.3251 87.5708 76.9032C87.8475 76.56 88.0677 76.2056 88.446 75.9468C88.4969 75.5361 88.734 75.5024 89.0163 75.7668C89.4229 76.0199 89.8859 75.9918 90.3438 75.9862C90.7278 76.2675 91.1169 76.5319 91.5296 76.7906C91.5748 77.2351 92.2298 77.342 92.0943 77.8708C92.467 78.1746 92.9187 78.2196 93.1169 78.6921C93.3597 78.8271 93.4607 79.0522 93.4382 79.2547C93.5116 79.0747 93.5912 78.9059 93.8391 78.9003C94.0598 78.3827 94.6296 77.9777 94.6697 77.3588C95.0757 76.9594 95.3134 76.3575 95.4715 75.7949C95.9339 75.1648 95.087 74.8835 94.7538 74.456C94.031 74.1634 94.7199 73.3533 94.9232 72.8977C95.5839 72.8864 96.188 73.0214 96.7871 73.3083C96.8436 73.4265 96.9283 73.5109 97.0181 73.5784C96.6911 73.1508 97.7013 72.9258 97.6448 72.397C98.0909 72.1663 99 72.0369 98.6612 71.3281C98.5263 70.7374 99.3281 70.0511 98.712 69.6123C98.362 69.0891 97.6561 69.4716 97.3286 68.8922C97.2835 68.3971 96.3693 68.8528 96.8035 68.2452C96.7979 67.8795 96.4704 67.3226 97.1203 67.407C97.6561 67.5195 98.4128 67.722 98.6731 67.1426L98.6787 67.137C98.4755 67.1088 98.4303 66.6644 98.3908 66.5463C98.2835 66.1412 97.9673 65.618 98.4636 65.2748C97.9334 64.6166 98.8199 64.0147 98.6844 63.3115C98.7973 62.6139 99.0011 61.9107 99.3224 61.2975C99.3902 60.8137 99.7911 60.4986 99.899 60.043C100.678 60.4761 101.378 59.7448 102.112 59.6998C102.931 60.1048 103.908 60.0598 104.693 60.5661C105.296 60.7912 106.415 60.7574 106.28 59.8461C106.325 59.0303 107.28 58.9459 107.538 58.3159C107.431 57.7758 108.261 57.4664 108.097 58.2033C108.182 58.8109 108.3 59.4579 107.6 59.7167C107.42 60.7743 108.696 59.6717 109.136 60.2792C110.113 60.7405 108.893 61.4775 108.792 62.0963C108.967 62.7433 108.521 63.604 109.481 63.7447C110.08 63.9697 110.69 64.3241 111.079 64.8417C111.147 65.5674 111.994 66.1637 112.666 65.7755C113.14 65.8937 113.57 66.1806 114.055 66.3044C114.173 66.3156 114.213 66.3493 114.213 66.3944C114.642 65.8655 115.359 66.5012 115.941 66.5012C116.133 66.6138 117.031 66.2987 116.8 66.6363C116.721 66.8557 116.275 67.0863 116.534 67.2889C117.596 68.5203 118.663 69.7473 119.713 70.9849C119.883 71.5981 120.097 72.2057 120.243 72.8189C120.25 73.0777 120.17 73.3646 120.227 73.6065C120.583 73.989 120.893 74.4391 121.272 74.7767C121.515 74.8329 121.803 74.8273 122.028 74.9117C122.124 75.598 122.272 76.29 122.333 76.9707C121.989 77.0719 121.633 77.1563 121.289 77.2576C121.395 77.8933 121.543 78.529 121.627 79.1647C121.521 79.6372 121.407 80.1154 121.3 80.5936C121.272 80.5767 121.243 80.5711 121.21 80.5599L121.227 80.5655C121.39 80.7061 121.125 81.0493 121.164 81.28C121.187 81.8875 121.148 82.512 121.21 83.1083C121.458 83.4965 121.729 83.8734 121.961 84.2672C121.972 84.8129 122.023 85.3586 122.204 85.8818C122.345 86.4556 122.525 87.0294 122.65 87.6032C122.283 88.554 121.989 89.5272 121.594 90.4667C121.391 90.8886 121.109 91.2881 120.95 91.7325C120.882 92.1825 120.815 92.6326 120.747 93.0827C121.306 93.3471 121.893 93.5777 122.435 93.859C122.593 94.6804 122.808 95.4961 122.943 96.3118C122.633 96.4806 122.299 96.6212 121.983 96.7844C121.915 97.1163 121.904 97.4763 121.814 97.8026C121.639 97.9489 121.52 98.3821 121.306 98.3427L121.272 98.3258C121.475 98.5396 120.91 98.8996 120.814 99.1697C120.43 99.4791 120.679 99.9629 120.679 100.379C120.724 100.891 120.735 101.414 121.052 101.842C121.413 102.551 122.068 103.051 122.559 103.665C122.847 104.098 123.288 104.328 123.739 104.553C123.722 104.773 123.372 104.863 123.259 105.043C122.96 105.274 123.271 105.735 123.237 106.061C123.343 106.354 123.084 106.601 122.993 106.86C122.474 106.939 121.983 107.108 121.57 107.439C121.057 107.777 120.537 108.109 120.018 108.441C119.922 109.195 119.888 109.988 119.758 110.725C118.526 110.837 117.313 111.034 116.093 111.209C116.026 110.32 114.868 110.432 114.387 109.836C113.891 109.707 112.818 108.514 113.095 109.628C112.118 109.667 111.232 109.875 110.3 109.853C109.865 109.594 109.797 109.403 110.051 109.026C109.312 108.655 109.685 106.849 108.583 107.361C107.866 108.238 108.346 109.532 107.223 110.05C106.398 110.956 105.692 109.437 104.857 109.498C103.772 109.155 103.903 111.692 102.796 110.775C102.39 110.325 101.763 110.894 101.351 110.314C101.136 110.264 100.921 110.286 100.706 110.28C100.26 109.87 99.0407 109.639 99.3795 108.84C100.509 108.7 100.949 107.524 101.435 106.702C101.073 105.87 101.582 104.987 101.785 104.143C102.118 103.338 101.954 102.697 101.846 102.461C101.254 102.028 100.627 101.971 100.187 102.601C99.7126 102.511 99.5602 101.825 99.17 102.506C98.6228 102.77 98.4529 103.586 98.5438 103.974C98.1711 103.636 97.6911 103.04 97.2281 103.71C96.511 104.452 95.5229 103.721 94.7549 103.58C94.083 104.165 93.699 103.501 93.3314 102.989C93.3151 102.821 93.2586 102.674 93.2354 102.826C93.1513 103.119 92.6092 103.051 92.3664 103.282C91.9593 103.411 91.9311 103.85 91.6098 104.07C91.3043 104.345 91.2592 104.762 91.0276 105.088C91.0564 105.442 91.0276 105.808 90.9486 106.179C90.8808 106.618 90.4353 106.905 90.3105 107.327C90.3952 107.805 89.8526 107.828 89.5087 107.687C89.1586 107.653 88.7069 107.456 88.4359 107.771C88.3235 107.974 88.1423 108.396 87.996 107.963C87.9395 107.535 87.4878 107.445 87.1372 107.535C87.0079 107.563 86.8718 107.574 86.7363 107.552V107.535C86.6516 108.036 86.6798 108.576 86.2732 108.908C85.8108 109.431 85.3082 109.943 84.8051 110.415C84.2461 110.472 83.546 110.477 82.9988 110.849C82.293 110.927 82.0445 111.743 81.5527 112.182C81.293 112.784 80.3387 112.654 79.8243 112.435C79.5143 112.722 79.0225 113.054 78.966 112.396C78.6385 111.766 78.1027 111.366 77.4076 111.282C77.1704 110.882 77.3229 110.747 77.5143 110.483C77.6498 109.74 78.0626 108.835 78.5025 108.351C78.9768 108.131 79.2986 107.799 79.8689 107.935C79.9818 107.591 80.4844 106.787 79.7622 106.731C79.5702 106.404 79.1524 106.933 79.0728 106.416C78.5025 106.264 77.7746 105.769 78.4861 105.234C78.5764 104.508 78.2941 103.794 78.3788 103.035C78.1925 102.258 77.0061 103.366 76.6058 102.646C75.7644 102.061 76.2043 101.049 77.0908 100.795C77.5199 100.576 78.0338 101.049 78.1241 100.312C78.83 99.3778 77.2771 99.0572 77.114 98.2977C77.075 98.022 77.0919 97.7463 77.1032 97.4707Z\" fill=\"#91A7FF\" stroke=\"white\" stroke-width=\"1.77165\"/>\r\n            <path d=\"M53.7147 104.507C54.2573 104.586 54.6243 104.951 54.7824 105.474C55.1382 105.936 55.0704 105.041 55.4719 105.244C56.093 105.249 56.674 105.626 56.9564 106.178C57.1596 106.819 57.9225 106.74 58.1201 107.342C58.6396 107.663 59.1365 106.993 59.5713 106.768C59.9101 106.47 60.2427 106.211 60.7063 106.358C61.1128 106.127 61.3443 106.442 61.4177 106.791C61.9146 106.965 61.7345 105.699 62.2816 106.329C62.5978 106.695 63.0665 106.448 63.394 106.639C63.4448 106.819 63.5578 106.898 63.6876 106.943C63.8463 106.78 63.2641 106.358 63.852 106.358C63.9536 106.431 64.0383 106.538 64.1224 106.628C64.1614 106.628 64.2066 106.639 64.2353 106.661C64.2579 106.639 64.2862 106.622 64.3144 106.611C64.5459 106.313 65.6814 104.951 65.9801 105.249C66.0479 105.249 66.1213 105.244 66.1947 105.238C66.3477 104.957 66.494 104.692 66.7085 104.434C66.7368 104.434 67.267 104.434 67.2901 104.338C67.3861 104.338 67.5329 104.023 67.612 103.933C67.7018 103.888 67.8881 103.91 67.9282 103.871C68.0016 103.871 68.3291 103.899 68.3686 103.854C69.0513 103.854 69.5651 103.359 70.1016 102.993C70.926 102.993 71.18 101.435 71.9593 101.823C72.6035 101.553 72.9248 100.873 73.2072 100.332C73.6532 99.8993 74.1897 99.5337 74.551 99.033C75.0818 98.7798 75.3817 98.2454 75.8334 97.9191C76.2117 97.6209 76.7029 97.7447 77.1039 97.4746C77.0304 98.0597 77.0869 98.6954 77.6623 98.9654C77.9565 99.3311 78.594 99.6293 78.1993 100.158C78.0463 100.552 77.8656 100.985 77.3913 100.698C76.8836 100.85 76.3579 101.176 76.0982 101.643C76.1998 102.121 76.3642 102.566 76.8328 102.836C77.3071 103.095 77.9226 102.51 78.3969 102.853C78.267 103.483 78.5155 104.147 78.4816 104.743C78.6567 105.21 78.1197 105.503 78.1993 105.924C78.5488 106.217 79.1078 106.408 79.3342 106.684C79.6329 106.487 80.0169 106.83 80.1869 106.993C79.9661 107.415 80.0965 108.208 79.3907 107.922C78.9836 107.826 78.8097 108.479 78.3517 108.36C78.131 108.872 77.917 109.39 77.6403 109.879C77.5607 110.284 77.5273 110.622 77.245 110.847C77.3348 111.713 78.227 111.145 78.5601 111.854C79.0971 112.394 79.2947 113.041 79.0802 113.772C78.8204 114.419 78.5324 115.077 78.131 115.657C78.3405 116.091 78.5206 116.585 78.8368 117.03C79.7007 116.844 79.5878 117.654 79.887 118.093C80.4517 118.593 81.677 118.723 81.3828 119.741C81.795 120.366 79.9943 120.292 80.9825 120.669C80.9373 121.221 80.0559 121.564 79.6555 121.991C79.9091 122.97 78.5262 121.705 79.0226 121.277C78.6561 120.81 78.3964 121.474 78.0124 121.581C77.3574 121.716 77.8424 122.059 78.2439 121.744C79.0965 121.654 77.8537 122.053 78.2264 122.329C78.8707 122.773 77.8712 122.813 78.0288 123.33C78.6499 123.364 78.1473 123.707 78.0175 124.062C77.4748 123.477 77.3681 123.077 76.481 123.145C76.0575 122.661 75.5273 122.723 75.2337 123.291C74.612 123.707 73.8221 123.471 73.4263 124.202C73.4206 124.692 73.7538 125.069 73.8159 125.631C74.3975 126.514 72.8729 125.294 73.4375 126.064C72.9751 126.627 72.2512 125.946 71.6414 126.081C71.896 126.514 71.0886 126.818 71.2975 127.336C70.9135 127.617 70.5352 126.149 70.0044 126.914C70.2297 127.578 69.5239 127.431 69.3607 126.965C68.7057 126.588 69.0615 127.398 69.4115 127.578C69.1066 128.028 68.389 127.64 68.1411 127.094C67.8192 127.257 68.0959 127.972 68.2258 128.309C67.7966 128.647 66.8757 127.437 66.8757 128.489C66.6555 129.49 65.6792 127.6 65.7808 128.635C66.2608 129.384 65.464 129.699 64.7808 129.412C64.0976 128.68 64.3968 130.121 64.0976 130.154C63.0981 129.997 64.036 129.49 64.1823 128.99C64.5713 128.872 64.6792 128.41 64.9163 128.045C64.8373 128.118 64.769 128.173 64.7074 128.191C64.691 127.566 64.0693 127.24 63.8717 126.7C63.189 126.408 63.477 125.699 63.0027 125.221C62.4093 124.956 62.6633 124.236 62.7768 123.752C62.8113 123.145 63.2619 122.773 63.2003 122.16C62.5849 121.907 62.2178 121.333 61.5346 121.125C61.5685 121.052 61.5798 120.979 61.586 120.906C61.5064 121.204 61.241 121.418 61.0885 121.704C60.857 122.138 60.3884 122.43 60.2641 122.92C60.0388 123.465 59.6424 122.824 59.3833 122.638C59.1461 122.385 58.7955 122.447 58.5527 122.295C58.5815 122.34 58.6035 122.391 58.6148 122.447C58.4166 122.65 58.4284 123.184 58.0671 123.212C57.5927 123.105 57.2765 123.471 57.1405 123.876C56.7791 124.067 57.084 124.461 56.7966 124.692C56.7345 124.669 56.6667 124.635 56.5989 124.596C56.717 124.725 56.7514 124.883 56.6102 125.063C56.119 125.372 56.4239 125.862 56.6949 126.228C56.8474 126.61 57.2088 126.649 57.5476 126.734C57.4798 126.959 57.2534 127.139 57.1856 127.33C57.3437 127.437 57.6543 127.808 57.2596 127.764C56.9598 127.921 57.3833 128.338 57.0445 128.433C56.7113 128.158 56.4403 127.77 55.966 127.747C55.5312 127.646 55.927 126.436 55.407 126.948C55.2212 127.201 55.6277 127.668 55.1083 127.725C54.9671 128.073 54.9055 128.456 54.5549 128.681C54.4307 128.833 54.2669 128.94 54.137 129.08C53.9569 129.362 53.6972 129.457 53.6068 129.8C53.285 130.172 52.7486 130.234 52.2855 130.251C52.071 130.104 51.3652 130.296 51.4837 130.065C51.9524 130.037 52.2742 129.694 52.1551 129.232C52.0258 128.833 52.8728 129.002 52.477 128.608C52.2793 128.22 52.0704 127.798 51.7881 127.46C51.5509 127.291 51.923 126.796 51.6588 126.526C51.4549 126.194 51.5058 125.711 51.1726 125.587C51.2629 125.384 50.9298 125.272 50.9925 125.08C50.722 124.99 50.5808 124.54 50.2584 124.884C50.1286 125.17 50.298 125.834 50.7164 125.75C50.5408 126.127 49.993 125.919 49.8575 125.592C49.5808 125.441 49.4459 125.058 49.1686 124.996C49.2358 125.114 49.2415 125.272 49.1342 125.491C48.8355 126.228 47.8242 126.262 47.4289 126.926C46.8586 126.976 46.0738 127.044 46.2601 127.831C46.2545 128.495 45.2776 129.418 45.0009 128.383C44.7468 127.73 45.3736 127.303 45.0913 126.656C45.0517 125.997 45.1873 125.294 44.8993 124.681C44.5097 124.259 43.7079 124.366 43.211 124.552C42.7818 124.89 42.8439 125.565 42.3753 125.852C42.3979 126.673 41.517 126.617 40.9749 126.589C40.5458 126.257 41.4154 125.312 40.5119 125.216C39.9303 125.059 39.6988 124.305 39.0438 124.417C38.3944 124.44 37.7507 124.507 37.1409 124.209C36.9997 124.181 36.9094 124.097 36.8416 123.984C36.7795 124.406 35.9382 124.007 35.4526 123.793C34.7806 123.663 34.1595 124.147 34.041 124.834C33.8264 125.649 33.1488 124.997 32.714 124.856C32.1268 124.226 31.5452 124.98 30.845 124.704C30.7264 124.125 30.286 123.72 29.71 123.624C29.6649 123.444 29.8569 123.146 29.902 122.921C30.2634 121.672 30.6417 120.429 31.0596 119.197C31.2516 118.814 31.1443 118.398 31.133 117.987C31.1781 117.559 30.8789 117.228 30.7095 116.862C30.2916 116.513 29.806 116.221 29.36 115.894C29.2583 115.652 29.2244 115.371 29.1454 115.118C29.2527 114.831 29.4277 114.567 29.5519 114.286C29.8851 113.099 30.3707 111.963 30.8055 110.809C31.3024 109.645 31.6242 108.424 31.9969 107.22C32.1889 107.344 32.1945 107.338 31.9969 107.22C32.2905 106.129 32.5785 105.043 32.8721 103.957C32.9116 103.811 32.9455 103.67 32.985 103.524C33.2109 102.545 33.4029 101.555 33.6175 100.57C33.8264 99.8279 34.0692 99.0965 34.2894 98.3596C34.5153 97.6957 34.6225 96.9925 34.7863 96.3062C34.9726 96.4074 35.1646 96.5087 35.351 96.61C35.6897 96.8744 35.9834 97.2007 36.3165 97.4707C36.7005 97.887 37.028 98.3539 37.4119 98.7759C37.7959 99.119 38.2194 99.4284 38.5243 99.8504C38.6768 100.16 39.1285 100.48 38.9591 100.84C39.0325 100.942 39.0438 100.829 39.4842 101.212C40.0432 101.538 41.3702 102.163 41.3984 101.037C41.2121 100.419 41.3758 99.7547 41.5001 99.164C41.7937 98.7702 41.9461 97.6789 42.5729 98.3539C43.4199 98.0502 43.7587 98.9053 43.9732 99.4903C44.2838 100.154 43.7079 100.599 43.7304 101.229C43.849 101.774 43.5554 103.029 44.3516 102.967C45.0969 103.029 45.6107 102.455 46.1472 102.129C46.582 101.786 47.4402 101.769 46.9716 102.494C46.7514 103.282 47.796 103.299 48.1009 103.963C48.2195 104.683 47.9253 105.403 47.7903 106.162C47.8976 106.686 48.3488 107.867 47.604 107.996C47.0506 108.238 46.5481 107.878 46.0455 107.816C46.2432 108.289 46.1472 109.043 46.3335 109.358C46.6271 109.313 46.8191 109.442 46.9716 109.639C46.9546 109.594 46.949 109.543 46.9433 109.498C47.4239 109.476 47.9196 109.144 48.355 109.51C48.8807 109.234 48.8857 110.477 49.4052 109.858C49.6757 109.341 49.84 108.773 49.5916 108.193C49.5684 107.614 50.4442 107.451 50.8564 107.558C51.1664 107.434 51.6187 107.597 51.4148 107.102C51.7542 106.742 51.8265 106.348 51.5052 105.982C51.7649 105.695 52.4143 106.365 52.8095 106.416C52.8383 106.489 52.8773 106.579 52.9287 106.674C52.9343 106.354 53.3973 106.224 53.6565 106.084C54.0422 105.508 53.5063 105.052 53.7147 104.507Z\" fill=\"#4C6EF5\"/>\r\n            <path d=\"M31.9969 107.22C31.6242 108.424 31.3024 109.645 30.8055 110.809C30.3707 111.963 29.8851 113.099 29.5519 114.286C29.4277 114.567 29.2527 114.831 29.1454 115.118C29.2244 115.371 29.2583 115.652 29.36 115.894C29.806 116.221 30.2916 116.513 30.7095 116.862C30.8789 117.228 31.1781 117.559 31.133 117.987C31.1443 118.398 31.2516 118.814 31.0596 119.197C30.6417 120.429 30.2634 121.672 29.902 122.921C29.8569 123.146 29.6649 123.444 29.71 123.624C30.286 123.72 30.7264 124.125 30.845 124.704C31.5452 124.98 32.1268 124.226 32.714 124.856C33.1488 124.997 33.8264 125.649 34.041 124.834C34.1595 124.147 34.7806 123.663 35.4526 123.793C35.9382 124.007 36.7795 124.406 36.8416 123.984C36.9094 124.097 36.9997 124.181 37.1409 124.209C37.7507 124.507 38.3944 124.44 39.0438 124.417C39.6988 124.305 39.9303 125.059 40.5119 125.216C41.4154 125.312 40.5458 126.257 40.9749 126.589C41.517 126.617 42.3979 126.673 42.3753 125.852C42.8439 125.565 42.7818 124.89 43.211 124.552C43.7079 124.366 44.5097 124.259 44.8993 124.681C45.1873 125.294 45.0517 125.997 45.0913 126.656C45.3736 127.303 44.7468 127.73 45.0009 128.383C45.2776 129.418 46.2545 128.495 46.2601 127.831C46.0738 127.044 46.8586 126.976 47.4289 126.926C47.8242 126.262 48.8355 126.228 49.1342 125.491C49.2415 125.272 49.2358 125.114 49.1686 124.996C49.4459 125.058 49.5808 125.441 49.8575 125.592C49.993 125.919 50.5408 126.127 50.7164 125.75C50.298 125.834 50.1286 125.17 50.2584 124.884C50.5808 124.54 50.722 124.99 50.9925 125.08C50.9298 125.272 51.2629 125.384 51.1726 125.587C51.5058 125.711 51.4549 126.194 51.6588 126.526C51.923 126.796 51.5509 127.291 51.7881 127.46C52.0704 127.798 52.2793 128.22 52.477 128.608C52.8728 129.002 52.0258 128.833 52.1551 129.232C52.2742 129.694 51.9524 130.037 51.4837 130.065C51.3652 130.296 52.071 130.104 52.2855 130.251C52.7486 130.234 53.285 130.172 53.6068 129.8C53.6972 129.457 53.9569 129.362 54.137 129.08C54.2669 128.94 54.4307 128.833 54.5549 128.681C54.9055 128.456 54.9671 128.073 55.1083 127.725C55.6277 127.668 55.2212 127.201 55.407 126.948C55.927 126.436 55.5312 127.646 55.966 127.747C56.4403 127.77 56.7113 128.158 57.0445 128.433C57.3833 128.338 56.9598 127.921 57.2596 127.764C57.6543 127.808 57.3437 127.437 57.1856 127.33C57.2534 127.139 57.4798 126.959 57.5476 126.734C57.2088 126.649 56.8474 126.61 56.6949 126.228C56.4239 125.862 56.119 125.372 56.6102 125.063C56.7514 124.883 56.717 124.725 56.5989 124.596C56.6667 124.635 56.7345 124.669 56.7966 124.692C57.084 124.461 56.7791 124.067 57.1405 123.876C57.2765 123.471 57.5927 123.105 58.0671 123.212C58.4284 123.184 58.4166 122.65 58.6148 122.447C58.6035 122.391 58.5815 122.34 58.5527 122.295C58.7955 122.447 59.1461 122.385 59.3833 122.638C59.6424 122.824 60.0388 123.465 60.2641 122.92C60.3884 122.43 60.857 122.138 61.0885 121.704C61.241 121.418 61.5064 121.204 61.586 120.906C61.5798 120.979 61.5685 121.052 61.5346 121.125C62.2178 121.333 62.5849 121.907 63.2003 122.16C63.2619 122.773 62.8113 123.145 62.7768 123.752C62.6633 124.236 62.4093 124.956 63.0027 125.221C63.477 125.699 63.189 126.408 63.8717 126.7C64.0693 127.24 64.691 127.566 64.7074 128.191C64.769 128.173 64.8373 128.118 64.9163 128.045C64.6792 128.41 64.5713 128.872 64.1823 128.99C64.036 129.49 63.0981 129.997 64.0976 130.154C64.3968 130.121 64.0976 128.68 64.7808 129.412C65.464 129.699 66.2608 129.384 65.7808 128.635C65.6792 127.6 66.6555 129.49 66.8757 128.489C66.8757 127.437 67.7966 128.647 68.2258 128.309C68.0959 127.972 67.8192 127.257 68.1411 127.094C68.389 127.64 69.1066 128.028 69.4115 127.578C69.0615 127.398 68.7057 126.588 69.3607 126.965C69.5239 127.431 70.2297 127.578 70.0044 126.914C70.5352 126.149 70.9135 127.617 71.2975 127.336C71.0886 126.818 71.896 126.514 71.6414 126.081C72.2512 125.946 72.9751 126.627 73.4375 126.064C72.8729 125.294 74.3975 126.514 73.8159 125.631C73.7538 125.069 73.4206 124.692 73.4263 124.202C73.8221 123.471 74.612 123.707 75.2337 123.291C75.5273 122.723 76.0575 122.661 76.481 123.145C77.3681 123.077 77.4748 123.477 78.0175 124.062C78.1473 123.707 78.6499 123.364 78.0288 123.33C77.8712 122.813 78.8707 122.773 78.2264 122.329C77.8537 122.053 79.0965 121.654 78.2439 121.744C77.8424 122.059 77.3574 121.716 78.0124 121.581C78.3964 121.474 78.6561 120.81 79.0226 121.277C78.5262 121.705 79.9091 122.97 79.6555 121.991C80.0559 121.564 80.9373 121.221 80.9825 120.669C79.9943 120.292 81.795 120.366 81.3828 119.741C81.677 118.723 80.4517 118.593 79.887 118.093C79.5878 117.654 79.7007 116.844 78.8368 117.03C78.5206 116.585 78.3404 116.091 78.131 115.657C78.5324 115.077 78.8204 114.419 79.0801 113.772C79.2947 113.041 79.0971 112.394 78.5601 111.854C78.227 111.145 77.3348 111.713 77.245 110.847C77.5273 110.622 77.5607 110.284 77.6403 109.879C77.917 109.39 78.131 108.872 78.3517 108.36C78.8097 108.479 78.9836 107.826 79.3907 107.922C80.0965 108.208 79.9661 107.415 80.1869 106.993C80.0169 106.83 79.6329 106.487 79.3342 106.684C79.1078 106.408 78.5488 106.217 78.1993 105.924C78.1197 105.503 78.6567 105.21 78.4816 104.743C78.5155 104.147 78.267 103.483 78.3969 102.853C77.9226 102.51 77.3071 103.095 76.8328 102.836C76.3642 102.566 76.1998 102.121 76.0982 101.643C76.3579 101.176 76.8836 100.85 77.3913 100.698C77.8656 100.985 78.0463 100.552 78.1993 100.158C78.594 99.6293 77.9565 99.3311 77.6623 98.9654C77.0869 98.6954 77.0304 98.0597 77.1039 97.4746C76.7029 97.7447 76.2117 97.6209 75.8334 97.9191C75.3817 98.2454 75.0818 98.7798 74.551 99.033C74.1897 99.5337 73.6532 99.8993 73.2072 100.333C72.9248 100.873 72.6035 101.553 71.9593 101.823C71.1801 101.435 70.926 102.993 70.1016 102.993C69.5651 103.359 69.0513 103.854 68.3686 103.854C68.3291 103.899 68.0016 103.871 67.9282 103.871C67.8881 103.91 67.7018 103.888 67.612 103.933C67.5329 104.023 67.3861 104.338 67.2901 104.338C67.267 104.434 66.7368 104.434 66.7085 104.434C66.494 104.692 66.3477 104.957 66.1947 105.238C66.1213 105.244 66.0479 105.249 65.9801 105.249C65.6814 104.951 64.5459 106.313 64.3144 106.611C64.2862 106.622 64.2579 106.639 64.2353 106.661C64.2066 106.639 64.1614 106.628 64.1224 106.628C64.0383 106.538 63.9536 106.431 63.8519 106.358C63.2641 106.358 63.8463 106.78 63.6876 106.943C63.5578 106.898 63.4448 106.819 63.394 106.639C63.0665 106.448 62.5978 106.695 62.2816 106.329C61.7345 105.699 61.9146 106.965 61.4177 106.791C61.3443 106.442 61.1128 106.127 60.7063 106.358C60.2427 106.211 59.9101 106.47 59.5713 106.768C59.1365 106.993 58.6396 107.663 58.1201 107.342C57.9225 106.74 57.1596 106.819 56.9564 106.178C56.674 105.626 56.093 105.249 55.4719 105.244C55.0704 105.041 55.1382 105.936 54.7824 105.474C54.6243 104.951 54.2573 104.586 53.7147 104.507C53.5063 105.052 54.0422 105.508 53.6565 106.084C53.3973 106.224 52.9343 106.354 52.9287 106.674C52.8773 106.579 52.8383 106.489 52.8095 106.416C52.4143 106.365 51.7649 105.695 51.5052 105.982C51.8265 106.348 51.7542 106.742 51.4148 107.102C51.6187 107.597 51.1664 107.434 50.8564 107.558C50.4442 107.451 49.5684 107.614 49.5916 108.193C49.84 108.773 49.6757 109.341 49.4052 109.858C48.8857 110.477 48.8807 109.234 48.355 109.51C47.9196 109.144 47.4239 109.476 46.9433 109.498C46.949 109.543 46.9546 109.594 46.9716 109.639C46.8191 109.442 46.6271 109.313 46.3335 109.358C46.1472 109.043 46.2432 108.289 46.0455 107.816C46.5481 107.878 47.0506 108.238 47.604 107.996C48.3488 107.867 47.8976 106.686 47.7903 106.162C47.9253 105.403 48.2195 104.683 48.1009 103.963C47.796 103.299 46.7514 103.282 46.9716 102.494C47.4402 101.769 46.582 101.786 46.1472 102.129C45.6107 102.455 45.0969 103.029 44.3516 102.967C43.5554 103.029 43.849 101.774 43.7304 101.229C43.7079 100.599 44.2838 100.154 43.9732 99.4903C43.7587 98.9053 43.4199 98.0502 42.5729 98.3539C41.9461 97.6789 41.7937 98.7702 41.5001 99.164C41.3758 99.7547 41.2121 100.419 41.3984 101.037C41.3702 102.163 40.0432 101.538 39.4842 101.212C39.0438 100.829 39.0325 100.942 38.9591 100.84C39.1285 100.48 38.6768 100.16 38.5243 99.8504C38.2194 99.4284 37.7959 99.119 37.4119 98.7759C37.028 98.3539 36.7005 97.887 36.3165 97.4707C35.9834 97.2007 35.6897 96.8744 35.351 96.61C35.1646 96.5087 34.9726 96.4074 34.7863 96.3062C34.6225 96.9925 34.5153 97.6957 34.2894 98.3596C34.0692 99.0965 33.8264 99.8279 33.6175 100.57C33.4029 101.555 33.2109 102.545 32.985 103.524C32.9455 103.67 32.9116 103.811 32.8721 103.957C32.5785 105.043 32.2905 106.129 31.9969 107.22ZM31.9969 107.22C32.1889 107.344 32.1945 107.338 31.9969 107.22Z\" stroke=\"white\" stroke-width=\"1.77165\"/>\r\n            <path d=\"M62.4313 223.148C61.3302 222.709 60.822 221.246 59.3709 221.595C58.4731 221.347 57.3663 221.55 57.3494 220.413C56.7509 219.518 54.2833 220.857 55.6046 219.4C56.0507 218.736 56.8361 217.864 56.0733 217.166C56.8181 217.223 56.8073 217.014 56.604 216.374C55.7509 216.667 54.2946 216.25 55.39 215.31C55.6837 214.578 54.7633 213.206 54.4363 212.368C53.6402 211.783 53.3686 210.63 52.7932 210.152C51.4832 210.248 50.901 212.368 49.5069 211.277C49.1737 209.685 47.508 211.581 47.045 210.152C45.91 209.938 46.2658 210.726 46.7457 211.344C46.6893 212.042 45.3849 212.464 45.5995 211.395C45.1139 210.495 43.2787 211.642 43.5949 210.068C42.6124 210.619 41.7598 209.24 40.6418 209.809C40.5797 209.809 40.5176 209.815 40.4555 209.815C40.6587 209.725 40.7547 209.545 40.5684 209.14C40.4667 208.538 40.015 208.009 40.0376 207.367C39.473 206.715 40.2409 206.209 40.7886 205.793C41.0145 205.213 41.6186 204.943 41.9066 204.38C41.901 204.341 41.8953 204.301 41.884 204.268C42.1833 204.42 42.6971 204.127 42.9456 203.767C43.3634 203.007 43.7587 202.277 44.7977 202.349C45.6672 202.226 46.5142 201.939 47.4064 202.113C47.7734 201.297 46.814 200.453 46.4244 199.694C45.9953 199.069 47.3279 197.719 46.0179 197.651C45.154 197.686 44.4933 197.291 43.6971 197.094C43.0421 197.691 42.4888 196.791 41.879 196.526C42.4041 196.003 42.1387 195.204 42.3024 194.496C42.0201 193.888 42.8219 193.68 42.6356 193.095C42.0032 193.196 41.2691 193.596 41.0658 194.17C40.9303 195.086 40.0495 194.963 39.5526 194.361C38.8016 194.265 38.5701 193.578 38.1127 193.05C37.7796 193.23 37.6214 194.456 37.1245 194.94C36.7688 195.682 35.8597 196.397 36.1082 197.274C37.1584 197.859 36.4018 198.602 35.775 199.198C35.8371 199.266 35.8992 199.328 35.967 199.384C35.775 199.288 35.583 199.209 35.3798 199.187C34.7699 198.844 33.8495 199.586 33.4261 198.748C33.1889 198.737 33.0195 198.861 32.884 199.052C32.9743 198.71 32.9179 198.383 32.4605 198.107C31.7942 196.976 30.7552 198.033 30.0155 198.416C29.3605 199.091 28.8185 198.467 28.3611 198.129C28.0449 198.821 27.74 198.095 27.7004 197.656C27.1866 197.628 26.6671 197.595 26.1533 197.561C25.7354 197.426 25.9782 198.135 25.5378 198.118C24.6174 198.45 23.9342 199.203 23.0759 199.67L23.0985 199.693C23.0703 199.676 23.0364 199.676 23.0082 199.715C22.7428 199.862 22.483 200.025 22.212 200.16C22.1216 200.655 22.0257 201.151 21.941 201.639C21.9635 201.713 22.0765 201.69 22.1329 201.729C22.2572 201.764 22.3814 201.825 22.5113 201.842L22.5395 201.836C22.5226 201.842 22.5056 201.853 22.4887 201.859C22.387 202.044 22.2628 202.224 22.1668 202.41V202.483V202.393C21.9014 202.466 21.6304 202.533 21.365 202.601C21.3029 202.59 21.2069 202.68 21.1279 202.703C20.885 202.826 20.6366 202.945 20.3994 203.074C20.2639 203.231 20.1341 203.383 19.9985 203.541C19.7332 203.58 19.4621 203.62 19.1911 203.664C18.9144 203.586 18.6434 203.462 18.3667 203.372L18.3497 203.388C18.361 203.321 18.2538 203.248 18.2029 203.175C18.011 202.96 17.8246 202.741 17.6383 202.528C17.6496 202.263 17.706 201.999 17.6835 201.734C17.5762 201.695 17.435 201.734 17.3164 201.723C17.1809 201.729 17.0906 201.689 16.972 201.763C16.6332 201.891 16.3 202.049 15.9556 202.15C15.3232 202.201 14.6964 202.251 14.064 202.296C13.9567 202.291 13.8156 202.381 13.6913 202.415C13.2453 202.572 12.7992 202.735 12.3531 202.898C12.2966 202.792 12.2402 202.673 12.1893 202.572C11.9522 202.617 11.7094 202.64 11.4779 202.696C11.409 202.799 11.5897 202.844 11.6349 202.912C12.0132 203.216 12.3915 203.519 12.7698 203.824C12.8319 203.992 12.99 204.127 13.0917 204.28C13.5095 204.836 13.9499 205.382 14.3565 205.945C14.7009 207.059 15.0397 208.173 15.3785 209.281C15.4406 209.399 15.4858 209.596 15.61 209.416C15.627 209.399 15.6439 209.388 15.6609 209.371C15.627 209.427 15.5762 209.472 15.4971 209.511C15.5931 209.708 15.6947 209.905 15.7964 210.096C15.7568 210.89 15.7173 211.677 15.6721 212.465C15.6157 212.752 15.9206 213.011 15.7964 213.292C15.706 213.826 15.4519 214.311 15.2543 214.811C15.0962 215.244 14.8873 215.649 14.6445 216.042C14.4073 216.38 14.3283 216.78 14.1927 217.162C14.1532 217.347 14.0346 217.522 14.0346 217.708C14.3452 217.798 14.6784 217.837 14.9946 217.91C15.5987 217.466 16.1973 216.999 16.8015 216.543C17.1572 216.622 17.5129 216.7 17.8687 216.785C18.2244 216.724 18.5858 216.605 18.9472 216.532C19.0488 216.397 19.1278 216.239 19.2238 216.093C19.8845 216.177 20.5508 216.268 21.2114 216.352C21.697 216.2 22.1713 216.003 22.6513 215.835C22.8941 215.694 23.103 215.492 23.3289 215.333C23.3119 215.261 23.2894 215.193 23.2668 215.126C23.391 215.3 23.5547 215.357 23.8314 215.103C24.2888 214.928 24.7236 214.698 25.0228 214.293C25.4012 213.944 25.8303 213.556 26.378 213.551C26.8467 213.433 27.513 213.59 27.6428 212.977C27.8969 212.482 28.1341 211.953 28.6818 211.722C29.0545 211.306 29.5006 211.435 29.9184 211.717C31.1211 212.64 32.3182 213.579 33.5661 214.451C33.9783 214.361 34.5034 214.524 34.8253 214.198C35.2714 213.843 35.6892 213.478 35.5085 212.847C35.5254 212.392 35.0398 211.959 35.1358 211.554C35.2657 211.39 35.373 211.216 35.469 211.036L35.4633 211.064C35.4238 211.312 35.7174 211.56 35.8755 211.722C36.1748 211.802 36.5136 211.88 36.8298 211.863C36.5983 211.959 36.4684 212.105 36.6548 212.555C36.7507 213.674 36.8524 214.788 36.9484 215.908C37.417 216.217 37.8857 216.521 38.3487 216.83C38.5464 217.467 37.7389 217.202 37.3662 217.326C36.8693 217.449 36.4289 217.382 36.0788 216.988C35.7344 216.65 35.3222 216.459 34.8366 216.454C34.0178 216.252 33.1765 215.885 32.3351 215.975C31.7761 215.665 31.155 215.424 30.8444 214.822C30.3475 214.158 29.8789 213.46 29.1279 213.061C28.9359 212.69 27.7784 213.078 28.3487 213.348C29.574 214.473 30.7089 215.7 31.7027 217.021C32.3013 218.141 32.9901 219.221 33.2725 220.47C33.6226 221.742 34.142 223.002 34.142 224.335C34.1703 224.796 34.1985 225.252 34.2267 225.713C34.4413 227.496 34.4865 229.319 34.1646 231.092C34.0235 232.273 33.6564 233.409 33.408 234.568H33.3741C33.1821 236.014 32.5384 237.33 32.0641 238.698C31.8947 239.103 31.4938 239.744 31.6011 240.166L31.5164 240.053C31.0477 241.19 30.5169 242.298 29.9862 243.412C29.7208 243.626 29.4497 243.846 29.19 244.064C29.2126 244.267 29.3425 244.498 29.4215 244.689C29.5909 244.661 29.7885 244.554 29.9523 244.491C30.8783 245.043 31.81 245.605 32.7135 246.202C32.7812 246.309 32.7586 246.607 32.8377 246.685C32.9506 247.282 33.1144 247.878 33.2386 248.474C33.2104 249.543 33.2104 249.543 33.1991 250.303C33.2612 250.837 33.3685 251.394 33.3967 251.929C33.5548 251.985 33.6677 252.019 33.8315 252.019L34.0969 252.12C34.1364 252.12 34.1759 252.115 34.2211 252.115C34.4978 252.339 34.797 252.284 35.0794 252.486C35.356 252.559 35.6101 252.435 35.8925 252.435C35.9264 252.396 35.9489 252.362 35.9941 252.339L36.1353 252.334C36.2651 252.322 36.3837 252.373 36.5023 252.429C36.1692 252.351 35.8021 252.255 36.1466 252.789C36.5644 253.869 37.8349 254.23 37.9873 255.35C38.5802 255.828 39.478 254.511 40.1274 255.333C40.8558 255.575 41.5503 256.564 42.0359 255.456C42.5611 255.913 43.7299 255.423 42.8095 254.849C42.7643 253.696 43.3911 252.227 44.3171 251.85C43.967 250.54 45.1585 249.561 46.4007 250C47.2929 250.073 48.2014 250 48.862 249.449C49.5622 250.113 50.2065 248.723 51.0591 249.573C52.0636 249.798 53.097 249.55 53.9389 250.315C55.2715 251.091 53.9276 248.954 55.1134 248.723C56.1693 248.042 55.1422 246.675 55.7684 245.758C56.5306 244.74 56.3048 243.614 56.3161 242.462C56.7458 241.162 55.0066 240.83 54.4584 239.806C54.0574 238.54 52.6012 240.11 51.9462 238.911C51.6351 238.563 51.1896 238.045 51.0309 238.107C51.0704 237.775 51.1608 237.449 51.3979 237.139C51.844 236.397 51.7762 234.276 52.9112 235.631C54.1201 235.44 52.8948 233.184 54.2438 233.443C54.7294 232.368 54.9496 231.023 56.5419 231.198C56.5871 230.517 57.5809 230.258 57.739 229.808C57.7785 229.971 57.7729 230.056 57.7503 229.927C58.3946 230.697 59.5798 229.859 60.3985 230.033C61.4883 229.876 62.0981 228.829 63.2839 228.953C64.3562 228.233 63.7865 226.619 63.5092 225.578C63.5606 224.599 62.5216 224.081 62.4313 223.148Z\" fill=\"#4263EB\" stroke=\"white\" stroke-width=\"1.77165\"/>\r\n            <path d=\"M94.808 289.25C95.4687 289.318 96.135 289.363 96.7962 289.442C97.1406 289.622 97.4902 289.825 97.8352 289.993C97.9193 289.92 97.7674 289.813 97.751 289.734C97.5472 289.368 97.3157 289.02 97.135 288.643L96.8589 287.821C96.8865 287.349 96.9097 286.876 96.943 286.404C96.7341 285.796 96.3727 285.256 96.0508 284.705C96.249 284.356 96.4461 284.002 96.6381 283.653C96.3783 283.068 96.0621 282.499 95.7798 281.926C95.7567 281.481 95.808 281.014 95.8137 280.564C95.7911 280.255 95.6274 279.962 95.5539 279.658C95.5822 279.377 95.6951 279.096 95.7516 278.815C95.7804 278.561 95.9549 278.309 95.8871 278.044C95.9379 277.695 95.6274 277.887 95.4241 277.819C95.5652 277.803 95.7064 277.791 95.8476 277.813C95.7747 277.426 95.7008 277.043 95.6336 276.654C95.4297 276.362 95.1028 276.137 94.8594 275.867C95.0627 275.749 95.3061 275.682 95.4924 275.541C95.3512 275.203 95.0802 274.899 94.8933 274.568C94.7866 274.281 94.9837 273.926 95.0057 273.611C94.8368 273.173 94.5884 272.745 94.3846 272.312C94.3733 271.951 94.5093 271.569 94.5545 271.198C94.3337 270.99 94.0119 270.866 93.7583 270.686C93.38 270.585 93.4365 270.169 93.3292 269.871C93.3004 269.595 93.1993 269.37 92.9622 269.213C92.7194 268.711 92.262 269.156 91.8492 268.96C91.2117 269.347 90.6748 269.123 90.0429 269.173C89.371 268.155 89.4495 270.118 88.8289 269.629C88.4794 270.079 88.2027 270.53 87.5929 270.62C87.4856 271.857 86.5308 269.945 86.0683 270.872C85.8424 270.58 85.8757 270.445 85.5482 270.36C84.8712 270.208 84.1033 270.462 83.437 270.754C83.0976 270.316 82.9294 270.766 82.5957 270.997C82.2964 270.659 82.2625 271.025 82.0254 271.182C81.3077 270.935 81.8961 271.592 81.2744 271.733C81.0942 271.626 80.3252 271.075 80.7888 271.739C80.2749 271.666 80.0434 272.622 79.4342 272.285C79.3212 272.712 77.9548 273.629 78.0959 272.836C77.7848 272.582 77.7848 273.871 77.1134 273.511C76.2551 273.258 76.7577 274.113 76.232 274.298C75.8712 273.764 75.4697 274.692 74.9282 274.36C74.8435 274.422 74.4652 274.995 74.7752 274.894C75.1253 275.159 74.8141 275.535 74.961 275.76L74.9163 275.755C74.634 275.029 74.1987 275.394 74.1535 275.985C73.9615 276.097 73.9615 275.429 73.538 275.924C73.3065 275.322 72.6515 276.706 72.4313 275.828C71.9739 276.458 71.5335 275.512 71.0874 276.301C70.8666 275.755 70.4381 276.047 70.5962 276.481C70.2241 276.762 69.7266 276.227 69.761 276.976C69.5691 277.336 70.1281 277.318 69.5911 277.679C69.9982 277.673 69.7159 278.32 70.1845 277.966C69.9694 278.388 70.6137 278.365 69.8903 278.511C69.7102 278.832 69.3031 278.343 69.0264 278.815C69.1512 279.141 68.3946 279.136 68.3375 279.316C68.2359 279.62 68.1456 279.744 68.0496 279.968C67.5019 279.744 67.7102 280.892 66.9711 280.729C66.8017 281.471 66.0343 280.2 65.4804 280.531C64.5538 280.61 63.5713 280.183 62.6063 280.183C62.1771 279.958 61.5109 279.642 61.2342 279.879C61.1602 279.654 60.9067 279.485 60.5504 279.35C60.9518 278.872 60.285 278.99 60.0365 278.793C59.438 278.366 58.9016 278.029 58.4047 277.55C58.3025 276.993 57.7327 277.274 57.5295 277.224C56.9592 277.207 57.0947 276.931 57.1675 276.442C58.0941 275.89 56.744 275.654 56.3375 275.131C55.8067 274.501 55.1184 274.27 54.3273 274.36C53.4747 273.741 53.1692 274.94 52.4075 274.754L52.3911 274.771C51.7813 274.822 50.6463 274.867 50.482 275.694C49.9851 275.857 50.4029 276.301 50.2844 276.802C50.194 277.511 49.3922 276.814 49.2285 277.364C48.9851 277.663 49.0816 277.854 49.2962 278.006C49.0303 277.904 48.766 277.821 48.5226 277.696C48.0483 277.533 47.6022 277.269 47.1562 277.252C47.1392 277.236 47.1223 277.213 47.1053 277.201C47.0658 277.179 47.0094 277.156 46.9755 277.145C46.9529 277.145 46.9134 277.122 46.8964 277.122C46.8795 277.122 46.8513 277.122 46.84 277.122C46.8287 277.122 46.8004 277.117 46.7891 277.122C46.7779 277.122 46.7496 277.145 46.7383 277.145C46.727 277.151 46.6932 277.145 46.6819 277.145C46.6706 277.151 46.6423 277.167 46.631 277.173C46.4334 277.252 46.2358 277.415 46.0777 277.489C45.4283 277.246 45.0331 276.779 44.5249 276.364C44.2538 276.172 43.9489 275.925 43.6609 275.835C43.5593 275.812 43.4407 275.795 43.3447 275.812C43.2262 275.835 43.1132 275.913 43.0003 276.02C42.4131 276.335 41.7524 276.032 41.1595 276.257C40.9562 276.785 40.5779 277.303 40.2391 277.674C39.8834 277.483 39.7366 276.589 39.3187 276.364C39.2905 276.347 39.2397 276.313 39.2115 276.307C39.2058 276.307 39.1889 276.307 39.1832 276.307C39.1832 276.307 39.1663 276.307 39.1606 276.307C39.155 276.307 39.1381 276.307 39.1324 276.307C39.1211 276.307 39.0872 276.307 39.0816 276.307C39.0759 276.307 39.059 276.307 39.0534 276.307C39.0364 276.302 38.9969 276.285 38.9743 276.285C38.9574 276.279 38.9122 276.279 38.8953 276.285C38.867 276.285 38.8218 276.297 38.7936 276.307C38.7767 276.313 38.7484 276.33 38.7372 276.335C38.6525 276.375 38.5678 276.437 38.4774 276.493C38.4492 276.476 38.4153 276.47 38.3984 276.465C38.3927 276.465 38.3758 276.465 38.3701 276.465C38.3701 276.465 38.3475 276.465 38.3419 276.465C38.3419 276.465 38.3475 276.487 38.3419 276.493C38.3419 276.493 38.3419 276.515 38.3419 276.521C38.3419 276.515 38.3193 276.521 38.3193 276.521C38.3137 276.515 38.3193 276.493 38.3193 276.493C38.3137 276.493 38.2911 276.493 38.2911 276.493C38.2854 276.493 38.2685 276.493 38.2628 276.493H38.2408C38.2182 276.499 38.1674 276.51 38.1335 276.521C38.0884 276.527 38.0375 276.544 37.9754 276.544C37.9698 276.538 37.9528 276.527 37.9472 276.521C37.9472 276.515 37.9246 276.499 37.9246 276.493C37.9077 276.476 37.8851 276.454 37.8681 276.442C37.8681 276.437 37.8456 276.414 37.8456 276.414C37.8399 276.414 37.823 276.414 37.8173 276.414C37.8117 276.414 37.7947 276.414 37.7891 276.414C37.7891 276.414 37.7722 276.414 37.7665 276.414C37.7609 276.414 37.7439 276.414 37.7383 276.414C37.7326 276.414 37.7157 276.414 37.71 276.414C37.6197 276.43 37.5124 276.47 37.4221 276.493C37.4164 276.493 37.3995 276.493 37.3995 276.493C37.3938 276.493 37.3769 276.493 37.3712 276.493C37.3656 276.493 37.3487 276.493 37.343 276.493C37.3374 276.493 37.3204 276.493 37.3204 276.493C37.3148 276.493 37.2978 276.493 37.2922 276.493C37.2865 276.487 37.2696 276.47 37.264 276.465C37.2527 276.453 37.2244 276.43 37.2131 276.414C37.2075 276.408 37.1906 276.392 37.1849 276.386C37.1793 276.402 37.1397 276.402 37.1341 276.414C37.1341 276.414 37.1341 276.437 37.1341 276.442C37.1284 276.448 37.1115 276.459 37.1059 276.465C37.1059 276.47 37.0833 276.465 37.0833 276.465C37.0776 276.465 37.0833 276.493 37.0833 276.493C37.0776 276.493 37.055 276.493 37.055 276.493C37.055 276.493 37.0325 276.493 37.0268 276.493H37.0042C36.9873 276.487 36.9647 276.476 36.9478 276.465C36.9139 276.442 36.8574 276.403 36.8179 276.386C36.8009 276.38 36.7614 276.364 36.7388 276.364C36.7388 276.364 36.7162 276.364 36.7106 276.364C36.7106 276.357 36.688 276.364 36.688 276.364C36.6767 276.347 36.6711 276.319 36.6598 276.307C36.6598 276.307 36.6372 276.312 36.6315 276.307C36.6259 276.307 36.6146 276.284 36.609 276.284C36.6033 276.279 36.5864 276.284 36.5807 276.284C36.5807 276.284 36.5581 276.284 36.5525 276.284C36.5525 276.284 36.5299 276.279 36.5299 276.284C36.5186 276.284 36.5073 276.301 36.5017 276.307C36.4904 276.319 36.4622 276.346 36.4509 276.364C36.4452 276.364 36.4283 276.357 36.4226 276.364L36.4 276.386C36.3944 276.386 36.3718 276.386 36.3718 276.386C36.3662 276.386 36.3492 276.364 36.3436 276.364C36.3379 276.357 36.321 276.341 36.3153 276.335C36.3153 276.329 36.2928 276.312 36.2928 276.307C36.2194 276.391 36.1572 276.436 36.1064 276.464H36.0838C36.0782 276.47 36.0612 276.492 36.0556 276.492C36.05 276.492 36.033 276.492 36.0274 276.492H36.0048C35.9991 276.492 35.9822 276.47 35.9765 276.464C35.9765 276.464 35.954 276.464 35.9483 276.464C35.937 276.452 35.9088 276.407 35.8975 276.385C35.8862 276.369 35.8806 276.329 35.8693 276.306C35.7959 276.075 35.745 275.665 35.6321 275.468C35.6265 275.457 35.6152 275.429 35.6095 275.417C35.6039 275.412 35.5869 275.395 35.5813 275.389C35.5192 275.389 35.4627 275.401 35.4232 275.389C35.4175 275.389 35.4006 275.367 35.395 275.367C35.3837 275.355 35.3554 275.35 35.3441 275.339C35.3441 275.333 35.3441 275.316 35.3441 275.31C35.3441 275.31 35.3215 275.288 35.3159 275.288C35.3159 275.282 35.3215 275.265 35.3159 275.26C35.3159 275.254 35.3159 275.237 35.3159 275.231C35.3215 275.225 35.3159 275.209 35.3159 275.209C35.3215 275.197 35.3441 275.164 35.3441 275.152C35.3724 275.068 35.4288 274.961 35.4514 274.894C35.4514 274.888 35.4514 274.871 35.4514 274.865C35.4514 274.859 35.4514 274.843 35.4514 274.837V274.815C35.4458 274.809 35.4232 274.815 35.4232 274.815C35.4175 274.809 35.4062 274.786 35.395 274.786C35.3893 274.786 35.3554 274.786 35.3441 274.786C35.3328 274.786 35.3103 274.809 35.2933 274.815C35.2877 274.798 35.2707 274.775 35.2651 274.758C35.2481 274.707 35.2312 274.629 35.2143 274.578C35.2086 274.567 35.1917 274.533 35.186 274.522C35.1804 274.516 35.1691 274.482 35.1578 274.471C35.1578 274.465 35.1409 274.449 35.1352 274.443C35.1296 274.443 35.1126 274.449 35.107 274.443C35.1013 274.443 35.09 274.42 35.0787 274.42H35.0562C35.0505 274.42 35.0336 274.42 35.0279 274.42H35.0053C34.9884 274.42 34.9658 274.443 34.9489 274.443C34.9432 274.449 34.9263 274.443 34.9263 274.443C34.915 274.449 34.8811 274.465 34.8698 274.471C34.8585 274.477 34.8303 274.494 34.819 274.499C34.7851 274.443 34.7569 274.381 34.7117 274.342C34.5367 274.185 34.2543 274.134 33.9212 274.105C33.9156 274.112 33.8817 274.128 33.8704 274.134C33.8591 274.134 33.8309 274.156 33.8196 274.156C33.8083 274.162 33.78 274.156 33.7687 274.156C33.7518 274.162 33.7236 274.185 33.7123 274.185C33.701 274.185 33.6728 274.185 33.6615 274.185C33.4243 274.185 33.1533 274.06 32.8992 274.055C32.8822 274.055 32.8596 274.05 32.8427 274.055C32.8258 274.055 32.7862 274.05 32.7637 274.055C32.6394 274.73 32.4079 275.383 32.2159 276.047C32.0691 276.739 31.6343 277.335 31.3181 277.96C30.9568 278.578 30.6462 279.219 30.3977 279.9C30.0759 280.255 29.6976 280.581 29.3475 280.919C29.3362 281.172 29.4548 281.453 29.4774 281.706C29.6355 282.353 29.6411 283.033 29.9234 283.647C29.9291 283.653 29.946 283.669 29.9517 283.675C29.9517 283.675 29.9517 283.692 29.9517 283.697C29.9517 283.703 29.9743 283.72 29.9799 283.726C29.9799 283.732 29.9743 283.748 29.9799 283.748C29.9799 283.754 29.9743 283.771 29.9799 283.777C29.9799 283.782 30.0025 283.799 30.0025 283.805C30.0025 283.81 30.0025 283.827 30.0025 283.827C30.0025 283.833 30.0025 283.85 30.0025 283.855C30.0081 284.075 29.8613 284.317 29.8218 284.536C29.6298 285.268 29.291 285.948 28.9805 286.634C28.8675 286.999 28.6078 287.236 28.348 287.501C28.3311 287.523 28.3085 287.557 28.2916 287.579L28.269 287.602C28.2577 287.614 28.2464 287.624 28.2408 287.63C28.2238 287.647 28.1843 287.669 28.1617 287.681C27.9697 287.793 27.693 287.821 27.4785 287.895C27.4728 287.895 27.4559 287.889 27.4502 287.895H27.4277C27.422 287.895 27.3994 287.889 27.3994 287.895V287.917C27.3994 287.923 27.3712 287.917 27.3712 287.917C27.3712 287.923 27.3712 287.94 27.3712 287.946C27.3712 287.951 27.3712 287.968 27.3712 287.974C27.3712 287.974 27.3712 287.991 27.3712 287.996C27.3712 288.002 27.3712 288.019 27.3712 288.024C27.3881 288.092 27.4446 288.182 27.4502 288.233C27.5236 288.733 27.8342 289.133 28.0544 289.572C27.8568 289.943 27.6479 290.297 27.4502 290.669C27.038 291.428 26.7444 292.261 26.2927 293.003C26.2362 293.104 26.1741 293.217 26.112 293.318C26.0894 293.346 26.0555 293.397 26.033 293.425C26.0273 293.431 26.0104 293.441 26.0047 293.447C25.9934 293.459 25.9652 293.492 25.9539 293.504C25.9257 293.521 25.9031 293.543 25.8749 293.555C25.7168 293.678 25.5191 293.791 25.3723 293.92C25.3271 294.348 25.2876 294.775 25.2424 295.208C24.9771 295.495 24.6778 295.777 24.4237 296.069C24.3842 296.412 24.4124 296.756 24.243 297.065C24.1244 297.38 24.0058 297.695 23.8986 298.01C23.8986 298.016 23.8986 298.033 23.8986 298.038C23.9042 298.044 23.9211 298.061 23.9268 298.061C23.9268 298.061 23.9494 298.061 23.955 298.061H23.9776C23.9833 298.061 24.0002 298.067 24.0058 298.061C24.0341 298.055 24.0792 298.022 24.1131 298.01C24.1244 298.004 24.1527 298.016 24.1639 298.01C24.1639 298.01 24.1865 297.982 24.1922 297.982H24.2148C24.4689 297.92 24.723 297.864 24.9771 297.802C25.2707 298.145 25.5586 298.505 25.8466 298.848C25.8692 299.152 25.8466 299.445 25.8974 299.743C26.1798 299.658 26.4677 299.54 26.7388 299.428C26.9025 299.017 27.0324 298.6 27.1905 298.196C27.439 298.128 27.71 298.083 27.9528 298.01C28.0996 297.65 28.2295 297.296 28.3706 296.936C28.8506 296.84 29.3362 296.874 29.8218 296.885C29.9799 296.637 30.138 296.373 30.2905 296.125C30.8325 295.996 31.3633 295.827 31.9223 295.81C32.5321 295.737 33.1363 295.709 33.7405 295.624C33.7405 295.624 33.7631 295.602 33.7687 295.596C33.7687 295.596 33.7857 295.602 33.7913 295.596C33.8591 295.579 33.9607 295.562 34.0285 295.545C34.0454 295.54 34.068 295.529 34.0793 295.517C34.085 295.517 34.1075 295.523 34.1075 295.517V295.495C34.1075 295.495 34.1358 295.489 34.1358 295.495C34.452 295.394 34.7964 295.349 35.107 295.23C35.4514 295.01 35.7846 294.741 36.1347 294.55C36.7388 294.527 37.3487 294.533 37.9472 294.6C38.3199 294.702 38.6812 294.837 39.0539 294.915L39.0822 294.893C39.0822 294.887 39.0822 294.87 39.0822 294.865C39.0822 294.859 39.0822 294.842 39.0822 294.837V294.814C39.0822 294.808 39.0822 294.792 39.0822 294.786C39.0709 294.702 39.037 294.606 39.0257 294.521V294.499C38.9636 294.167 38.8789 293.83 38.8168 293.503C39.0822 293.283 39.3475 293.024 39.6863 292.923C40.1042 292.749 40.4994 292.524 40.9229 292.373C40.9399 292.378 40.9625 292.395 40.9738 292.401C40.9794 292.401 40.9963 292.401 41.002 292.401C41.002 292.401 41.0246 292.401 41.0302 292.401L41.0528 292.373C41.0585 292.373 41.081 292.35 41.081 292.35C41.081 292.366 41.081 292.384 41.081 292.401C41.3747 292.417 41.6796 292.412 41.9732 292.429C42.4701 292.553 42.9388 292.783 43.4244 292.952C43.5768 292.856 43.718 292.738 43.8704 292.637C44.1641 292.603 44.4859 292.704 44.7908 292.716C44.7965 292.716 44.8078 292.716 44.8191 292.716C44.9207 292.722 45.0562 292.733 45.1579 292.744C45.1974 292.744 45.2538 292.75 45.2877 292.744C45.2934 292.738 45.3103 292.716 45.316 292.716C45.316 292.716 45.3329 292.716 45.3385 292.716L45.3103 292.755C45.4966 293.008 45.683 293.267 45.8693 293.515C46.3719 293.627 46.8857 293.717 47.3826 293.847C48.1731 294.15 48.9642 294.466 49.7485 294.764C50.3132 294.646 50.8897 294.55 51.4487 294.421C51.8778 294.213 52.307 294.005 52.7412 293.796C52.7299 293.751 52.7299 293.701 52.7299 293.65C52.8259 293.819 52.9727 293.915 53.2833 293.903C53.6672 293.926 53.9891 294.095 54.2652 294.348C54.3781 294.404 54.4577 294.398 54.5136 294.353C54.4905 294.393 54.4628 294.432 54.434 294.471C54.8694 294.792 55.3098 295.113 55.744 295.439C56.0427 295.417 56.3482 295.372 56.6475 295.338C57.2178 295.107 57.7768 294.848 58.3414 294.607C58.7649 294.612 59.1941 294.674 59.6238 294.702C60.2167 294.601 60.8101 294.483 61.4019 294.376C62.1365 294.691 62.8587 295.028 63.6153 295.293C63.7452 295.31 63.9999 295.54 63.9823 295.305V295.293C64.062 295.484 64.2302 295.591 64.5583 295.647C65.1518 295.839 65.7108 296.098 66.1958 296.491C67.4098 297.296 68.5561 298.196 69.7537 299.023C70.713 299.665 71.673 300.305 72.6385 300.941C73.542 301.183 74.4511 301.431 75.3551 301.672C75.6255 301.504 75.8966 301.335 76.1625 301.167C76.5465 300.93 76.9248 300.694 77.3082 300.452C77.3878 300.373 77.5516 300.356 77.5968 300.243C77.4838 300.052 77.3144 299.895 77.1851 299.72C77.5008 299.186 77.817 298.646 78.1338 298.111C78.5793 298.297 79.0259 298.477 79.4714 298.668C79.8949 298.37 80.3128 298.033 80.7362 297.718C81.3178 297.29 81.8712 296.807 82.5042 296.446C82.577 296.373 82.7922 296.334 82.7865 296.232L82.7978 296.267C83.7182 295.732 84.5878 295.135 85.4235 294.483C86.0271 294.022 86.6651 293.583 87.2524 293.111C87.3998 292.751 87.4613 292.306 87.664 292.002C88.3478 291.766 89.031 291.524 89.7199 291.287L89.7256 291.242V291.282C90.6685 290.826 91.6172 290.365 92.5607 289.903L92.6285 289.6C92.6228 289.701 92.5997 289.802 92.5607 289.903C93.1479 289.735 93.7346 289.566 94.3168 289.392C94.4235 289.318 94.9266 289.318 94.7228 289.183C94.6104 289.133 94.5308 289.071 94.4749 288.998C94.5765 289.087 94.7064 289.161 94.808 289.25Z\" fill=\"#364FC7\"/>\r\n            <path d=\"M92.5607 289.903C91.6172 290.365 90.6685 290.826 89.7256 291.282V291.242L89.7199 291.287C89.031 291.524 88.3478 291.766 87.664 292.002C87.4613 292.306 87.3998 292.751 87.2524 293.111C86.6651 293.583 86.0271 294.022 85.4235 294.483C84.5878 295.135 83.7182 295.732 82.7978 296.267L82.7865 296.232C82.7922 296.334 82.577 296.373 82.5042 296.446C81.8712 296.807 81.3178 297.29 80.7362 297.718C80.3128 298.033 79.8949 298.37 79.4714 298.668C79.0259 298.477 78.5793 298.297 78.1338 298.111C77.817 298.646 77.5008 299.186 77.1851 299.72C77.3144 299.895 77.4838 300.052 77.5968 300.243C77.5516 300.356 77.3878 300.373 77.3082 300.452C76.9248 300.694 76.5465 300.93 76.1625 301.167C75.8966 301.335 75.6256 301.504 75.3551 301.672C74.4511 301.431 73.542 301.183 72.6385 300.941C71.673 300.305 70.713 299.665 69.7537 299.023C68.5561 298.196 67.4098 297.296 66.1958 296.491C65.7108 296.098 65.1518 295.839 64.5583 295.647C64.2302 295.591 64.062 295.484 63.9823 295.293V295.305C63.9999 295.54 63.7452 295.31 63.6153 295.293C62.8587 295.028 62.1365 294.691 61.4019 294.376C60.8101 294.483 60.2167 294.601 59.6238 294.702C59.1941 294.674 58.7649 294.612 58.3414 294.607C57.7768 294.848 57.2178 295.107 56.6475 295.338C56.3482 295.372 56.0427 295.417 55.744 295.439C55.3098 295.113 54.8694 294.792 54.434 294.471C54.4628 294.432 54.4905 294.393 54.5136 294.353C54.4577 294.398 54.3781 294.404 54.2652 294.348C53.9891 294.095 53.6672 293.926 53.2833 293.903C52.9727 293.915 52.8259 293.819 52.7299 293.65C52.7299 293.701 52.7299 293.751 52.7412 293.796C52.307 294.005 51.8778 294.213 51.4487 294.421C50.8897 294.55 50.3132 294.646 49.7485 294.764C48.9642 294.466 48.1731 294.15 47.3826 293.847C46.8857 293.717 46.3719 293.627 45.8693 293.515C45.683 293.267 45.4966 293.008 45.3103 292.755L45.3385 292.716C45.3329 292.716 45.316 292.716 45.316 292.716C45.3103 292.716 45.2934 292.738 45.2877 292.744C45.2538 292.75 45.1974 292.744 45.1579 292.744C45.0562 292.733 44.9207 292.722 44.8191 292.716C44.8078 292.716 44.7965 292.716 44.7908 292.716C44.4859 292.704 44.1641 292.603 43.8704 292.637C43.718 292.738 43.5768 292.856 43.4244 292.952C42.9388 292.783 42.4701 292.553 41.9732 292.429C41.6796 292.412 41.3747 292.417 41.081 292.401C41.081 292.384 41.081 292.366 41.081 292.35C41.081 292.35 41.0585 292.373 41.0528 292.373L41.0302 292.401C41.0246 292.401 41.002 292.401 41.002 292.401C40.9963 292.401 40.9794 292.401 40.9738 292.401C40.9625 292.395 40.9399 292.378 40.9229 292.373C40.4994 292.524 40.1042 292.749 39.6863 292.923C39.3475 293.024 39.0822 293.283 38.8168 293.503C38.8789 293.83 38.9636 294.167 39.0257 294.499V294.521C39.037 294.606 39.0709 294.702 39.0822 294.786C39.0822 294.792 39.0822 294.808 39.0822 294.814V294.837C39.0822 294.842 39.0822 294.859 39.0822 294.865C39.0822 294.87 39.0822 294.887 39.0822 294.893L39.0539 294.915C38.6812 294.837 38.3199 294.702 37.9472 294.6C37.3487 294.533 36.7388 294.527 36.1347 294.55C35.7846 294.741 35.4514 295.01 35.107 295.23C34.7964 295.349 34.452 295.394 34.1358 295.495C34.1358 295.489 34.1075 295.495 34.1075 295.495V295.517C34.1075 295.523 34.085 295.517 34.0793 295.517C34.068 295.529 34.0454 295.54 34.0285 295.545C33.9607 295.562 33.8591 295.579 33.7913 295.596C33.7857 295.602 33.7687 295.596 33.7687 295.596C33.7631 295.602 33.7405 295.624 33.7405 295.624C33.1363 295.709 32.5321 295.737 31.9223 295.81C31.3633 295.827 30.8325 295.996 30.2905 296.125C30.138 296.373 29.9799 296.637 29.8218 296.885C29.3362 296.874 28.8506 296.84 28.3706 296.936C28.2295 297.296 28.0996 297.65 27.9528 298.01C27.71 298.083 27.439 298.128 27.1905 298.196C27.0324 298.6 26.9025 299.017 26.7388 299.428C26.4677 299.54 26.1798 299.658 25.8974 299.743C25.8466 299.445 25.8692 299.152 25.8466 298.848C25.5586 298.505 25.2707 298.145 24.9771 297.802C24.723 297.864 24.4689 297.92 24.2148 297.982H24.1922C24.1865 297.982 24.1639 298.01 24.1639 298.01C24.1527 298.016 24.1244 298.004 24.1131 298.01C24.0792 298.022 24.0341 298.055 24.0058 298.061C24.0002 298.067 23.9833 298.061 23.9776 298.061H23.955C23.9494 298.061 23.9268 298.061 23.9268 298.061C23.9211 298.061 23.9042 298.044 23.8986 298.038C23.8986 298.033 23.8986 298.016 23.8986 298.01C24.0058 297.695 24.1244 297.38 24.243 297.065C24.4124 296.756 24.3842 296.412 24.4237 296.069C24.6778 295.777 24.9771 295.495 25.2424 295.208C25.2876 294.775 25.3271 294.348 25.3723 293.92C25.5191 293.791 25.7168 293.678 25.8749 293.555C25.9031 293.543 25.9257 293.521 25.9539 293.504C25.9652 293.492 25.9934 293.459 26.0047 293.447C26.0104 293.441 26.0273 293.431 26.033 293.425C26.0555 293.397 26.0894 293.346 26.112 293.318C26.1741 293.217 26.2362 293.104 26.2927 293.003C26.7444 292.261 27.038 291.428 27.4502 290.669C27.6479 290.297 27.8568 289.943 28.0544 289.572C27.8342 289.133 27.5237 288.733 27.4502 288.233C27.4446 288.182 27.3881 288.092 27.3712 288.024C27.3712 288.019 27.3712 288.002 27.3712 287.996C27.3712 287.991 27.3712 287.974 27.3712 287.974C27.3712 287.968 27.3712 287.951 27.3712 287.946C27.3712 287.94 27.3712 287.923 27.3712 287.917C27.3712 287.917 27.3994 287.923 27.3994 287.917V287.895C27.3994 287.889 27.422 287.895 27.4277 287.895H27.4502C27.4559 287.889 27.4728 287.895 27.4785 287.895C27.693 287.821 27.9697 287.793 28.1617 287.681C28.1843 287.669 28.2238 287.647 28.2408 287.63C28.2464 287.624 28.2577 287.614 28.269 287.602L28.2916 287.579C28.3085 287.557 28.3311 287.523 28.348 287.501C28.6078 287.236 28.8675 286.999 28.9805 286.634C29.291 285.948 29.6298 285.268 29.8218 284.536C29.8613 284.317 30.0081 284.075 30.0025 283.855C30.0025 283.85 30.0025 283.833 30.0025 283.827C30.0025 283.827 30.0025 283.81 30.0025 283.805C30.0025 283.799 29.9799 283.782 29.9799 283.777C29.9743 283.771 29.9799 283.754 29.9799 283.748C29.9743 283.748 29.9799 283.732 29.9799 283.726C29.9743 283.72 29.9517 283.703 29.9517 283.697C29.9517 283.692 29.9517 283.675 29.9517 283.675C29.946 283.669 29.9291 283.653 29.9234 283.647C29.6411 283.033 29.6355 282.353 29.4774 281.706C29.4548 281.453 29.3362 281.172 29.3475 280.919C29.6976 280.581 30.0759 280.255 30.3977 279.9C30.6462 279.219 30.9568 278.578 31.3181 277.96C31.6343 277.335 32.0691 276.739 32.2159 276.047C32.4079 275.383 32.6394 274.73 32.7637 274.055C32.7862 274.05 32.8258 274.055 32.8427 274.055C32.8596 274.05 32.8822 274.055 32.8992 274.055C33.1533 274.06 33.4243 274.185 33.6615 274.185C33.6728 274.185 33.701 274.185 33.7123 274.185C33.7236 274.185 33.7518 274.162 33.7687 274.156C33.78 274.156 33.8083 274.162 33.8196 274.156C33.8309 274.156 33.8591 274.134 33.8704 274.134C33.8817 274.128 33.9156 274.112 33.9212 274.105C34.2543 274.134 34.5367 274.185 34.7117 274.342C34.7569 274.381 34.7851 274.443 34.819 274.499C34.8303 274.494 34.8585 274.477 34.8698 274.471C34.8811 274.465 34.915 274.449 34.9263 274.443C34.9263 274.443 34.9432 274.449 34.9489 274.443C34.9658 274.443 34.9884 274.42 35.0053 274.42H35.0279C35.0336 274.42 35.0505 274.42 35.0562 274.42H35.0787C35.09 274.42 35.1013 274.443 35.107 274.443C35.1126 274.449 35.1296 274.443 35.1352 274.443C35.1409 274.449 35.1578 274.465 35.1578 274.471C35.1691 274.482 35.1804 274.516 35.186 274.522C35.1917 274.533 35.2086 274.567 35.2143 274.578C35.2312 274.629 35.2481 274.707 35.2651 274.758C35.2707 274.775 35.2877 274.798 35.2933 274.815C35.3103 274.809 35.3328 274.786 35.3441 274.786C35.3554 274.786 35.3893 274.786 35.395 274.786C35.4062 274.786 35.4175 274.809 35.4232 274.815C35.4232 274.815 35.4458 274.809 35.4514 274.815V274.837C35.4514 274.843 35.4514 274.859 35.4514 274.865C35.4514 274.871 35.4514 274.888 35.4514 274.894C35.4288 274.961 35.3724 275.068 35.3441 275.152C35.3441 275.164 35.3215 275.197 35.3159 275.209C35.3159 275.209 35.3215 275.225 35.3159 275.231C35.3159 275.237 35.3159 275.254 35.3159 275.26C35.3215 275.265 35.3159 275.282 35.3159 275.288C35.3215 275.288 35.3441 275.31 35.3441 275.31C35.3441 275.316 35.3441 275.333 35.3441 275.339C35.3554 275.35 35.3837 275.355 35.395 275.367C35.4006 275.367 35.4175 275.389 35.4232 275.389C35.4627 275.401 35.5192 275.389 35.5813 275.389C35.5869 275.395 35.6039 275.412 35.6095 275.417C35.6152 275.429 35.6265 275.457 35.6321 275.468C35.745 275.665 35.7959 276.075 35.8693 276.306C35.8806 276.329 35.8862 276.369 35.8975 276.385C35.9088 276.407 35.937 276.452 35.9483 276.464C35.954 276.464 35.9765 276.464 35.9765 276.464C35.9822 276.47 35.9991 276.492 36.0048 276.492H36.0274C36.033 276.492 36.05 276.492 36.0556 276.492C36.0612 276.492 36.0782 276.47 36.0838 276.464H36.1064C36.1572 276.436 36.2194 276.391 36.2928 276.307C36.2928 276.312 36.3153 276.329 36.3153 276.335C36.321 276.341 36.3379 276.357 36.3436 276.364C36.3492 276.364 36.3662 276.386 36.3718 276.386C36.3718 276.386 36.3944 276.386 36.4 276.386L36.4226 276.364C36.4283 276.357 36.4452 276.364 36.4509 276.364C36.4622 276.346 36.4904 276.319 36.5017 276.307C36.5073 276.301 36.5186 276.284 36.5299 276.284C36.5299 276.279 36.5525 276.284 36.5525 276.284C36.5581 276.284 36.5807 276.284 36.5807 276.284C36.5864 276.284 36.6033 276.279 36.609 276.284C36.6146 276.284 36.6259 276.307 36.6315 276.307C36.6372 276.312 36.6598 276.307 36.6598 276.307C36.6711 276.319 36.6767 276.347 36.688 276.364C36.688 276.364 36.7106 276.357 36.7106 276.364C36.7162 276.364 36.7388 276.364 36.7388 276.364C36.7614 276.364 36.8009 276.38 36.8179 276.386C36.8574 276.403 36.9139 276.442 36.9478 276.465C36.9647 276.476 36.9873 276.487 37.0042 276.493H37.0268C37.0325 276.493 37.055 276.493 37.055 276.493C37.055 276.493 37.0776 276.493 37.0833 276.493C37.0833 276.493 37.0776 276.465 37.0833 276.465C37.0833 276.465 37.1059 276.47 37.1059 276.465C37.1115 276.459 37.1284 276.448 37.1341 276.442C37.1341 276.437 37.1341 276.414 37.1341 276.414C37.1397 276.402 37.1793 276.402 37.1849 276.386C37.1906 276.392 37.2075 276.408 37.2131 276.414C37.2244 276.43 37.2527 276.453 37.264 276.465C37.2696 276.47 37.2865 276.487 37.2922 276.493C37.2978 276.493 37.3148 276.493 37.3204 276.493C37.3204 276.493 37.3374 276.493 37.343 276.493C37.3487 276.493 37.3656 276.493 37.3712 276.493C37.3769 276.493 37.3938 276.493 37.3995 276.493C37.3995 276.493 37.4164 276.493 37.4221 276.493C37.5124 276.47 37.6197 276.43 37.71 276.414C37.7157 276.414 37.7326 276.414 37.7383 276.414C37.7439 276.414 37.7609 276.414 37.7665 276.414C37.7722 276.414 37.7891 276.414 37.7891 276.414C37.7947 276.414 37.8117 276.414 37.8173 276.414C37.823 276.414 37.8399 276.414 37.8456 276.414C37.8456 276.414 37.8681 276.437 37.8681 276.442C37.8851 276.454 37.9077 276.476 37.9246 276.493C37.9246 276.499 37.9472 276.515 37.9472 276.521C37.9528 276.527 37.9698 276.538 37.9754 276.544C38.0375 276.544 38.0884 276.527 38.1335 276.521C38.1674 276.51 38.2182 276.499 38.2408 276.493H38.2628C38.2685 276.493 38.2854 276.493 38.2911 276.493C38.2911 276.493 38.3137 276.493 38.3193 276.493C38.3193 276.493 38.3137 276.515 38.3193 276.521C38.3193 276.521 38.3419 276.515 38.3419 276.521C38.3419 276.515 38.3419 276.493 38.3419 276.493C38.3475 276.487 38.3419 276.465 38.3419 276.465C38.3475 276.465 38.3701 276.465 38.3701 276.465C38.3758 276.465 38.3927 276.465 38.3984 276.465C38.4153 276.47 38.4492 276.476 38.4774 276.493C38.5678 276.437 38.6525 276.375 38.7372 276.335C38.7484 276.33 38.7767 276.313 38.7936 276.307C38.8218 276.297 38.867 276.285 38.8953 276.285C38.9122 276.279 38.9574 276.279 38.9743 276.285C38.9969 276.285 39.0364 276.302 39.0534 276.307C39.059 276.307 39.0759 276.307 39.0816 276.307C39.0872 276.307 39.1211 276.307 39.1324 276.307C39.1381 276.307 39.155 276.307 39.1606 276.307C39.1663 276.307 39.1832 276.307 39.1832 276.307C39.1889 276.307 39.2058 276.307 39.2115 276.307C39.2397 276.313 39.2905 276.347 39.3187 276.364C39.7366 276.589 39.8834 277.483 40.2391 277.674C40.5779 277.303 40.9562 276.785 41.1595 276.257C41.7524 276.032 42.4131 276.335 43.0003 276.02C43.1132 275.913 43.2262 275.835 43.3447 275.812C43.4407 275.795 43.5593 275.812 43.6609 275.835C43.9489 275.925 44.2538 276.172 44.5249 276.364C45.0331 276.779 45.4283 277.246 46.0777 277.489C46.2358 277.415 46.4334 277.252 46.631 277.173C46.6423 277.167 46.6706 277.151 46.6819 277.145C46.6932 277.145 46.727 277.151 46.7383 277.145C46.7496 277.145 46.7779 277.122 46.7891 277.122C46.8004 277.117 46.8287 277.122 46.84 277.122C46.8513 277.122 46.8795 277.122 46.8964 277.122C46.9134 277.122 46.9529 277.145 46.9755 277.145C47.0094 277.156 47.0658 277.179 47.1053 277.201C47.1223 277.213 47.1392 277.236 47.1562 277.252C47.6022 277.269 48.0483 277.533 48.5226 277.696C48.766 277.821 49.0303 277.904 49.2962 278.006C49.0816 277.854 48.9851 277.663 49.2285 277.364C49.3922 276.814 50.194 277.511 50.2844 276.802C50.4029 276.301 49.9851 275.857 50.482 275.694C50.6463 274.867 51.7813 274.822 52.3911 274.771L52.4075 274.754C53.1692 274.94 53.4747 273.741 54.3273 274.36C55.1184 274.27 55.8067 274.501 56.3375 275.131C56.744 275.654 58.0941 275.89 57.1675 276.442C57.0947 276.931 56.9592 277.207 57.5295 277.224C57.7327 277.274 58.3025 276.993 58.4047 277.55C58.9016 278.029 59.438 278.366 60.0365 278.793C60.285 278.99 60.9518 278.872 60.5504 279.35C60.9067 279.485 61.1602 279.654 61.2342 279.879C61.5109 279.642 62.1771 279.958 62.6063 280.183C63.5713 280.183 64.5538 280.61 65.4804 280.531C66.0343 280.2 66.8017 281.471 66.9711 280.729C67.7102 280.892 67.5018 279.744 68.0496 279.968C68.1456 279.744 68.2359 279.62 68.3375 279.316C68.3946 279.136 69.1512 279.141 69.0264 278.815C69.3031 278.343 69.7102 278.832 69.8903 278.511C70.6137 278.365 69.9694 278.388 70.1845 277.966C69.7159 278.32 69.9982 277.673 69.5911 277.679C70.1281 277.318 69.5691 277.336 69.761 276.976C69.7266 276.227 70.2241 276.762 70.5962 276.481C70.4381 276.047 70.8666 275.755 71.0874 276.301C71.5335 275.512 71.9739 276.458 72.4313 275.828C72.6515 276.706 73.3065 275.322 73.538 275.924C73.9615 275.429 73.9615 276.097 74.1535 275.985C74.1987 275.394 74.634 275.029 74.9163 275.755L74.961 275.76C74.8141 275.535 75.1253 275.159 74.7752 274.894C74.4652 274.995 74.8435 274.422 74.9282 274.36C75.4697 274.692 75.8712 273.764 76.232 274.298C76.7577 274.113 76.2551 273.258 77.1134 273.511C77.7848 273.871 77.7848 272.582 78.0959 272.836C77.9548 273.629 79.3212 272.712 79.4342 272.285C80.0434 272.622 80.2749 271.666 80.7888 271.739C80.3252 271.075 81.0942 271.626 81.2744 271.733C81.8961 271.592 81.3077 270.935 82.0254 271.182C82.2625 271.025 82.2964 270.659 82.5957 270.997C82.9294 270.766 83.0976 270.316 83.437 270.754C84.1033 270.462 84.8712 270.208 85.5482 270.36C85.8757 270.445 85.8424 270.58 86.0683 270.872C86.5307 269.945 87.4856 271.857 87.5929 270.62C88.2027 270.53 88.4794 270.079 88.8289 269.629C89.4495 270.118 89.371 268.155 90.0429 269.173C90.6748 269.123 91.2117 269.347 91.8492 268.96C92.262 269.156 92.7194 268.711 92.9622 269.213C93.1993 269.37 93.3004 269.595 93.3292 269.871C93.4365 270.169 93.38 270.585 93.7583 270.686C94.0119 270.866 94.3337 270.99 94.5545 271.198C94.5093 271.569 94.3733 271.951 94.3845 272.312C94.5884 272.745 94.8368 273.173 95.0057 273.611C94.9836 273.926 94.7866 274.281 94.8933 274.568C95.0802 274.899 95.3512 275.203 95.4924 275.541C95.3061 275.682 95.0627 275.749 94.8594 275.867C95.1028 276.137 95.4297 276.362 95.6336 276.654C95.7008 277.043 95.7747 277.426 95.8476 277.813C95.7064 277.791 95.5652 277.803 95.4241 277.819C95.6274 277.887 95.9379 277.695 95.8871 278.044C95.9549 278.309 95.7804 278.561 95.7516 278.815C95.6951 279.096 95.5822 279.377 95.554 279.658C95.6274 279.962 95.7911 280.255 95.8137 280.564C95.808 281.014 95.7567 281.481 95.7798 281.926C96.0621 282.499 96.3783 283.068 96.6381 283.653C96.4461 284.002 96.249 284.356 96.0508 284.705C96.3727 285.256 96.7341 285.796 96.943 286.404C96.9097 286.876 96.8865 287.349 96.8589 287.821L97.135 288.643C97.3157 289.02 97.5472 289.368 97.751 289.734C97.7674 289.813 97.9193 289.92 97.8352 289.993C97.4902 289.825 97.1406 289.622 96.7962 289.442C96.135 289.363 95.4687 289.318 94.808 289.25C94.7064 289.161 94.5765 289.087 94.4749 288.998C94.5308 289.071 94.6104 289.133 94.7228 289.183C94.9266 289.318 94.4235 289.318 94.3168 289.392C93.7346 289.566 93.148 289.735 92.5607 289.903ZM92.5607 289.903L92.6285 289.6C92.6228 289.701 92.5997 289.802 92.5607 289.903Z\" stroke=\"white\" stroke-width=\"1.77165\"/>\r\n            <path d=\"M59.1642 142.045C59.1642 142.135 59.1467 142.152 59.1467 142.18C59.0851 142.225 59.0851 142.225 59.0563 142.225C59.0563 142.259 59.0343 142.315 59.0117 142.349C59.1077 142.445 59.1015 142.653 59.1015 142.771C58.9891 142.861 58.9891 142.861 58.8423 142.951C58.8423 143.114 58.8135 143.148 58.949 143.272C59.2031 143.272 59.1749 143.013 59.4521 143.289C59.4521 143.587 59.1918 143.778 59.1918 144.076C59.0738 144.194 59.1642 144.56 59.1015 144.689C59.119 144.712 59.1467 144.813 59.1467 144.847C59.3499 145.196 59.5538 145.443 59.2263 145.775C59.2263 146.101 59.2206 146.355 59.0286 146.619L59.0563 146.653C59.1467 146.653 59.3053 146.658 59.3449 146.698C59.678 146.698 59.6153 146.9 59.7401 147.108C60.0168 147.108 60.4346 147.305 60.6605 147.12C60.6774 147.131 60.6944 147.142 60.7175 147.153C60.7175 147.294 60.6944 147.272 60.8073 147.378C60.8807 147.378 60.8977 147.367 61.0055 147.367C61.141 147.44 61.141 147.44 61.1743 147.44C61.3432 147.542 61.5747 147.581 61.7215 147.727C61.7215 148.003 62.2014 147.71 62.2698 147.772C62.7379 147.772 62.9073 148.115 63.1952 148.476C63.2636 148.481 63.3364 148.481 63.4104 148.487C63.5736 148.656 63.9011 148.352 64.0936 148.352C64.2348 148.437 64.3641 148.476 64.4889 148.352C64.5453 148.352 64.7655 148.397 64.8107 148.442C64.8949 148.352 65.3635 148.347 65.4318 148.409C65.477 148.369 65.8384 148.397 65.9169 148.397C66.0298 148.313 66.5437 147.863 66.7582 148.077C66.9282 148.077 67.0349 148.15 67.1817 148.015C67.1817 147.936 67.1202 147.84 67.075 147.778C67.001 147.773 66.8599 147.773 66.787 147.773C66.787 147.587 67.0123 147.396 67.0123 147.182C66.8141 146.985 66.6058 146.783 66.6058 146.485C66.3906 146.181 66.1986 146.051 66.4194 145.759C66.4194 145.292 66.577 145.168 66.9609 144.926C66.9784 144.437 66.7582 143.964 66.7582 143.486C66.9163 143.323 67.1083 143.171 67.1083 142.924C67.1309 142.895 67.1817 142.592 67.1817 142.53C67.5437 142.052 67.0462 141.894 67.0462 141.438C67.0242 141.438 67.001 141.438 66.9846 141.438C66.9728 141.433 66.9615 141.421 66.9502 141.421C67.0914 141.36 67.2325 141.281 67.368 141.185C67.7351 141.033 67.8367 140.639 68.2997 140.78C68.2653 140.831 68.1868 140.853 68.0055 140.831C68.3449 141.253 68.9146 140.741 69.3274 141.061C69.4799 141.838 70.5352 141.607 70.7724 141.084C71.3658 140.504 71.608 141.888 71.5521 142.333C71.6312 143.047 71.6193 143.846 71.699 144.566C71.315 144.915 71.5126 145.838 72.2749 145.776C72.8283 146.147 72.8904 145.5 73.3765 145.472C73.7261 145.641 73.8 145.95 74.2744 145.928C73.8785 146.186 74.4545 146.091 74.551 146.383C74.5567 146.659 74.5335 146.856 74.9909 146.788C75.2958 147.103 75.9903 147.025 75.8887 147.61C76.5601 147.525 76.4421 148.189 76.4251 148.617C76.8368 148.757 76.6453 149.112 76.9728 149.213C76.9056 149.584 77.481 149.725 77.5601 150.153C77.9271 149.663 77.8368 150.49 77.7583 150.777C77.9898 150.766 78.0406 151.064 78.1586 151.103L78.1247 151.143C77.5663 151.283 77.38 152.223 77.3568 152.617C77.8543 152.977 78.8193 152.257 79.1863 151.745C79.8131 151.368 80.005 150.681 80.3896 150.113C80.852 149.539 81.9588 150.046 82.1112 149.106C82.4562 148.521 81.8125 147.784 82.603 147.357C83.0655 146.963 83.9125 146.091 84.4602 146.777C84.9181 147.148 85.0869 148.094 85.821 147.897C86.3975 147.469 87.3066 147.177 87.5658 146.507C87.6731 145.776 88.7295 145.523 89.3281 145.843C89.7171 145.798 90.022 145.286 90.463 145.399C90.7454 145.427 91.0277 145.455 91.3157 145.489C92.0158 145.568 92.716 145.613 93.4162 145.714C94.3422 145.753 95.1497 146.198 95.9797 146.575C96.3298 146.513 96.6968 146.327 97.0526 146.226C97.7804 146.31 98.5207 146.591 99.2547 146.755C100.282 146.344 101.282 145.804 102.292 145.326C102.411 145.241 102.49 145.123 102.558 144.988C102.58 145.056 102.625 145.112 102.693 145.163C103.128 144.859 103.49 145.416 103.884 145.562C104.184 145.894 104.619 145.573 104.979 145.584C105.889 145.641 106.798 145.905 107.706 146.035C108.322 145.793 108.932 145.455 109.553 145.179C109.938 145.23 110.316 145.545 110.705 145.703C111.485 145.556 112.281 145.32 113.066 145.146C113.529 145.174 113.574 144.606 113.828 144.347C113.986 143.689 113.964 142.963 114.393 142.395C114.472 142.052 114.963 141.748 114.721 141.382C114.421 140.91 114.641 140.403 114.726 139.903C114.749 139.469 114.93 139.115 115.268 138.851C115.161 138.361 114.884 137.872 114.715 137.388C114.738 136.994 114.975 136.595 115.077 136.201C115.512 136.111 115.947 136.015 116.381 135.92C116.635 135.604 117.042 135.34 117.144 134.918C117.268 134.479 117.392 134.052 117.934 134.091C118.137 133.726 118.239 133.253 118.415 132.859C118.398 131.998 118.296 131.126 118.251 130.26C118.415 129.911 118.809 129.641 119.058 129.315C119.177 128.6 119.171 127.83 119.233 127.098C119.432 126.378 119.832 125.704 120.12 125.006C119.991 124.584 119.731 124.173 119.555 123.757C119.403 123.144 118.793 122.874 118.392 122.446C118.087 122.153 117.635 121.934 117.76 121.439C117.833 121.085 117.669 120.809 117.443 120.556C117.364 120.28 117.218 120.201 117.036 120.19C117.076 120.179 117.127 120.173 117.172 120.162C116.996 119.914 116.827 119.661 116.658 119.414C115.642 119.121 114.591 118.896 113.564 118.626C113.48 117.839 113.4 117.057 113.316 116.269C113.344 115.898 113.14 115.588 112.983 115.268C112.7 114.975 113.124 114.812 113.299 114.598C113.338 114.103 113.367 113.602 113.401 113.107C113.626 112.787 113.994 112.528 114.27 112.23C114.694 112.224 115.117 112.213 115.541 112.207C115.688 111.982 115.801 111.735 115.936 111.498C116.241 111.178 115.987 110.542 115.547 110.525C114.835 110.159 114.146 109.766 113.525 109.276C113.09 108.944 112.972 109.203 113.096 109.631C112.333 109.631 111.594 109.816 110.876 109.85C110.487 109.923 109.487 109.614 110.058 109.164C109.81 108.657 109.397 108.23 109.409 107.577C108.906 106.801 108.319 107.577 108.195 108.179C107.924 108.843 108.195 109.664 107.32 109.968C106.727 110.773 106.084 110.075 105.501 109.715C104.807 109.113 103.909 109.693 103.751 110.576C103.26 111.611 102.633 110.171 101.893 110.677C101.961 110.908 101.87 110.79 101.729 110.536C101.215 110.058 100.866 110.233 100.572 110.553C100.578 110.536 100.583 110.52 100.588 110.503C100.882 110.204 100.346 109.957 100.08 109.878C99.6285 109.85 99.3349 109.327 99.2784 108.922C99.6116 108.815 99.9334 108.579 100.272 108.489C100.555 108.168 100.831 107.836 101.013 107.448C101.069 107.077 101.651 106.857 101.329 106.486C101.408 106.126 101.227 105.693 101.408 105.333C101.549 104.883 101.787 104.461 101.815 103.982C101.837 103.6 101.95 103.223 101.922 102.846C101.945 102.407 101.56 102.165 101.149 102.193C100.866 101.929 100.645 102.148 100.443 102.413C100.189 102.84 99.7482 102.475 99.641 102.143C99.4428 102.289 99.2231 102.39 99.0531 102.621C98.5958 102.818 98.6748 103.285 98.4772 103.667C98.5732 103.819 98.5675 103.971 98.5224 104.129C98.4715 103.926 98.3078 103.741 98.1497 103.538C97.2971 103.094 96.6765 104.613 95.6991 103.904C95.0893 103.352 94.5353 103.751 93.9035 103.808C93.7059 102.762 92.7234 102.908 92.0904 103.465C91.7013 104.078 90.9277 104.686 91.0576 105.485C91.1474 106.345 90.4026 106.852 90.2727 107.583C89.7301 108.089 88.4489 107.037 88.183 108.19C88.0418 107.515 87.0932 107.324 86.7261 107.69C86.7713 108.652 85.9983 109.169 85.4224 109.833C84.8797 110.79 83.8244 110.249 82.9994 110.851C82.2089 111.003 81.8537 111.96 81.3342 112.5C80.5601 112.843 79.5556 112.072 79.1428 113.029C79.2049 114.047 78.5618 114.879 78.0931 115.712C78.0135 115.847 78.4093 115.898 78.4037 116.038C78.3754 116.775 78.9294 117.085 79.5556 117.197C79.629 117.844 80.0355 118.474 80.7973 118.592C80.8938 118.547 80.9898 118.497 81.0914 118.457C81.0468 118.502 81.0073 118.559 80.9729 118.637C81.1987 118.924 81.5375 119.206 81.402 119.616C81.8424 120.426 79.974 120.235 81.0355 120.753C80.629 121.298 79.5669 121.957 79.5217 122.373C78.6408 122.137 79.3692 120.983 78.5454 121.124C78.4494 121.495 77.0496 122.002 78.1101 121.788C78.7882 121.551 78.4827 121.945 78.127 122.198C79.0705 122.592 77.433 123.245 78.3133 123.397C78.3252 123.611 78.031 123.937 78.0649 124.241C78.0485 124.19 78.031 124.134 78.0197 124.066C77.5398 123.622 77.3766 123.042 76.6199 123.155C76.1682 122.947 75.6199 122.485 75.3269 123.205C74.7622 123.717 73.9209 123.442 73.5087 124.111C73.1422 124.578 73.8808 124.865 73.7232 125.411C74.1693 125.985 73.7848 126.136 73.2998 125.731C73.7577 126.474 72.6335 126.288 72.2952 126.153C71.8938 126.08 71.4364 125.956 71.6792 126.491C71.3398 126.755 71.2619 127.07 71.2331 127.447C70.8548 127.262 70.4991 126.3 70.0078 126.913C70.2105 127.695 69.4776 127.301 69.2738 126.885C68.3082 126.733 70.0982 127.987 69.0485 127.689C68.5798 128.167 67.9304 126.333 68.0372 127.548C67.896 127.824 68.6075 128.617 67.8847 128.33C67.4669 128.297 66.953 127.655 66.8909 128.381C66.9191 128.691 66.6029 128.769 66.4957 128.916C66.4335 128.612 65.97 128.443 65.8181 128.263C65.5521 128.752 66.3545 129.444 65.5132 129.517C65.1015 129.619 64.5984 129.197 64.3669 129.27C64.1585 129.81 64.4121 130.418 63.7684 130.727C63.4979 131.346 63.3675 132.032 63.1015 132.64C62.9327 133.067 62.0625 132.724 62.1196 133.416C61.7921 133.439 61.0744 132.73 61.3624 133.45C60.6289 133.63 60.8491 134.783 59.9287 134.766C59.3923 134.012 59.3296 135.537 58.6074 135.143C58.2511 135.734 56.8338 134.839 57.2409 135.886C57.2918 136.201 57.8621 136.6 57.2121 136.617C56.8734 136.73 56.9693 137.213 56.5351 137.253C56.4956 137.748 57.0428 137.922 56.9643 138.468C56.7779 138.839 57.0207 139.565 57.5509 139.301C57.7435 140.274 58.5786 138.316 58.7198 139.312C59.0473 139.897 59.7079 140.516 59.2844 141.168C58.8158 141.315 58.9349 141.945 59.1997 141.99C59.1997 142.007 59.1941 142.018 59.1941 142.029C59.1805 142.028 59.1698 142.04 59.1642 142.045Z\" fill=\"#748FFC\" stroke=\"white\" stroke-width=\"1.77165\"/>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default PortugalMap;","import React from 'react';\r\nimport './Section5.scss';\r\nimport PortugalMap from '../PortugalMap/PortugalMap';\r\n\r\nconst Section5 = ({ title }) => {\r\n    return(\r\n        <section className='section-5'>\r\n            <h1 className='section-5__title'>{title}</h1>\r\n            <div className='section-5__div'>\r\n                <PortugalMap className='section-5__div__img' />\r\n                <div className='section-5__div__texts'>\r\n                    <p className='section-5__div__texts__text'>\r\n                        Nossos serviços cobrem as principais cidades em todas as regiões de Portugal. \r\n                        Seja nos agitados centros urbanos ou nas cidades mais interioranas do país, \r\n                        a PortuGO está aqui para levá-lo onde você precisa, quando você precisa.\r\n                    </p>\r\n                    <p className='section-5__div__texts__text'>\r\n                        A nossa rede de motoristas está distribuída conforme  demonstra o mapa ao lado. \r\n                        Estamos numa constante expansão das nossas operações, onde miramos em tornar o \r\n                        transporte urbano em Portugal barato aos clientes e justo aos motoristas. \r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Section5;","import React from 'react';\r\nimport Button from '../Button/Button';\r\nimport './Section6.scss';\r\n\r\nconst Section6 = () => {\r\n    return(\r\n        <section className='section-6'>\r\n            <h1 className='section-6__title'>Instale já a <span>PortuGO</span></h1>\r\n            <div className='section-6__main-div' id='test'>\r\n                <div className='section-6__main-div__first-div'>\r\n                    <div className='section-6__main-div__first-div__buttons-div'>\r\n                        <Button \r\n                            styleType={'btn--style-2'} \r\n                            text={'Para motoristas'} \r\n                            icon={'images/ic-car.svg'}\r\n                        />\r\n                        <Button \r\n                            styleType={'btn--style-2'} \r\n                            text={'Para passageiros'} \r\n                            icon={'images/ic-passanger.svg'}\r\n                        />\r\n                    </div>\r\n                    <img className='section-6__main-div__first-div__img' src='images/phone-in-hand-with-app.png' alt='Telemóvel com a app PortuGO a rodar' />\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Section6;","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\n */\n\nexport const CONSTANTS = {\n  /**\n   * @define {boolean} Whether this is the client Node.js SDK.\n   */\n  NODE_CLIENT: false,\n  /**\n   * @define {boolean} Whether this is the Admin Node.js SDK.\n   */\n  NODE_ADMIN: false,\n\n  /**\n   * Firebase SDK Version\n   */\n  SDK_VERSION: '${JSCORE_VERSION}'\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Throws an error if the provided assertion is falsy\n */\nexport const assert = function (assertion: unknown, message: string): void {\n  if (!assertion) {\n    throw assertionError(message);\n  }\n};\n\n/**\n * Returns an Error object suitable for throwing.\n */\nexport const assertionError = function (message: string): Error {\n  return new Error(\n    'Firebase Database (' +\n      CONSTANTS.SDK_VERSION +\n      ') INTERNAL ASSERT FAILED: ' +\n      message\n  );\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw new DecodeBase64StringError();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * An error encountered while decoding base64 string.\n */\nexport class DecodeBase64StringError extends Error {\n  readonly name = 'DecodeBase64StringError';\n}\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nexport function deepCopy<T>(value: T): T {\n  return deepExtend(undefined, value) as T;\n}\n\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n *\n * Note: we don't merge __proto__ to prevent prototype pollution\n */\nexport function deepExtend(target: unknown, source: unknown): unknown {\n  if (!(source instanceof Object)) {\n    return source;\n  }\n\n  switch (source.constructor) {\n    case Date:\n      // Treat Dates like scalars; if the target date object had any child\n      // properties - they will be lost!\n      const dateValue = source as Date;\n      return new Date(dateValue.getTime());\n\n    case Object:\n      if (target === undefined) {\n        target = {};\n      }\n      break;\n    case Array:\n      // Always copy the array source and overwrite the target.\n      target = [];\n      break;\n\n    default:\n      // Not a plain Object - treat it as a scalar.\n      return source;\n  }\n\n  for (const prop in source) {\n    // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\n    if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\n      continue;\n    }\n    (target as Record<string, unknown>)[prop] = deepExtend(\n      (target as Record<string, unknown>)[prop],\n      (source as Record<string, unknown>)[prop]\n    );\n  }\n\n  return target;\n}\n\nfunction isValidKey(key: string): boolean {\n  return key !== '__proto__';\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { getGlobal } from './global';\n\n/**\n * Keys for experimental properties on the `FirebaseDefaults` object.\n * @public\n */\nexport type ExperimentalKey = 'authTokenSyncURL' | 'authIdTokenMaxAge';\n\n/**\n * An object that can be injected into the environment as __FIREBASE_DEFAULTS__,\n * either as a property of globalThis, a shell environment variable, or a\n * cookie.\n *\n * This object can be used to automatically configure and initialize\n * a Firebase app as well as any emulators.\n *\n * @public\n */\nexport interface FirebaseDefaults {\n  config?: Record<string, string>;\n  emulatorHosts?: Record<string, string>;\n  _authTokenSyncURL?: string;\n  _authIdTokenMaxAge?: number;\n  /**\n   * Override Firebase's runtime environment detection and\n   * force the SDK to act as if it were in the specified environment.\n   */\n  forceEnvironment?: 'browser' | 'node';\n  [key: string]: unknown;\n}\n\ndeclare global {\n  // Need `var` for this to work.\n  // eslint-disable-next-line no-var\n  var __FIREBASE_DEFAULTS__: FirebaseDefaults | undefined;\n}\n\nconst getDefaultsFromGlobal = (): FirebaseDefaults | undefined =>\n  getGlobal().__FIREBASE_DEFAULTS__;\n\n/**\n * Attempt to read defaults from a JSON string provided to\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\n * The dots are in parens because certain compilers (Vite?) cannot\n * handle seeing that variable in comments.\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\n */\nconst getDefaultsFromEnvVariable = (): FirebaseDefaults | undefined => {\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return;\n  }\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\n  if (defaultsJsonString) {\n    return JSON.parse(defaultsJsonString);\n  }\n};\n\nconst getDefaultsFromCookie = (): FirebaseDefaults | undefined => {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  let match;\n  try {\n    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n  } catch (e) {\n    // Some environments such as Angular Universal SSR have a\n    // `document` object but error on accessing `document.cookie`.\n    return;\n  }\n  const decoded = match && base64Decode(match[1]);\n  return decoded && JSON.parse(decoded);\n};\n\n/**\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\n * (1) if such an object exists as a property of `globalThis`\n * (2) if such an object was provided on a shell environment variable\n * (3) if such an object exists in a cookie\n * @public\n */\nexport const getDefaults = (): FirebaseDefaults | undefined => {\n  try {\n    return (\n      getDefaultsFromGlobal() ||\n      getDefaultsFromEnvVariable() ||\n      getDefaultsFromCookie()\n    );\n  } catch (e) {\n    /**\n     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\n     * to any environment case we have not accounted for. Log to\n     * info instead of swallowing so we can find these unknown cases\n     * and add paths for them if needed.\n     */\n    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\n    return;\n  }\n};\n\n/**\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\n * @public\n */\nexport const getDefaultEmulatorHost = (\n  productName: string\n): string | undefined => getDefaults()?.emulatorHosts?.[productName];\n\n/**\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\n * @public\n */\nexport const getDefaultEmulatorHostnameAndPort = (\n  productName: string\n): [hostname: string, port: number] | undefined => {\n  const host = getDefaultEmulatorHost(productName);\n  if (!host) {\n    return undefined;\n  }\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n  }\n  // eslint-disable-next-line no-restricted-globals\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\n  if (host[0] === '[') {\n    // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [host.substring(1, separatorIndex - 1), port];\n  } else {\n    return [host.substring(0, separatorIndex), port];\n  }\n};\n\n/**\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\n * @public\n */\nexport const getDefaultAppConfig = (): Record<string, string> | undefined =>\n  getDefaults()?.config;\n\n/**\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\n * prefixed by \"_\")\n * @public\n */\nexport const getExperimentalSetting = <T extends ExperimentalKey>(\n  name: T\n): FirebaseDefaults[`_${T}`] =>\n  getDefaults()?.[`_${name}`] as FirebaseDefaults[`_${T}`];\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n * @public\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\nimport { getDefaults } from './defaults';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected or specified.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  const forceEnvironment = getDefaults()?.forceEnvironment;\n  if (forceEnvironment === 'node') {\n    return true;\n  } else if (forceEnvironment === 'browser') {\n    return false;\n  }\n\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    !!navigator.userAgent &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  try {\n    return typeof indexedDB === 'object';\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Evaluates a JSON string into a javascript object.\n *\n * @param {string} str A string containing JSON.\n * @return {*} The javascript object representing the specified JSON.\n */\nexport function jsonEval(str: string): unknown {\n  return JSON.parse(str);\n}\n\n/**\n * Returns JSON representing a javascript object.\n * @param {*} data Javascript object to be stringified.\n * @return {string} The JSON contents of the object.\n */\nexport function stringify(data: unknown): string {\n  return JSON.stringify(data);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { jsonEval } from './json';\n\ninterface Claims {\n  [key: string]: {};\n}\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token into constituent parts.\n *\n * Notes:\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const decode = function (token: string): DecodedToken {\n  let header = {},\n    claims: Claims = {},\n    data = {},\n    signature = '';\n\n  try {\n    const parts = token.split('.');\n    header = jsonEval(base64Decode(parts[0]) || '') as object;\n    claims = jsonEval(base64Decode(parts[1]) || '') as Claims;\n    signature = parts[2];\n    data = claims['d'] || {};\n    delete claims['d'];\n  } catch (e) {}\n\n  return {\n    header,\n    claims,\n    data,\n    signature\n  };\n};\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidTimestamp = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  const now: number = Math.floor(new Date().getTime() / 1000);\n  let validSince: number = 0,\n    validUntil: number = 0;\n\n  if (typeof claims === 'object') {\n    if (claims.hasOwnProperty('nbf')) {\n      validSince = claims['nbf'] as number;\n    } else if (claims.hasOwnProperty('iat')) {\n      validSince = claims['iat'] as number;\n    }\n\n    if (claims.hasOwnProperty('exp')) {\n      validUntil = claims['exp'] as number;\n    } else {\n      // token will expire after 24h by default\n      validUntil = validSince + 86400;\n    }\n  }\n\n  return (\n    !!now &&\n    !!validSince &&\n    !!validUntil &&\n    now >= validSince &&\n    now <= validUntil\n  );\n};\n\n/**\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\n *\n * Notes:\n * - May return null if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const issuedAtTime = function (token: string): number | null {\n  const claims: Claims = decode(token).claims;\n  if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\n    return claims['iat'] as number;\n  }\n  return null;\n};\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidFormat = function (token: string): boolean {\n  const decoded = decode(token),\n    claims = decoded.claims;\n\n  return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\n};\n\n/**\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isAdmin = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  return typeof claims === 'object' && claims['admin'] === true;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview SHA-1 cryptographic hash.\n * Variable names follow the notation in FIPS PUB 180-3:\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\n *\n * Usage:\n *   var sha1 = new sha1();\n *   sha1.update(bytes);\n *   var hash = sha1.digest();\n *\n * Performance:\n *   Chrome 23:   ~400 Mbit/s\n *   Firefox 16:  ~250 Mbit/s\n *\n */\n\n/**\n * SHA-1 cryptographic hash constructor.\n *\n * The properties declared here are discussed in the above algorithm document.\n * @constructor\n * @final\n * @struct\n */\nexport class Sha1 {\n  /**\n   * Holds the previous values of accumulated variables a-e in the compress_\n   * function.\n   * @private\n   */\n  private chain_: number[] = [];\n\n  /**\n   * A buffer holding the partially computed hash result.\n   * @private\n   */\n  private buf_: number[] = [];\n\n  /**\n   * An array of 80 bytes, each a part of the message to be hashed.  Referred to\n   * as the message schedule in the docs.\n   * @private\n   */\n  private W_: number[] = [];\n\n  /**\n   * Contains data needed to pad messages less than 64 bytes.\n   * @private\n   */\n  private pad_: number[] = [];\n\n  /**\n   * @private {number}\n   */\n  private inbuf_: number = 0;\n\n  /**\n   * @private {number}\n   */\n  private total_: number = 0;\n\n  blockSize: number;\n\n  constructor() {\n    this.blockSize = 512 / 8;\n\n    this.pad_[0] = 128;\n    for (let i = 1; i < this.blockSize; ++i) {\n      this.pad_[i] = 0;\n    }\n\n    this.reset();\n  }\n\n  reset(): void {\n    this.chain_[0] = 0x67452301;\n    this.chain_[1] = 0xefcdab89;\n    this.chain_[2] = 0x98badcfe;\n    this.chain_[3] = 0x10325476;\n    this.chain_[4] = 0xc3d2e1f0;\n\n    this.inbuf_ = 0;\n    this.total_ = 0;\n  }\n\n  /**\n   * Internal compress helper function.\n   * @param buf Block to compress.\n   * @param offset Offset of the block in the buffer.\n   * @private\n   */\n  compress_(buf: number[] | Uint8Array | string, offset?: number): void {\n    if (!offset) {\n      offset = 0;\n    }\n\n    const W = this.W_;\n\n    // get 16 big endian words\n    if (typeof buf === 'string') {\n      for (let i = 0; i < 16; i++) {\n        // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\n        // have a bug that turns the post-increment ++ operator into pre-increment\n        // during JIT compilation.  We have code that depends heavily on SHA-1 for\n        // correctness and which is affected by this bug, so I've removed all uses\n        // of post-increment ++ in which the result value is used.  We can revert\n        // this change once the Safari bug\n        // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\n        // most clients have been updated.\n        W[i] =\n          (buf.charCodeAt(offset) << 24) |\n          (buf.charCodeAt(offset + 1) << 16) |\n          (buf.charCodeAt(offset + 2) << 8) |\n          buf.charCodeAt(offset + 3);\n        offset += 4;\n      }\n    } else {\n      for (let i = 0; i < 16; i++) {\n        W[i] =\n          (buf[offset] << 24) |\n          (buf[offset + 1] << 16) |\n          (buf[offset + 2] << 8) |\n          buf[offset + 3];\n        offset += 4;\n      }\n    }\n\n    // expand to 80 words\n    for (let i = 16; i < 80; i++) {\n      const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n      W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\n    }\n\n    let a = this.chain_[0];\n    let b = this.chain_[1];\n    let c = this.chain_[2];\n    let d = this.chain_[3];\n    let e = this.chain_[4];\n    let f, k;\n\n    // TODO(user): Try to unroll this loop to speed up the computation.\n    for (let i = 0; i < 80; i++) {\n      if (i < 40) {\n        if (i < 20) {\n          f = d ^ (b & (c ^ d));\n          k = 0x5a827999;\n        } else {\n          f = b ^ c ^ d;\n          k = 0x6ed9eba1;\n        }\n      } else {\n        if (i < 60) {\n          f = (b & c) | (d & (b | c));\n          k = 0x8f1bbcdc;\n        } else {\n          f = b ^ c ^ d;\n          k = 0xca62c1d6;\n        }\n      }\n\n      const t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\n      e = d;\n      d = c;\n      c = ((b << 30) | (b >>> 2)) & 0xffffffff;\n      b = a;\n      a = t;\n    }\n\n    this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\n    this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\n    this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\n    this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\n    this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\n  }\n\n  update(bytes?: number[] | Uint8Array | string, length?: number): void {\n    // TODO(johnlenz): tighten the function signature and remove this check\n    if (bytes == null) {\n      return;\n    }\n\n    if (length === undefined) {\n      length = bytes.length;\n    }\n\n    const lengthMinusBlock = length - this.blockSize;\n    let n = 0;\n    // Using local instead of member variables gives ~5% speedup on Firefox 16.\n    const buf = this.buf_;\n    let inbuf = this.inbuf_;\n\n    // The outer while loop should execute at most twice.\n    while (n < length) {\n      // When we have no data in the block to top up, we can directly process the\n      // input buffer (assuming it contains sufficient data). This gives ~25%\n      // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\n      // the data is provided in large chunks (or in multiples of 64 bytes).\n      if (inbuf === 0) {\n        while (n <= lengthMinusBlock) {\n          this.compress_(bytes, n);\n          n += this.blockSize;\n        }\n      }\n\n      if (typeof bytes === 'string') {\n        while (n < length) {\n          buf[inbuf] = bytes.charCodeAt(n);\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      } else {\n        while (n < length) {\n          buf[inbuf] = bytes[n];\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      }\n    }\n\n    this.inbuf_ = inbuf;\n    this.total_ += length;\n  }\n\n  /** @override */\n  digest(): number[] {\n    const digest: number[] = [];\n    let totalBits = this.total_ * 8;\n\n    // Add pad 0x80 0x00*.\n    if (this.inbuf_ < 56) {\n      this.update(this.pad_, 56 - this.inbuf_);\n    } else {\n      this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\n    }\n\n    // Add # bits.\n    for (let i = this.blockSize - 1; i >= 56; i--) {\n      this.buf_[i] = totalBits & 255;\n      totalBits /= 256; // Don't use bit-shifting here!\n    }\n\n    this.compress_(this.buf_);\n\n    let n = 0;\n    for (let i = 0; i < 5; i++) {\n      for (let j = 24; j >= 0; j -= 8) {\n        digest[n] = (this.chain_[i] >> j) & 255;\n        ++n;\n      }\n    }\n    return digest;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Check to make sure the appropriate number of arguments are provided for a public function.\n * Throws an error if it fails.\n *\n * @param fnName The function name\n * @param minCount The minimum number of arguments to allow for the function call\n * @param maxCount The maximum number of argument to allow for the function call\n * @param argCount The actual number of arguments provided.\n */\nexport const validateArgCount = function (\n  fnName: string,\n  minCount: number,\n  maxCount: number,\n  argCount: number\n): void {\n  let argError;\n  if (argCount < minCount) {\n    argError = 'at least ' + minCount;\n  } else if (argCount > maxCount) {\n    argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\n  }\n  if (argError) {\n    const error =\n      fnName +\n      ' failed: Was called with ' +\n      argCount +\n      (argCount === 1 ? ' argument.' : ' arguments.') +\n      ' Expects ' +\n      argError +\n      '.';\n    throw new Error(error);\n  }\n};\n\n/**\n * Generates a string to prefix an error message about failed argument validation\n *\n * @param fnName The function name\n * @param argName The name of the argument\n * @return The prefix to add to the error thrown for validation.\n */\nexport function errorPrefix(fnName: string, argName: string): string {\n  return `${fnName} failed: ${argName} argument `;\n}\n\n/**\n * @param fnName\n * @param argumentNumber\n * @param namespace\n * @param optional\n */\nexport function validateNamespace(\n  fnName: string,\n  namespace: string,\n  optional: boolean\n): void {\n  if (optional && !namespace) {\n    return;\n  }\n  if (typeof namespace !== 'string') {\n    //TODO: I should do more validation here. We only allow certain chars in namespaces.\n    throw new Error(\n      errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.'\n    );\n  }\n}\n\nexport function validateCallback(\n  fnName: string,\n  argumentName: string,\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback: Function,\n  optional: boolean\n): void {\n  if (optional && !callback) {\n    return;\n  }\n  if (typeof callback !== 'function') {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid function.'\n    );\n  }\n}\n\nexport function validateContextObject(\n  fnName: string,\n  argumentName: string,\n  context: unknown,\n  optional: boolean\n): void {\n  if (optional && !context) {\n    return;\n  }\n  if (typeof context !== 'object' || context === null) {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid context object.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from './assert';\n\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\n// so it's been modified.\n\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\n// pair).\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\n\n/**\n * @param {string} str\n * @return {Array}\n */\nexport const stringToByteArray = function (str: string): number[] {\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n\n    // Is this the lead surrogate in a surrogate pair?\n    if (c >= 0xd800 && c <= 0xdbff) {\n      const high = c - 0xd800; // the high 10 bits.\n      i++;\n      assert(i < str.length, 'Surrogate pair missing trail surrogate.');\n      const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\n      c = 0x10000 + (high << 10) + low;\n    }\n\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (c < 65536) {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Calculate length without actually converting; useful for doing cheaper validation.\n * @param {string} str\n * @return {number}\n */\nexport const stringLength = function (str: string): number {\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n    if (c < 128) {\n      p++;\n    } else if (c < 2048) {\n      p += 2;\n    } else if (c >= 0xd800 && c <= 0xdbff) {\n      // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\n      p += 4;\n      i++; // skip trail surrogate.\n    } else {\n      p += 3;\n    }\n  }\n  return p;\n};\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name as appName } from '../package.json';\nimport { name as appCompatName } from '../../app-compat/package.json';\nimport { name as analyticsCompatName } from '../../../packages/analytics-compat/package.json';\nimport { name as analyticsName } from '../../../packages/analytics/package.json';\nimport { name as appCheckCompatName } from '../../../packages/app-check-compat/package.json';\nimport { name as appCheckName } from '../../../packages/app-check/package.json';\nimport { name as authName } from '../../../packages/auth/package.json';\nimport { name as authCompatName } from '../../../packages/auth-compat/package.json';\nimport { name as databaseName } from '../../../packages/database/package.json';\nimport { name as databaseCompatName } from '../../../packages/database-compat/package.json';\nimport { name as functionsName } from '../../../packages/functions/package.json';\nimport { name as functionsCompatName } from '../../../packages/functions-compat/package.json';\nimport { name as installationsName } from '../../../packages/installations/package.json';\nimport { name as installationsCompatName } from '../../../packages/installations-compat/package.json';\nimport { name as messagingName } from '../../../packages/messaging/package.json';\nimport { name as messagingCompatName } from '../../../packages/messaging-compat/package.json';\nimport { name as performanceName } from '../../../packages/performance/package.json';\nimport { name as performanceCompatName } from '../../../packages/performance-compat/package.json';\nimport { name as remoteConfigName } from '../../../packages/remote-config/package.json';\nimport { name as remoteConfigCompatName } from '../../../packages/remote-config-compat/package.json';\nimport { name as storageName } from '../../../packages/storage/package.json';\nimport { name as storageCompatName } from '../../../packages/storage-compat/package.json';\nimport { name as firestoreName } from '../../../packages/firestore/package.json';\nimport { name as firestoreCompatName } from '../../../packages/firestore-compat/package.json';\nimport { name as packageName } from '../../../packages/firebase/package.json';\n\n/**\n * The default app name\n *\n * @internal\n */\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [appCompatName]: 'fire-core-compat',\n  [analyticsName]: 'fire-analytics',\n  [analyticsCompatName]: 'fire-analytics-compat',\n  [appCheckName]: 'fire-app-check',\n  [appCheckCompatName]: 'fire-app-check-compat',\n  [authName]: 'fire-auth',\n  [authCompatName]: 'fire-auth-compat',\n  [databaseName]: 'fire-rtdb',\n  [databaseCompatName]: 'fire-rtdb-compat',\n  [functionsName]: 'fire-fn',\n  [functionsCompatName]: 'fire-fn-compat',\n  [installationsName]: 'fire-iid',\n  [installationsCompatName]: 'fire-iid-compat',\n  [messagingName]: 'fire-fcm',\n  [messagingCompatName]: 'fire-fcm-compat',\n  [performanceName]: 'fire-perf',\n  [performanceCompatName]: 'fire-perf-compat',\n  [remoteConfigName]: 'fire-rc',\n  [remoteConfigCompatName]: 'fire-rc-compat',\n  [storageName]: 'fire-gcs',\n  [storageCompatName]: 'fire-gcs-compat',\n  [firestoreName]: 'fire-fst',\n  [firestoreCompatName]: 'fire-fst-compat',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  NO_OPTIONS = 'no-options',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument',\n  IDB_OPEN = 'idb-open',\n  IDB_GET = 'idb-get',\n  IDB_WRITE = 'idb-set',\n  IDB_DELETE = 'idb-delete'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call initializeApp() first',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.NO_OPTIONS]:\n    'Need to provide options, when not being deployed to hosting via source.',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.',\n  [AppError.IDB_OPEN]:\n    'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_GET]:\n    'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_WRITE]:\n    'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_DELETE]:\n    'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n  [AppError.IDB_OPEN]: { originalErrorMessage?: string };\n  [AppError.IDB_GET]: { originalErrorMessage?: string };\n  [AppError.IDB_WRITE]: { originalErrorMessage?: string };\n  [AppError.IDB_DELETE]: { originalErrorMessage?: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  private readonly _options: FirebaseOptions;\n  private readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  private _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { _apps, _components, _registerComponent } from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual, getDefaultAppConfig } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @public\n */\nexport function initializeApp(): FirebaseApp;\nexport function initializeApp(\n  _options?: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  let options = _options;\n\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  options ||= getDefaultAppConfig();\n\n  if (!options) {\n    throw ERROR_FACTORY.create(AppError.NO_OPTIONS);\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME && getDefaultAppConfig()) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  const name = app.name;\n  if (_apps.has(name)) {\n    _apps.delete(name);\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nimport { logger } from './logger';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            try {\n              db.createObjectStore(STORE_NAME);\n            } catch (e) {\n              // Safari/iOS browsers throw occasional exceptions on\n              // db.createObjectStore() that may be a bug. Avoid blocking\n              // the rest of the app functionality.\n              console.warn(e);\n            }\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.IDB_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME);\n    const result = await tx.objectStore(STORE_NAME).get(computeKey(app));\n    // We already have the value but tx.done can throw,\n    // so we need to await it here to catch errors\n    await tx.done;\n    return result;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_GET, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    await tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_WRITE, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (hearbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    const platformLogger = this.container\n      .getProvider('platform-logger')\n      .getImmediate();\n\n    // This is the \"Firebase user agent\" string from the platform logger\n    // service, not the browser user agent.\n    const agent = platformLogger.getPlatformInfoString();\n    const date = getUTCDateString();\n    if (this._heartbeatsCache?.heartbeats == null) {\n      this._heartbeatsCache = await this._heartbeatsCachePromise;\n      // If we failed to construct a heartbeats cache, then return immediately.\n      if (this._heartbeatsCache?.heartbeats == null) {\n        return;\n      }\n    }\n    // Do not store a heartbeat if one is already stored for this day\n    // or if a header has already been sent today.\n    if (\n      this._heartbeatsCache.lastSentHeartbeatDate === date ||\n      this._heartbeatsCache.heartbeats.some(\n        singleDateHeartbeat => singleDateHeartbeat.date === date\n      )\n    ) {\n      return;\n    } else {\n      // There is no entry for this date. Create one.\n      this._heartbeatsCache.heartbeats.push({ date, agent });\n    }\n    // Remove entries older than 30 days.\n    this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(\n      singleDateHeartbeat => {\n        const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n        const now = Date.now();\n        return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n      }\n    );\n    return this._storage.overwrite(this._heartbeatsCache);\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    if (this._heartbeatsCache === null) {\n      await this._heartbeatsCachePromise;\n    }\n    // If it's still null or the array is empty, there is no data to send.\n    if (\n      this._heartbeatsCache?.heartbeats == null ||\n      this._heartbeatsCache.heartbeats.length === 0\n    ) {\n      return '';\n    }\n    const date = getUTCDateString();\n    // Extract as many heartbeats from the cache as will fit under the size limit.\n    const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n      this._heartbeatsCache.heartbeats\n    );\n    const headerString = base64urlEncodeWithoutPadding(\n      JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n    );\n    // Store last sent date to prevent another being logged/sent for the same day.\n    this._heartbeatsCache.lastSentHeartbeatDate = date;\n    if (unsentEntries.length > 0) {\n      // Store any unsent entries if they exist.\n      this._heartbeatsCache.heartbeats = unsentEntries;\n      // This seems more likely than emptying the array (below) to lead to some odd state\n      // since the cache isn't empty and this will be called again on the next request,\n      // and is probably safest if we await it.\n      await this._storage.overwrite(this._heartbeatsCache);\n    } else {\n      this._heartbeatsCache.heartbeats = [];\n      // Do not wait for this, to reduce latency.\n      void this._storage.overwrite(this._heartbeatsCache);\n    }\n    return headerString;\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      if (idbHeartbeatObject?.heartbeats) {\n        return idbHeartbeatObject;\n      } else {\n        return { heartbeats: [] };\n      }\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\nimport { HeartbeatServiceImpl } from './heartbeatService';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n  _registerComponent(\n    new Component(\n      'heartbeat',\n      container => new HeartbeatServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents('__RUNTIME_ENV__');\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerVersion } from '@firebase/app';\nimport { name, version } from '../package.json';\n\nregisterVersion(name, version, 'app');\nexport * from '@firebase/app';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** The semver (www.semver.org) version of the SDK. */\nexport let SDK_VERSION = '';\n\n/**\n * SDK_VERSION should be set before any database instance is created\n * @internal\n */\nexport function setSDKVersion(version: string): void {\n  SDK_VERSION = version;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { jsonEval, stringify } from '@firebase/util';\n\n/**\n * Wraps a DOM Storage object and:\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\n *\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\n * and one for localStorage.\n *\n */\nexport class DOMStorageWrapper {\n  // Use a prefix to avoid collisions with other stuff saved by the app.\n  private prefix_ = 'firebase:';\n\n  /**\n   * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\n   */\n  constructor(private domStorage_: Storage) {}\n\n  /**\n   * @param key - The key to save the value under\n   * @param value - The value being stored, or null to remove the key.\n   */\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      this.domStorage_.removeItem(this.prefixedName_(key));\n    } else {\n      this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\n    }\n  }\n\n  /**\n   * @returns The value that was stored under this key, or null\n   */\n  get(key: string): unknown {\n    const storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n    if (storedVal == null) {\n      return null;\n    } else {\n      return jsonEval(storedVal);\n    }\n  }\n\n  remove(key: string) {\n    this.domStorage_.removeItem(this.prefixedName_(key));\n  }\n\n  isInMemoryStorage: boolean;\n\n  prefixedName_(name: string): string {\n    return this.prefix_ + name;\n  }\n\n  toString(): string {\n    return this.domStorage_.toString();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\n/**\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\n * (TODO: create interface for both to implement).\n */\nexport class MemoryStorage {\n  private cache_: { [k: string]: unknown } = {};\n\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      delete this.cache_[key];\n    } else {\n      this.cache_[key] = value;\n    }\n  }\n\n  get(key: string): unknown {\n    if (contains(this.cache_, key)) {\n      return this.cache_[key];\n    }\n    return null;\n  }\n\n  remove(key: string) {\n    delete this.cache_[key];\n  }\n\n  isInMemoryStorage = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DOMStorageWrapper } from './DOMStorageWrapper';\nimport { MemoryStorage } from './MemoryStorage';\n\ndeclare const window: Window;\n\n/**\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\n * to reflect this type\n *\n * @param domStorageName - Name of the underlying storage object\n *   (e.g. 'localStorage' or 'sessionStorage').\n * @returns Turning off type information until a common interface is defined.\n */\nconst createStoragefor = function (\n  domStorageName: string\n): DOMStorageWrapper | MemoryStorage {\n  try {\n    // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n    // so it must be inside the try/catch.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window[domStorageName] !== 'undefined'\n    ) {\n      // Need to test cache. Just because it's here doesn't mean it works\n      const domStorage = window[domStorageName];\n      domStorage.setItem('firebase:sentinel', 'cache');\n      domStorage.removeItem('firebase:sentinel');\n      return new DOMStorageWrapper(domStorage);\n    }\n  } catch (e) {}\n\n  // Failed to create wrapper.  Just return in-memory storage.\n  // TODO: log?\n  return new MemoryStorage();\n};\n\n/** A storage object that lasts across sessions */\nexport const PersistentStorage = createStoragefor('localStorage');\n\n/** A storage object that only lasts one session */\nexport const SessionStorage = createStoragefor('sessionStorage');\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger, LogLevel } from '@firebase/logger';\nimport {\n  assert,\n  base64,\n  Sha1,\n  stringToByteArray,\n  stringify,\n  isNodeSdk\n} from '@firebase/util';\n\nimport { SessionStorage } from '../storage/storage';\nimport { QueryContext } from '../view/EventRegistration';\n\ndeclare const window: Window;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const Windows: any;\n\nconst logClient = new Logger('@firebase/database');\n\n/**\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\n */\nexport const LUIDGenerator: () => number = (function () {\n  let id = 1;\n  return function () {\n    return id++;\n  };\n})();\n\n/**\n * Sha1 hash of the input string\n * @param str - The string to hash\n * @returns {!string} The resulting hash\n */\nexport const sha1 = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  const sha1 = new Sha1();\n  sha1.update(utf8Bytes);\n  const sha1Bytes = sha1.digest();\n  return base64.encodeByteArray(sha1Bytes);\n};\n\nconst buildLogMessage_ = function (...varArgs: unknown[]): string {\n  let message = '';\n  for (let i = 0; i < varArgs.length; i++) {\n    const arg = varArgs[i];\n    if (\n      Array.isArray(arg) ||\n      (arg &&\n        typeof arg === 'object' &&\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        typeof (arg as any).length === 'number')\n    ) {\n      message += buildLogMessage_.apply(null, arg);\n    } else if (typeof arg === 'object') {\n      message += stringify(arg);\n    } else {\n      message += arg;\n    }\n    message += ' ';\n  }\n\n  return message;\n};\n\n/**\n * Use this for all debug messages in Firebase.\n */\nexport let logger: ((a: string) => void) | null = null;\n\n/**\n * Flag to check for log availability on first log message\n */\nlet firstLog_ = true;\n\n/**\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\n * @param logger_ - A flag to turn on logging, or a custom logger\n * @param persistent - Whether or not to persist logging settings across refreshes\n */\nexport const enableLogging = function (\n  logger_?: boolean | ((a: string) => void) | null,\n  persistent?: boolean\n) {\n  assert(\n    !persistent || logger_ === true || logger_ === false,\n    \"Can't turn on custom loggers persistently.\"\n  );\n  if (logger_ === true) {\n    logClient.logLevel = LogLevel.VERBOSE;\n    logger = logClient.log.bind(logClient);\n    if (persistent) {\n      SessionStorage.set('logging_enabled', true);\n    }\n  } else if (typeof logger_ === 'function') {\n    logger = logger_;\n  } else {\n    logger = null;\n    SessionStorage.remove('logging_enabled');\n  }\n};\n\nexport const log = function (...varArgs: unknown[]) {\n  if (firstLog_ === true) {\n    firstLog_ = false;\n    if (logger === null && SessionStorage.get('logging_enabled') === true) {\n      enableLogging(true);\n    }\n  }\n\n  if (logger) {\n    const message = buildLogMessage_.apply(null, varArgs);\n    logger(message);\n  }\n};\n\nexport const logWrapper = function (\n  prefix: string\n): (...varArgs: unknown[]) => void {\n  return function (...varArgs: unknown[]) {\n    log(prefix, ...varArgs);\n  };\n};\n\nexport const error = function (...varArgs: string[]) {\n  const message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_(...varArgs);\n  logClient.error(message);\n};\n\nexport const fatal = function (...varArgs: string[]) {\n  const message = `FIREBASE FATAL ERROR: ${buildLogMessage_(...varArgs)}`;\n  logClient.error(message);\n  throw new Error(message);\n};\n\nexport const warn = function (...varArgs: unknown[]) {\n  const message = 'FIREBASE WARNING: ' + buildLogMessage_(...varArgs);\n  logClient.warn(message);\n};\n\n/**\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\n * does not use https.\n */\nexport const warnIfPageIsSecure = function () {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (\n    typeof window !== 'undefined' &&\n    window.location &&\n    window.location.protocol &&\n    window.location.protocol.indexOf('https:') !== -1\n  ) {\n    warn(\n      'Insecure Firebase access from a secure page. ' +\n        'Please use https in calls to new Firebase().'\n    );\n  }\n};\n\nexport const warnAboutUnsupportedMethod = function (methodName: string) {\n  warn(\n    methodName +\n      ' is unsupported and will likely change soon.  ' +\n      'Please do not use.'\n  );\n};\n\n/**\n * Returns true if data is NaN, or +/- Infinity.\n */\nexport const isInvalidJSONNumber = function (data: unknown): boolean {\n  return (\n    typeof data === 'number' &&\n    (data !== data || // NaN\n      data === Number.POSITIVE_INFINITY ||\n      data === Number.NEGATIVE_INFINITY)\n  );\n};\n\nexport const executeWhenDOMReady = function (fn: () => void) {\n  if (isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n\n    let called = false;\n    const wrappedFn = function () {\n      if (!document.body) {\n        setTimeout(wrappedFn, Math.floor(10));\n        return;\n      }\n\n      if (!called) {\n        called = true;\n        fn();\n      }\n    };\n\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn, false);\n      // fallback to onload.\n      window.addEventListener('load', wrappedFn, false);\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((document as any).attachEvent) {\n      // IE.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (document as any).attachEvent('onreadystatechange', () => {\n        if (document.readyState === 'complete') {\n          wrappedFn();\n        }\n      });\n      // fallback to onload.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (window as any).attachEvent('onload', wrappedFn);\n\n      // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n\n/**\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\n */\nexport const MIN_NAME = '[MIN_NAME]';\n\n/**\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\n */\nexport const MAX_NAME = '[MAX_NAME]';\n\n/**\n * Compares valid Firebase key names, plus min and max name\n */\nexport const nameCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a === MIN_NAME || b === MAX_NAME) {\n    return -1;\n  } else if (b === MIN_NAME || a === MAX_NAME) {\n    return 1;\n  } else {\n    const aAsInt = tryParseInt(a),\n      bAsInt = tryParseInt(b);\n\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n\n/**\n * @returns {!number} comparison result.\n */\nexport const stringCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\nexport const requireKey = function (\n  key: string,\n  obj: { [k: string]: unknown }\n): unknown {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error(\n      'Missing required key (' + key + ') in object: ' + stringify(obj)\n    );\n  }\n};\n\nexport const ObjectToUniqueKey = function (obj: unknown): string {\n  if (typeof obj !== 'object' || obj === null) {\n    return stringify(obj);\n  }\n\n  const keys = [];\n  // eslint-disable-next-line guard-for-in\n  for (const k in obj) {\n    keys.push(k);\n  }\n\n  // Export as json, but with the keys sorted.\n  keys.sort();\n  let key = '{';\n  for (let i = 0; i < keys.length; i++) {\n    if (i !== 0) {\n      key += ',';\n    }\n    key += stringify(keys[i]);\n    key += ':';\n    key += ObjectToUniqueKey(obj[keys[i]]);\n  }\n\n  key += '}';\n  return key;\n};\n\n/**\n * Splits a string into a number of smaller segments of maximum size\n * @param str - The string\n * @param segsize - The maximum number of chars in the string.\n * @returns The string, split into appropriately-sized chunks\n */\nexport const splitStringBySize = function (\n  str: string,\n  segsize: number\n): string[] {\n  const len = str.length;\n\n  if (len <= segsize) {\n    return [str];\n  }\n\n  const dataSegs = [];\n  for (let c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n  return dataSegs;\n};\n\n/**\n * Apply a function to each (key, value) pair in an object or\n * apply a function to each (index, value) pair in an array\n * @param obj - The object or array to iterate over\n * @param fn - The function to apply\n */\nexport function each(obj: object, fn: (k: string, v: unknown) => void) {\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n\n/**\n * Like goog.bind, but doesn't bother to create a closure if opt_context is null/undefined.\n * @param callback - Callback function.\n * @param context - Optional context to bind to.\n *\n */\nexport const bindCallback = function (\n  callback: (a: unknown) => void,\n  context?: object | null\n): (a: unknown) => void {\n  return context ? callback.bind(context) : callback;\n};\n\n/**\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\n * I made one modification at the end and removed the NaN / Infinity\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\n * @param v - A double\n *\n */\nexport const doubleToIEEE754String = function (v: number): string {\n  assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n\n  const ebits = 11,\n    fbits = 52;\n  const bias = (1 << (ebits - 1)) - 1;\n  let s, e, f, ln, i;\n\n  // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  }\n\n  // Pack sign, exponent, fraction\n  const bits = [];\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  const str = bits.join('');\n\n  // Return the data as a hex string. --MJL\n  let hexByteString = '';\n  for (i = 0; i < 64; i += 8) {\n    let hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n    if (hexByte.length === 1) {\n      hexByte = '0' + hexByte;\n    }\n    hexByteString = hexByteString + hexByte;\n  }\n  return hexByteString.toLowerCase();\n};\n\n/**\n * Used to detect if we're in a Chrome content script (which executes in an\n * isolated environment where long-polling doesn't work).\n */\nexport const isChromeExtensionContentScript = function (): boolean {\n  return !!(\n    typeof window === 'object' &&\n    window['chrome'] &&\n    window['chrome']['extension'] &&\n    !/^chrome/.test(window.location.href)\n  );\n};\n\n/**\n * Used to detect if we're in a Windows 8 Store app.\n */\nexport const isWindowsStoreApp = function (): boolean {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n\n/**\n * Converts a server error code to a Javascript Error\n */\nexport function errorForServerCode(code: string, query: QueryContext): Error {\n  let reason = 'Unknown Error';\n  if (code === 'too_big') {\n    reason =\n      'The data requested exceeds the maximum size ' +\n      'that can be accessed with a single request.';\n  } else if (code === 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code === 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n\n  const error = new Error(\n    code + ' at ' + query._path.toString() + ': ' + reason\n  );\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (error as any).code = code.toUpperCase();\n  return error;\n}\n\n/**\n * Used to test for integer-looking strings\n */\nexport const INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\n\n/**\n * For use in keys, the minimum possible 32-bit integer.\n */\nexport const INTEGER_32_MIN = -2147483648;\n\n/**\n * For use in kyes, the maximum possible 32-bit integer.\n */\nexport const INTEGER_32_MAX = 2147483647;\n\n/**\n * If the string contains a 32-bit integer, return it.  Else return null.\n */\nexport const tryParseInt = function (str: string): number | null {\n  if (INTEGER_REGEXP_.test(str)) {\n    const intVal = Number(str);\n    if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\n      return intVal;\n    }\n  }\n  return null;\n};\n\n/**\n * Helper to run some code but catch any exceptions and re-throw them later.\n * Useful for preventing user callbacks from breaking internal code.\n *\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\n * convenient (we don't have to try to figure out when is a safe point to\n * re-throw it), and the behavior seems reasonable:\n *\n * * If you aren't pausing on exceptions, you get an error in the console with\n *   the correct stack trace.\n * * If you're pausing on all exceptions, the debugger will pause on your\n *   exception and then again when we rethrow it.\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\n *   on us re-throwing it.\n *\n * @param fn - The code to guard.\n */\nexport const exceptionGuard = function (fn: () => void) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(() => {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      const stack = e.stack || '';\n      warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n\n/**\n * Helper function to safely call opt_callback with the specified arguments.  It:\n * 1. Turns into a no-op if opt_callback is null or undefined.\n * 2. Wraps the call inside exceptionGuard to prevent exceptions from breaking our state.\n *\n * @param callback - Optional onComplete callback.\n * @param varArgs - Arbitrary args to be passed to opt_onComplete\n */\nexport const callUserCallback = function (\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback?: Function | null,\n  ...varArgs: unknown[]\n) {\n  if (typeof callback === 'function') {\n    exceptionGuard(() => {\n      callback(...varArgs);\n    });\n  }\n};\n\n/**\n * @returns {boolean} true if we think we're currently being crawled.\n */\nexport const beingCrawled = function (): boolean {\n  const userAgent =\n    (typeof window === 'object' &&\n      window['navigator'] &&\n      window['navigator']['userAgent']) ||\n    '';\n\n  // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n  return (\n    userAgent.search(\n      /googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i\n    ) >= 0\n  );\n};\n\n/**\n * Export a property of an object using a getter function.\n */\nexport const exportPropGetter = function (\n  object: object,\n  name: string,\n  fnGet: () => unknown\n) {\n  Object.defineProperty(object, name, { get: fnGet });\n};\n\n/**\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\n *\n * It is removed with clearTimeout() as normal.\n *\n * @param fn - Function to run.\n * @param time - Milliseconds to wait before running.\n * @returns The setTimeout() return value.\n */\nexport const setTimeoutNonBlocking = function (\n  fn: () => void,\n  time: number\n): number | object {\n  const timeout: number | object = setTimeout(fn, time);\n  // Note: at the time of this comment, unrefTimer is under the unstable set of APIs. Run with --unstable to enable the API.\n  if (\n    typeof timeout === 'number' &&\n    // @ts-ignore Is only defined in Deno environments.\n    typeof Deno !== 'undefined' &&\n    // @ts-ignore Deno and unrefTimer are only defined in Deno environments.\n    Deno['unrefTimer']\n  ) {\n    // @ts-ignore Deno and unrefTimer are only defined in Deno environments.\n    Deno.unrefTimer(timeout);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  } else if (typeof timeout === 'object' && (timeout as any)['unref']) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (timeout as any)['unref']();\n  }\n\n  return timeout;\n};\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AppCheckInternalComponentName,\n  AppCheckTokenListener,\n  AppCheckTokenResult,\n  FirebaseAppCheckInternal\n} from '@firebase/app-check-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { warn } from './util/util';\n\n/**\n * Abstraction around AppCheck's token fetching capabilities.\n */\nexport class AppCheckTokenProvider {\n  private appCheck?: FirebaseAppCheckInternal;\n  constructor(\n    private appName_: string,\n    private appCheckProvider?: Provider<AppCheckInternalComponentName>\n  ) {\n    this.appCheck = appCheckProvider?.getImmediate({ optional: true });\n    if (!this.appCheck) {\n      appCheckProvider?.get().then(appCheck => (this.appCheck = appCheck));\n    }\n  }\n\n  getToken(forceRefresh?: boolean): Promise<AppCheckTokenResult> {\n    if (!this.appCheck) {\n      return new Promise<AppCheckTokenResult>((resolve, reject) => {\n        // Support delayed initialization of FirebaseAppCheck. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // AppCheck and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(() => {\n          if (this.appCheck) {\n            this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n    return this.appCheck.getToken(forceRefresh);\n  }\n\n  addTokenChangeListener(listener: AppCheckTokenListener) {\n    this.appCheckProvider\n      ?.get()\n      .then(appCheck => appCheck.addTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    warn(\n      `Provided AppCheck credentials for the app named \"${this.appName_}\" ` +\n        'are invalid. This usually indicates your app was not initialized correctly.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseAuthTokenData } from '@firebase/app-types/private';\nimport {\n  FirebaseAuthInternal,\n  FirebaseAuthInternalName\n} from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { log, warn } from './util/util';\n\nexport interface AuthTokenProvider {\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData>;\n  addTokenChangeListener(listener: (token: string | null) => void): void;\n  removeTokenChangeListener(listener: (token: string | null) => void): void;\n  notifyForInvalidToken(): void;\n}\n\n/**\n * Abstraction around FirebaseApp's token fetching capabilities.\n */\nexport class FirebaseAuthTokenProvider implements AuthTokenProvider {\n  private auth_: FirebaseAuthInternal | null = null;\n\n  constructor(\n    private appName_: string,\n    private firebaseOptions_: object,\n    private authProvider_: Provider<FirebaseAuthInternalName>\n  ) {\n    this.auth_ = authProvider_.getImmediate({ optional: true });\n    if (!this.auth_) {\n      authProvider_.onInit(auth => (this.auth_ = auth));\n    }\n  }\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    if (!this.auth_) {\n      return new Promise<FirebaseAuthTokenData>((resolve, reject) => {\n        // Support delayed initialization of FirebaseAuth. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // Auth and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(() => {\n          if (this.auth_) {\n            this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n\n    return this.auth_.getToken(forceRefresh).catch(error => {\n      // TODO: Need to figure out all the cases this is raised and whether\n      // this makes sense.\n      if (error && error.code === 'auth/token-not-initialized') {\n        log('Got auth/token-not-initialized error.  Treating as null token.');\n        return null;\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // TODO: We might want to wrap the listener and call it with no args to\n    // avoid a leaky abstraction, but that makes removing the listener harder.\n    if (this.auth_) {\n      this.auth_.addAuthTokenListener(listener);\n    } else {\n      this.authProvider_\n        .get()\n        .then(auth => auth.addAuthTokenListener(listener));\n    }\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {\n    this.authProvider_\n      .get()\n      .then(auth => auth.removeAuthTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    let errorMessage =\n      'Provided authentication credentials for the app named \"' +\n      this.appName_ +\n      '\" are invalid. This usually indicates your app was not ' +\n      'initialized correctly. ';\n    if ('credential' in this.firebaseOptions_) {\n      errorMessage +=\n        'Make sure the \"credential\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else if ('serviceAccount' in this.firebaseOptions_) {\n      errorMessage +=\n        'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else {\n      errorMessage +=\n        'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\n        'initializeApp() match the values provided for your app at ' +\n        'https://console.firebase.google.com/.';\n    }\n    warn(errorMessage);\n  }\n}\n\n/* AuthTokenProvider that supplies a constant token. Used by Admin SDK or mockUserToken with emulators. */\nexport class EmulatorTokenProvider implements AuthTokenProvider {\n  /** A string that is treated as an admin access token by the RTDB emulator. Used by Admin SDK. */\n  static OWNER = 'owner';\n\n  constructor(private accessToken: string) {}\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    return Promise.resolve({\n      accessToken: this.accessToken\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // Invoke the listener immediately to match the behavior in Firebase Auth\n    // (see packages/auth/src/auth.js#L1807)\n    listener(this.accessToken);\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {}\n\n  notifyForInvalidToken(): void {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const PROTOCOL_VERSION = '5';\n\nexport const VERSION_PARAM = 'v';\n\nexport const TRANSPORT_SESSION_PARAM = 's';\n\nexport const REFERER_PARAM = 'r';\n\nexport const FORGE_REF = 'f';\n\n// Matches console.firebase.google.com, firebase-console-*.corp.google.com and\n// firebase.corp.google.com\nexport const FORGE_DOMAIN_RE =\n  /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\n\nexport const LAST_SESSION_PARAM = 'ls';\n\nexport const APPLICATION_ID_PARAM = 'p';\n\nexport const APP_CHECK_TOKEN_PARAM = 'ac';\n\nexport const WEBSOCKET = 'websocket';\n\nexport const LONG_POLLING = 'long_polling';\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { LONG_POLLING, WEBSOCKET } from '../realtime/Constants';\n\nimport { PersistentStorage } from './storage/storage';\nimport { each } from './util/util';\n\n/**\n * A class that holds metadata about a Repo object\n */\nexport class RepoInfo {\n  private _host: string;\n  private _domain: string;\n  internalHost: string;\n\n  /**\n   * @param host - Hostname portion of the url for the repo\n   * @param secure - Whether or not this repo is accessed over ssl\n   * @param namespace - The namespace represented by the repo\n   * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\n   * @param nodeAdmin - Whether this instance uses Admin SDK credentials\n   * @param persistenceKey - Override the default session persistence storage key\n   */\n  constructor(\n    host: string,\n    public readonly secure: boolean,\n    public readonly namespace: string,\n    public readonly webSocketOnly: boolean,\n    public readonly nodeAdmin: boolean = false,\n    public readonly persistenceKey: string = '',\n    public readonly includeNamespaceInQueryParams: boolean = false,\n    public readonly isUsingEmulator: boolean = false\n  ) {\n    this._host = host.toLowerCase();\n    this._domain = this._host.substr(this._host.indexOf('.') + 1);\n    this.internalHost =\n      (PersistentStorage.get('host:' + host) as string) || this._host;\n  }\n\n  isCacheableHost(): boolean {\n    return this.internalHost.substr(0, 2) === 's-';\n  }\n\n  isCustomHost() {\n    return (\n      this._domain !== 'firebaseio.com' &&\n      this._domain !== 'firebaseio-demo.com'\n    );\n  }\n\n  get host() {\n    return this._host;\n  }\n\n  set host(newHost: string) {\n    if (newHost !== this.internalHost) {\n      this.internalHost = newHost;\n      if (this.isCacheableHost()) {\n        PersistentStorage.set('host:' + this._host, this.internalHost);\n      }\n    }\n  }\n\n  toString(): string {\n    let str = this.toURLString();\n    if (this.persistenceKey) {\n      str += '<' + this.persistenceKey + '>';\n    }\n    return str;\n  }\n\n  toURLString(): string {\n    const protocol = this.secure ? 'https://' : 'http://';\n    const query = this.includeNamespaceInQueryParams\n      ? `?ns=${this.namespace}`\n      : '';\n    return `${protocol}${this.host}/${query}`;\n  }\n}\n\nfunction repoInfoNeedsQueryParam(repoInfo: RepoInfo): boolean {\n  return (\n    repoInfo.host !== repoInfo.internalHost ||\n    repoInfo.isCustomHost() ||\n    repoInfo.includeNamespaceInQueryParams\n  );\n}\n\n/**\n * Returns the websocket URL for this repo\n * @param repoInfo - RepoInfo object\n * @param type - of connection\n * @param params - list\n * @returns The URL for this repo\n */\nexport function repoInfoConnectionURL(\n  repoInfo: RepoInfo,\n  type: string,\n  params: { [k: string]: string }\n): string {\n  assert(typeof type === 'string', 'typeof type must == string');\n  assert(typeof params === 'object', 'typeof params must == object');\n\n  let connURL: string;\n  if (type === WEBSOCKET) {\n    connURL =\n      (repoInfo.secure ? 'wss://' : 'ws://') + repoInfo.internalHost + '/.ws?';\n  } else if (type === LONG_POLLING) {\n    connURL =\n      (repoInfo.secure ? 'https://' : 'http://') +\n      repoInfo.internalHost +\n      '/.lp?';\n  } else {\n    throw new Error('Unknown connection type: ' + type);\n  }\n  if (repoInfoNeedsQueryParam(repoInfo)) {\n    params['ns'] = repoInfo.namespace;\n  }\n\n  const pairs: string[] = [];\n\n  each(params, (key: string, value: string) => {\n    pairs.push(key + '=' + value);\n  });\n\n  return connURL + pairs.join('&');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deepCopy, contains } from '@firebase/util';\n\n/**\n * Tracks a collection of stats.\n */\nexport class StatsCollection {\n  private counters_: { [k: string]: number } = {};\n\n  incrementCounter(name: string, amount: number = 1) {\n    if (!contains(this.counters_, name)) {\n      this.counters_[name] = 0;\n    }\n\n    this.counters_[name] += amount;\n  }\n\n  get() {\n    return deepCopy(this.counters_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport { StatsCollection } from './StatsCollection';\n\nconst collections: { [k: string]: StatsCollection } = {};\nconst reporters: { [k: string]: unknown } = {};\n\nexport function statsManagerGetCollection(repoInfo: RepoInfo): StatsCollection {\n  const hashString = repoInfo.toString();\n\n  if (!collections[hashString]) {\n    collections[hashString] = new StatsCollection();\n  }\n\n  return collections[hashString];\n}\n\nexport function statsManagerGetOrCreateReporter<T>(\n  repoInfo: RepoInfo,\n  creatorFunction: () => T\n): T {\n  const hashString = repoInfo.toString();\n\n  if (!reporters[hashString]) {\n    reporters[hashString] = creatorFunction();\n  }\n\n  return reporters[hashString] as T;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { exceptionGuard } from '../../core/util/util';\n\n/**\n * This class ensures the packets from the server arrive in order\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\n */\nexport class PacketReceiver {\n  pendingResponses: unknown[] = [];\n  currentResponseNum = 0;\n  closeAfterResponse = -1;\n  onClose: (() => void) | null = null;\n\n  /**\n   * @param onMessage_\n   */\n  constructor(private onMessage_: (a: {}) => void) {}\n\n  closeAfter(responseNum: number, callback: () => void) {\n    this.closeAfterResponse = responseNum;\n    this.onClose = callback;\n    if (this.closeAfterResponse < this.currentResponseNum) {\n      this.onClose();\n      this.onClose = null;\n    }\n  }\n\n  /**\n   * Each message from the server comes with a response number, and an array of data. The responseNumber\n   * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\n   * browsers will respond in the same order as the requests we sent\n   */\n  handleResponse(requestNum: number, data: unknown[]) {\n    this.pendingResponses[requestNum] = data;\n    while (this.pendingResponses[this.currentResponseNum]) {\n      const toProcess = this.pendingResponses[\n        this.currentResponseNum\n      ] as unknown[];\n      delete this.pendingResponses[this.currentResponseNum];\n      for (let i = 0; i < toProcess.length; ++i) {\n        if (toProcess[i]) {\n          exceptionGuard(() => {\n            this.onMessage_(toProcess[i]);\n          });\n        }\n      }\n      if (this.currentResponseNum === this.closeAfterResponse) {\n        if (this.onClose) {\n          this.onClose();\n          this.onClose = null;\n        }\n        break;\n      }\n      this.currentResponseNum++;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Encode, isNodeSdk, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport {\n  executeWhenDOMReady,\n  isChromeExtensionContentScript,\n  isWindowsStoreApp,\n  log,\n  logWrapper,\n  LUIDGenerator,\n  splitStringBySize\n} from '../core/util/util';\n\nimport {\n  APP_CHECK_TOKEN_PARAM,\n  APPLICATION_ID_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  LONG_POLLING,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM\n} from './Constants';\nimport { PacketReceiver } from './polling/PacketReceiver';\nimport { Transport } from './Transport';\n\n// URL query parameters associated with longpolling\nexport const FIREBASE_LONGPOLL_START_PARAM = 'start';\nexport const FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nexport const FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nexport const FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nexport const FIREBASE_LONGPOLL_ID_PARAM = 'id';\nexport const FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nexport const FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nexport const FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nexport const FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nexport const FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nexport const FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\n\n//Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\nconst MAX_URL_DATA_SIZE = 1870;\nconst SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\nconst MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n\n/**\n * Keepalive period\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\n * length of 30 seconds that we can't exceed.\n */\nconst KEEPALIVE_REQUEST_INTERVAL = 25000;\n\n/**\n * How long to wait before aborting a long-polling connection attempt.\n */\nconst LP_CONNECT_TIMEOUT = 30000;\n\n/**\n * This class manages a single long-polling connection.\n */\nexport class BrowserPollConnection implements Transport {\n  bytesSent = 0;\n  bytesReceived = 0;\n  urlFn: (params: object) => string;\n  scriptTagHolder: FirebaseIFrameScriptHolder;\n  myDisconnFrame: HTMLIFrameElement;\n  curSegmentNum: number;\n  myPacketOrderer: PacketReceiver;\n  id: string;\n  password: string;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_ = false;\n  private isClosed_: boolean;\n  private connectTimeoutTimer_: number | null;\n  private onDisconnect_: ((a?: boolean) => void) | null;\n\n  /**\n   * @param connId An identifier for this connection, used for logging\n   * @param repoInfo The info for the endpoint to send data to.\n   * @param applicationId The Firebase App ID for this project.\n   * @param appCheckToken The AppCheck token for this client.\n   * @param authToken The AuthToken to use for this connection.\n   * @param transportSessionId Optional transportSessionid if we are\n   * reconnecting for an existing transport session\n   * @param lastSessionId Optional lastSessionId if the PersistentConnection has\n   * already created a connection previously\n   */\n  constructor(\n    public connId: string,\n    public repoInfo: RepoInfo,\n    private applicationId?: string,\n    private appCheckToken?: string,\n    private authToken?: string,\n    public transportSessionId?: string,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.urlFn = (params: { [k: string]: string }) => {\n      // Always add the token if we have one.\n      if (this.appCheckToken) {\n        params[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\n      }\n      return repoInfoConnectionURL(repoInfo, LONG_POLLING, params);\n    };\n  }\n\n  /**\n   * @param onMessage - Callback when messages arrive\n   * @param onDisconnect - Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.curSegmentNum = 0;\n    this.onDisconnect_ = onDisconnect;\n    this.myPacketOrderer = new PacketReceiver(onMessage);\n    this.isClosed_ = false;\n\n    this.connectTimeoutTimer_ = setTimeout(() => {\n      this.log_('Timed out trying to connect.');\n      // Make sure we clear the host cache\n      this.onClosed_();\n      this.connectTimeoutTimer_ = null;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(LP_CONNECT_TIMEOUT)) as any;\n\n    // Ensure we delay the creation of the iframe until the DOM is loaded.\n    executeWhenDOMReady(() => {\n      if (this.isClosed_) {\n        return;\n      }\n\n      //Set up a callback that gets triggered once a connection is set up.\n      this.scriptTagHolder = new FirebaseIFrameScriptHolder(\n        (...args) => {\n          const [command, arg1, arg2, arg3, arg4] = args;\n          this.incrementIncomingBytes_(args);\n          if (!this.scriptTagHolder) {\n            return; // we closed the connection.\n          }\n\n          if (this.connectTimeoutTimer_) {\n            clearTimeout(this.connectTimeoutTimer_);\n            this.connectTimeoutTimer_ = null;\n          }\n          this.everConnected_ = true;\n          if (command === FIREBASE_LONGPOLL_START_PARAM) {\n            this.id = arg1 as string;\n            this.password = arg2 as string;\n          } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n            // Don't clear the host cache. We got a response from the server, so we know it's reachable\n            if (arg1) {\n              // We aren't expecting any more data (other than what the server's already in the process of sending us\n              // through our already open polls), so don't send any more.\n              this.scriptTagHolder.sendNewPolls = false;\n\n              // arg1 in this case is the last response number sent by the server. We should try to receive\n              // all of the responses up to this one before closing\n              this.myPacketOrderer.closeAfter(arg1 as number, () => {\n                this.onClosed_();\n              });\n            } else {\n              this.onClosed_();\n            }\n          } else {\n            throw new Error('Unrecognized command received: ' + command);\n          }\n        },\n        (...args) => {\n          const [pN, data] = args;\n          this.incrementIncomingBytes_(args);\n          this.myPacketOrderer.handleResponse(pN as number, data as unknown[]);\n        },\n        () => {\n          this.onClosed_();\n        },\n        this.urlFn\n      );\n\n      //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n      //from cache.\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(\n        Math.random() * 100000000\n      );\n      if (this.scriptTagHolder.uniqueCallbackIdentifier) {\n        urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] =\n          this.scriptTagHolder.uniqueCallbackIdentifier;\n      }\n      urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n      if (this.transportSessionId) {\n        urlParams[TRANSPORT_SESSION_PARAM] = this.transportSessionId;\n      }\n      if (this.lastSessionId) {\n        urlParams[LAST_SESSION_PARAM] = this.lastSessionId;\n      }\n      if (this.applicationId) {\n        urlParams[APPLICATION_ID_PARAM] = this.applicationId;\n      }\n      if (this.appCheckToken) {\n        urlParams[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\n      }\n      if (\n        typeof location !== 'undefined' &&\n        location.hostname &&\n        FORGE_DOMAIN_RE.test(location.hostname)\n      ) {\n        urlParams[REFERER_PARAM] = FORGE_REF;\n      }\n      const connectURL = this.urlFn(urlParams);\n      this.log_('Connecting via long-poll to ' + connectURL);\n      this.scriptTagHolder.addTag(connectURL, () => {\n        /* do nothing */\n      });\n    });\n  }\n\n  /**\n   * Call this when a handshake has completed successfully and we want to consider the connection established\n   */\n  start() {\n    this.scriptTagHolder.startLongPoll(this.id, this.password);\n    this.addDisconnectPingFrame(this.id, this.password);\n  }\n\n  static forceAllow_: boolean;\n\n  /**\n   * Forces long polling to be considered as a potential transport\n   */\n  static forceAllow() {\n    BrowserPollConnection.forceAllow_ = true;\n  }\n\n  static forceDisallow_: boolean;\n\n  /**\n   * Forces longpolling to not be considered as a potential transport\n   */\n  static forceDisallow() {\n    BrowserPollConnection.forceDisallow_ = true;\n  }\n\n  // Static method, use string literal so it can be accessed in a generic way\n  static isAvailable() {\n    if (isNodeSdk()) {\n      return false;\n    } else if (BrowserPollConnection.forceAllow_) {\n      return true;\n    } else {\n      // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n      // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n      return (\n        !BrowserPollConnection.forceDisallow_ &&\n        typeof document !== 'undefined' &&\n        document.createElement != null &&\n        !isChromeExtensionContentScript() &&\n        !isWindowsStoreApp()\n      );\n    }\n  }\n\n  /**\n   * No-op for polling\n   */\n  markConnectionHealthy() {}\n\n  /**\n   * Stops polling and cleans up the iframe\n   */\n  private shutdown_() {\n    this.isClosed_ = true;\n\n    if (this.scriptTagHolder) {\n      this.scriptTagHolder.close();\n      this.scriptTagHolder = null;\n    }\n\n    //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n    if (this.myDisconnFrame) {\n      document.body.removeChild(this.myDisconnFrame);\n      this.myDisconnFrame = null;\n    }\n\n    if (this.connectTimeoutTimer_) {\n      clearTimeout(this.connectTimeoutTimer_);\n      this.connectTimeoutTimer_ = null;\n    }\n  }\n\n  /**\n   * Triggered when this transport is closed\n   */\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is closing itself');\n      this.shutdown_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_(this.everConnected_);\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\n   * that we've left.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is being closed.');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\n   * broken into chunks (since URLs have a small maximum length).\n   * @param data - The JSON data to transmit.\n   */\n  send(data: {}) {\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //first, lets get the base64-encoded data\n    const base64data = base64Encode(dataStr);\n\n    //We can only fit a certain amount in each URL, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n    const dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\n\n    //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n    //of segments so that we can reassemble the packet on the server.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.scriptTagHolder.enqueueSegment(\n        this.curSegmentNum,\n        dataSegs.length,\n        dataSegs[i]\n      );\n      this.curSegmentNum++;\n    }\n  }\n\n  /**\n   * This is how we notify the server that we're leaving.\n   * We aren't able to send requests with DHTML on a window close event, but we can\n   * trigger XHR requests in some browsers (everything but Opera basically).\n   */\n  addDisconnectPingFrame(id: string, pw: string) {\n    if (isNodeSdk()) {\n      return;\n    }\n    this.myDisconnFrame = document.createElement('iframe');\n    const urlParams: { [k: string]: string } = {};\n    urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n    urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\n    urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\n    this.myDisconnFrame.src = this.urlFn(urlParams);\n    this.myDisconnFrame.style.display = 'none';\n\n    document.body.appendChild(this.myDisconnFrame);\n  }\n\n  /**\n   * Used to track the bytes received by this client\n   */\n  private incrementIncomingBytes_(args: unknown) {\n    // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n    const bytesReceived = stringify(args).length;\n    this.bytesReceived += bytesReceived;\n    this.stats_.incrementCounter('bytes_received', bytesReceived);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface IFrameElement extends HTMLIFrameElement {\n  doc: Document;\n}\n\n/*********************************************************************************************\n * A wrapper around an iframe that is used as a long-polling script holder.\n *********************************************************************************************/\nexport class FirebaseIFrameScriptHolder {\n  //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n  //problems in some browsers.\n  outstandingRequests = new Set<number>();\n\n  //A queue of the pending segments waiting for transmission to the server.\n  pendingSegs: Array<{ seg: number; ts: number; d: unknown }> = [];\n\n  //A serial number. We use this for two things:\n  // 1) A way to ensure the browser doesn't cache responses to polls\n  // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n  //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n  //    JSONP code in the order it was added to the iframe.\n  currentSerial = Math.floor(Math.random() * 100000000);\n\n  // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n  // incoming data from the server that we're waiting for).\n  sendNewPolls = true;\n\n  uniqueCallbackIdentifier: number;\n  myIFrame: IFrameElement;\n  alive: boolean;\n  myID: string;\n  myPW: string;\n  commandCB: (command: string, ...args: unknown[]) => void;\n  onMessageCB: (...args: unknown[]) => void;\n\n  /**\n   * @param commandCB - The callback to be called when control commands are recevied from the server.\n   * @param onMessageCB - The callback to be triggered when responses arrive from the server.\n   * @param onDisconnect - The callback to be triggered when this tag holder is closed\n   * @param urlFn - A function that provides the URL of the endpoint to send data to.\n   */\n  constructor(\n    commandCB: (command: string, ...args: unknown[]) => void,\n    onMessageCB: (...args: unknown[]) => void,\n    public onDisconnect: () => void,\n    public urlFn: (a: object) => string\n  ) {\n    if (!isNodeSdk()) {\n      //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n      //iframes where we put the long-polling script tags. We have two callbacks:\n      //   1) Command Callback - Triggered for control issues, like starting a connection.\n      //   2) Message Callback - Triggered when new data arrives.\n      this.uniqueCallbackIdentifier = LUIDGenerator();\n      window[\n        FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier\n      ] = commandCB;\n      window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] =\n        onMessageCB;\n\n      //Create an iframe for us to add script tags to.\n      this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\n\n      // Set the iframe's contents.\n      let script = '';\n      // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n      // for ie9, but ie8 needs to do it again in the document itself.\n      if (\n        this.myIFrame.src &&\n        this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:'\n      ) {\n        const currentDomain = document.domain;\n        script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n      }\n      const iframeContents = '<html><body>' + script + '</body></html>';\n      try {\n        this.myIFrame.doc.open();\n        this.myIFrame.doc.write(iframeContents);\n        this.myIFrame.doc.close();\n      } catch (e) {\n        log('frame writing exception');\n        if (e.stack) {\n          log(e.stack);\n        }\n        log(e);\n      }\n    } else {\n      this.commandCB = commandCB;\n      this.onMessageCB = onMessageCB;\n    }\n  }\n\n  /**\n   * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\n   * actually use.\n   */\n  private static createIFrame_(): IFrameElement {\n    const iframe = document.createElement('iframe') as IFrameElement;\n    iframe.style.display = 'none';\n\n    // This is necessary in order to initialize the document inside the iframe\n    if (document.body) {\n      document.body.appendChild(iframe);\n      try {\n        // If document.domain has been modified in IE, this will throw an error, and we need to set the\n        // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n        // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n        const a = iframe.contentWindow.document;\n        if (!a) {\n          // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n          log('No IE domain setting required');\n        }\n      } catch (e) {\n        const domain = document.domain;\n        iframe.src =\n          \"javascript:void((function(){document.open();document.domain='\" +\n          domain +\n          \"';document.close();})())\";\n      }\n    } else {\n      // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n      // never gets hit.\n      throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n    }\n\n    // Get the document of the iframe in a browser-specific way.\n    if (iframe.contentDocument) {\n      iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n    } else if (iframe.contentWindow) {\n      iframe.doc = iframe.contentWindow.document; // Internet Explorer\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((iframe as any).document) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      iframe.doc = (iframe as any).document; //others?\n    }\n\n    return iframe;\n  }\n\n  /**\n   * Cancel all outstanding queries and remove the frame.\n   */\n  close() {\n    //Mark this iframe as dead, so no new requests are sent.\n    this.alive = false;\n\n    if (this.myIFrame) {\n      //We have to actually remove all of the html inside this iframe before removing it from the\n      //window, or IE will continue loading and executing the script tags we've already added, which\n      //can lead to some errors being thrown. Setting textContent seems to be the safest way to do this.\n      this.myIFrame.doc.body.textContent = '';\n      setTimeout(() => {\n        if (this.myIFrame !== null) {\n          document.body.removeChild(this.myIFrame);\n          this.myIFrame = null;\n        }\n      }, Math.floor(0));\n    }\n\n    // Protect from being called recursively.\n    const onDisconnect = this.onDisconnect;\n    if (onDisconnect) {\n      this.onDisconnect = null;\n      onDisconnect();\n    }\n  }\n\n  /**\n   * Actually start the long-polling session by adding the first script tag(s) to the iframe.\n   * @param id - The ID of this connection\n   * @param pw - The password for this connection\n   */\n  startLongPoll(id: string, pw: string) {\n    this.myID = id;\n    this.myPW = pw;\n    this.alive = true;\n\n    //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n    while (this.newRequest_()) {}\n  }\n\n  /**\n   * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\n   * too many outstanding requests and we are still alive.\n   *\n   * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\n   * needed.\n   */\n  private newRequest_() {\n    // We keep one outstanding request open all the time to receive data, but if we need to send data\n    // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n    // close the old request.\n    if (\n      this.alive &&\n      this.sendNewPolls &&\n      this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)\n    ) {\n      //construct our url\n      this.currentSerial++;\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n      urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n      let theURL = this.urlFn(urlParams);\n      //Now add as much data as we can.\n      let curDataString = '';\n      let i = 0;\n\n      while (this.pendingSegs.length > 0) {\n        //first, lets see if the next segment will fit.\n        const nextSeg = this.pendingSegs[0];\n        if (\n          (nextSeg.d as unknown[]).length +\n            SEG_HEADER_SIZE +\n            curDataString.length <=\n          MAX_URL_DATA_SIZE\n        ) {\n          //great, the segment will fit. Lets append it.\n          const theSeg = this.pendingSegs.shift();\n          curDataString =\n            curDataString +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\n            i +\n            '=' +\n            theSeg.seg +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\n            i +\n            '=' +\n            theSeg.ts +\n            '&' +\n            FIREBASE_LONGPOLL_DATA_PARAM +\n            i +\n            '=' +\n            theSeg.d;\n          i++;\n        } else {\n          break;\n        }\n      }\n\n      theURL = theURL + curDataString;\n      this.addLongPollTag_(theURL, this.currentSerial);\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Queue a packet for transmission to the server.\n   * @param segnum - A sequential id for this packet segment used for reassembly\n   * @param totalsegs - The total number of segments in this packet\n   * @param data - The data for this segment.\n   */\n  enqueueSegment(segnum: number, totalsegs: number, data: unknown) {\n    //add this to the queue of segments to send.\n    this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\n\n    //send the data immediately if there isn't already data being transmitted, unless\n    //startLongPoll hasn't been called yet.\n    if (this.alive) {\n      this.newRequest_();\n    }\n  }\n\n  /**\n   * Add a script tag for a regular long-poll request.\n   * @param url - The URL of the script tag.\n   * @param serial - The serial number of the request.\n   */\n  private addLongPollTag_(url: string, serial: number) {\n    //remember that we sent this request.\n    this.outstandingRequests.add(serial);\n\n    const doNewRequest = () => {\n      this.outstandingRequests.delete(serial);\n      this.newRequest_();\n    };\n\n    // If this request doesn't return on its own accord (by the server sending us some data), we'll\n    // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n    const keepaliveTimeout = setTimeout(\n      doNewRequest,\n      Math.floor(KEEPALIVE_REQUEST_INTERVAL)\n    );\n\n    const readyStateCB = () => {\n      // Request completed.  Cancel the keepalive.\n      clearTimeout(keepaliveTimeout);\n\n      // Trigger a new request so we can continue receiving data.\n      doNewRequest();\n    };\n\n    this.addTag(url, readyStateCB);\n  }\n\n  /**\n   * Add an arbitrary script tag to the iframe.\n   * @param url - The URL for the script tag source.\n   * @param loadCB - A callback to be triggered once the script has loaded.\n   */\n  addTag(url: string, loadCB: () => void) {\n    if (isNodeSdk()) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this as any).doNodeLongPoll(url, loadCB);\n    } else {\n      setTimeout(() => {\n        try {\n          // if we're already closed, don't add this poll\n          if (!this.sendNewPolls) {\n            return;\n          }\n          const newScript = this.myIFrame.doc.createElement('script');\n          newScript.type = 'text/javascript';\n          newScript.async = true;\n          newScript.src = url;\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          newScript.onload = (newScript as any).onreadystatechange =\n            function () {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              const rstate = (newScript as any).readyState;\n              if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                newScript.onload = (newScript as any).onreadystatechange = null;\n                if (newScript.parentNode) {\n                  newScript.parentNode.removeChild(newScript);\n                }\n                loadCB();\n              }\n            };\n          newScript.onerror = () => {\n            log('Long-poll script failed to load: ' + url);\n            this.sendNewPolls = false;\n            this.close();\n          };\n          this.myIFrame.doc.body.appendChild(newScript);\n        } catch (e) {\n          // TODO: we should make this error visible somehow\n        }\n      }, Math.floor(1));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isNodeSdk, jsonEval, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { logWrapper, splitStringBySize } from '../core/util/util';\nimport { SDK_VERSION } from '../core/version';\n\nimport {\n  APPLICATION_ID_PARAM,\n  APP_CHECK_TOKEN_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM,\n  WEBSOCKET\n} from './Constants';\nimport { Transport } from './Transport';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const MozWebSocket: any;\n\nconst WEBSOCKET_MAX_FRAME_SIZE = 16384;\nconst WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\n\nlet WebSocketImpl = null;\nif (typeof MozWebSocket !== 'undefined') {\n  WebSocketImpl = MozWebSocket;\n} else if (typeof WebSocket !== 'undefined') {\n  WebSocketImpl = WebSocket;\n}\n\nexport function setWebSocketImpl(impl) {\n  WebSocketImpl = impl;\n}\n\n/**\n * Create a new websocket connection with the given callbacks.\n */\nexport class WebSocketConnection implements Transport {\n  keepaliveTimer: number | null = null;\n  frames: string[] | null = null;\n  totalFrames = 0;\n  bytesSent = 0;\n  bytesReceived = 0;\n  connURL: string;\n  onDisconnect: (a?: boolean) => void;\n  onMessage: (msg: {}) => void;\n  mySock: WebSocket | null;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_: boolean;\n  private isClosed_: boolean;\n  private nodeAdmin: boolean;\n\n  /**\n   * @param connId identifier for this transport\n   * @param repoInfo The info for the websocket endpoint.\n   * @param applicationId The Firebase App ID for this project.\n   * @param appCheckToken The App Check Token for this client.\n   * @param authToken The Auth Token for this client.\n   * @param transportSessionId Optional transportSessionId if this is connecting\n   * to an existing transport session\n   * @param lastSessionId Optional lastSessionId if there was a previous\n   * connection\n   */\n  constructor(\n    public connId: string,\n    repoInfo: RepoInfo,\n    private applicationId?: string,\n    private appCheckToken?: string,\n    private authToken?: string,\n    transportSessionId?: string,\n    lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(this.connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.connURL = WebSocketConnection.connectionURL_(\n      repoInfo,\n      transportSessionId,\n      lastSessionId,\n      appCheckToken,\n      applicationId\n    );\n    this.nodeAdmin = repoInfo.nodeAdmin;\n  }\n\n  /**\n   * @param repoInfo - The info for the websocket endpoint.\n   * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\n   *                                         session\n   * @param lastSessionId - Optional lastSessionId if there was a previous connection\n   * @returns connection url\n   */\n  private static connectionURL_(\n    repoInfo: RepoInfo,\n    transportSessionId?: string,\n    lastSessionId?: string,\n    appCheckToken?: string,\n    applicationId?: string\n  ): string {\n    const urlParams: { [k: string]: string } = {};\n    urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n    if (\n      !isNodeSdk() &&\n      typeof location !== 'undefined' &&\n      location.hostname &&\n      FORGE_DOMAIN_RE.test(location.hostname)\n    ) {\n      urlParams[REFERER_PARAM] = FORGE_REF;\n    }\n    if (transportSessionId) {\n      urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\n    }\n    if (lastSessionId) {\n      urlParams[LAST_SESSION_PARAM] = lastSessionId;\n    }\n    if (appCheckToken) {\n      urlParams[APP_CHECK_TOKEN_PARAM] = appCheckToken;\n    }\n    if (applicationId) {\n      urlParams[APPLICATION_ID_PARAM] = applicationId;\n    }\n\n    return repoInfoConnectionURL(repoInfo, WEBSOCKET, urlParams);\n  }\n\n  /**\n   * @param onMessage - Callback when messages arrive\n   * @param onDisconnect - Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.onDisconnect = onDisconnect;\n    this.onMessage = onMessage;\n\n    this.log_('Websocket connecting to ' + this.connURL);\n\n    this.everConnected_ = false;\n    // Assume failure until proven otherwise.\n    PersistentStorage.set('previous_websocket_failure', true);\n\n    try {\n      let options: { [k: string]: object };\n      if (isNodeSdk()) {\n        const device = this.nodeAdmin ? 'AdminNode' : 'Node';\n        // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n        options = {\n          headers: {\n            'User-Agent': `Firebase/${PROTOCOL_VERSION}/${SDK_VERSION}/${process.platform}/${device}`,\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        };\n\n        // If using Node with admin creds, AppCheck-related checks are unnecessary.\n        // Note that we send the credentials here even if they aren't admin credentials, which is\n        // not a problem.\n        // Note that this header is just used to bypass appcheck, and the token should still be sent\n        // through the websocket connection once it is established.\n        if (this.authToken) {\n          options.headers['Authorization'] = `Bearer ${this.authToken}`;\n        }\n        if (this.appCheckToken) {\n          options.headers['X-Firebase-AppCheck'] = this.appCheckToken;\n        }\n\n        // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n        const env = process['env'];\n        const proxy =\n          this.connURL.indexOf('wss://') === 0\n            ? env['HTTPS_PROXY'] || env['https_proxy']\n            : env['HTTP_PROXY'] || env['http_proxy'];\n\n        if (proxy) {\n          options['proxy'] = { origin: proxy };\n        }\n      }\n      this.mySock = new WebSocketImpl(this.connURL, [], options);\n    } catch (e) {\n      this.log_('Error instantiating WebSocket.');\n      const error = e.message || e.data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n      return;\n    }\n\n    this.mySock.onopen = () => {\n      this.log_('Websocket connected.');\n      this.everConnected_ = true;\n    };\n\n    this.mySock.onclose = () => {\n      this.log_('Websocket connection was disconnected.');\n      this.mySock = null;\n      this.onClosed_();\n    };\n\n    this.mySock.onmessage = m => {\n      this.handleIncomingFrame(m as {});\n    };\n\n    this.mySock.onerror = e => {\n      this.log_('WebSocket error.  Closing connection.');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const error = (e as any).message || (e as any).data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n    };\n  }\n\n  /**\n   * No-op for websockets, we don't need to do anything once the connection is confirmed as open\n   */\n  start() {}\n\n  static forceDisallow_: boolean;\n\n  static forceDisallow() {\n    WebSocketConnection.forceDisallow_ = true;\n  }\n\n  static isAvailable(): boolean {\n    let isOldAndroid = false;\n    if (typeof navigator !== 'undefined' && navigator.userAgent) {\n      const oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n      const oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n      if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n        if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n          isOldAndroid = true;\n        }\n      }\n    }\n\n    return (\n      !isOldAndroid &&\n      WebSocketImpl !== null &&\n      !WebSocketConnection.forceDisallow_\n    );\n  }\n\n  /**\n   * Number of response before we consider the connection \"healthy.\"\n   */\n  static responsesRequiredToBeHealthy = 2;\n\n  /**\n   * Time to wait for the connection te become healthy before giving up.\n   */\n  static healthyTimeout = 30000;\n\n  /**\n   * Returns true if we previously failed to connect with this transport.\n   */\n  static previouslyFailed(): boolean {\n    // If our persistent storage is actually only in-memory storage,\n    // we default to assuming that it previously failed to be safe.\n    return (\n      PersistentStorage.isInMemoryStorage ||\n      PersistentStorage.get('previous_websocket_failure') === true\n    );\n  }\n\n  markConnectionHealthy() {\n    PersistentStorage.remove('previous_websocket_failure');\n  }\n\n  private appendFrame_(data: string) {\n    this.frames.push(data);\n    if (this.frames.length === this.totalFrames) {\n      const fullMess = this.frames.join('');\n      this.frames = null;\n      const jsonMess = jsonEval(fullMess) as object;\n\n      //handle the message\n      this.onMessage(jsonMess);\n    }\n  }\n\n  /**\n   * @param frameCount - The number of frames we are expecting from the server\n   */\n  private handleNewFrameCount_(frameCount: number) {\n    this.totalFrames = frameCount;\n    this.frames = [];\n  }\n\n  /**\n   * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\n   * @returns Any remaining data to be process, or null if there is none\n   */\n  private extractFrameCount_(data: string): string | null {\n    assert(this.frames === null, 'We already have a frame buffer');\n    // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n    // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n    if (data.length <= 6) {\n      const frameCount = Number(data);\n      if (!isNaN(frameCount)) {\n        this.handleNewFrameCount_(frameCount);\n        return null;\n      }\n    }\n    this.handleNewFrameCount_(1);\n    return data;\n  }\n\n  /**\n   * Process a websocket frame that has arrived from the server.\n   * @param mess - The frame data\n   */\n  handleIncomingFrame(mess: { [k: string]: unknown }) {\n    if (this.mySock === null) {\n      return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n    }\n    const data = mess['data'] as string;\n    this.bytesReceived += data.length;\n    this.stats_.incrementCounter('bytes_received', data.length);\n\n    this.resetKeepAlive();\n\n    if (this.frames !== null) {\n      // we're buffering\n      this.appendFrame_(data);\n    } else {\n      // try to parse out a frame count, otherwise, assume 1 and process it\n      const remainingData = this.extractFrameCount_(data);\n      if (remainingData !== null) {\n        this.appendFrame_(remainingData);\n      }\n    }\n  }\n\n  /**\n   * Send a message to the server\n   * @param data - The JSON object to transmit\n   */\n  send(data: {}) {\n    this.resetKeepAlive();\n\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //We can only fit a certain amount in each websocket frame, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    const dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\n\n    //Send the length header\n    if (dataSegs.length > 1) {\n      this.sendString_(String(dataSegs.length));\n    }\n\n    //Send the actual data in segments.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.sendString_(dataSegs[i]);\n    }\n  }\n\n  private shutdown_() {\n    this.isClosed_ = true;\n    if (this.keepaliveTimer) {\n      clearInterval(this.keepaliveTimer);\n      this.keepaliveTimer = null;\n    }\n\n    if (this.mySock) {\n      this.mySock.close();\n      this.mySock = null;\n    }\n  }\n\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is closing itself');\n      this.shutdown_();\n\n      // since this is an internal close, trigger the close listener\n      if (this.onDisconnect) {\n        this.onDisconnect(this.everConnected_);\n        this.onDisconnect = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler.\n   * Close the websocket and kill the connection.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is being closed');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\n   * the last activity.\n   */\n  resetKeepAlive() {\n    clearInterval(this.keepaliveTimer);\n    this.keepaliveTimer = setInterval(() => {\n      //If there has been no websocket activity for a while, send a no-op\n      if (this.mySock) {\n        this.sendString_('0');\n      }\n      this.resetKeepAlive();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL)) as any;\n  }\n\n  /**\n   * Send a string over the websocket.\n   *\n   * @param str - String to send.\n   */\n  private sendString_(str: string) {\n    // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n    // calls for some unknown reason.  We treat these as an error and disconnect.\n    // See https://app.asana.com/0/58926111402292/68021340250410\n    try {\n      this.mySock.send(str);\n    } catch (e) {\n      this.log_(\n        'Exception thrown from WebSocket.send():',\n        e.message || e.data,\n        'Closing connection.'\n      );\n      setTimeout(this.onClosed_.bind(this), 0);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { warn } from '../core/util/util';\n\nimport { BrowserPollConnection } from './BrowserPollConnection';\nimport { TransportConstructor } from './Transport';\nimport { WebSocketConnection } from './WebSocketConnection';\n\n/**\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\n * lifecycle.\n *\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\n * they are available.\n */\nexport class TransportManager {\n  private transports_: TransportConstructor[];\n\n  // Keeps track of whether the TransportManager has already chosen a transport to use\n  static globalTransportInitialized_ = false;\n\n  static get ALL_TRANSPORTS() {\n    return [BrowserPollConnection, WebSocketConnection];\n  }\n\n  /**\n   * Returns whether transport has been selected to ensure WebSocketConnection or BrowserPollConnection are not called after\n   * TransportManager has already set up transports_\n   */\n  static get IS_TRANSPORT_INITIALIZED() {\n    return this.globalTransportInitialized_;\n  }\n\n  /**\n   * @param repoInfo - Metadata around the namespace we're connecting to\n   */\n  constructor(repoInfo: RepoInfo) {\n    this.initTransports_(repoInfo);\n  }\n\n  private initTransports_(repoInfo: RepoInfo) {\n    const isWebSocketsAvailable: boolean =\n      WebSocketConnection && WebSocketConnection['isAvailable']();\n    let isSkipPollConnection =\n      isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\n\n    if (repoInfo.webSocketOnly) {\n      if (!isWebSocketsAvailable) {\n        warn(\n          \"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\"\n        );\n      }\n\n      isSkipPollConnection = true;\n    }\n\n    if (isSkipPollConnection) {\n      this.transports_ = [WebSocketConnection];\n    } else {\n      const transports = (this.transports_ = [] as TransportConstructor[]);\n      for (const transport of TransportManager.ALL_TRANSPORTS) {\n        if (transport && transport['isAvailable']()) {\n          transports.push(transport);\n        }\n      }\n      TransportManager.globalTransportInitialized_ = true;\n    }\n  }\n\n  /**\n   * @returns The constructor for the initial transport to use\n   */\n  initialTransport(): TransportConstructor {\n    if (this.transports_.length > 0) {\n      return this.transports_[0];\n    } else {\n      throw new Error('No transports available');\n    }\n  }\n\n  /**\n   * @returns The constructor for the next transport, or null\n   */\n  upgradeTransport(): TransportConstructor | null {\n    if (this.transports_.length > 1) {\n      return this.transports_[1];\n    } else {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { Indexable } from '../core/util/misc';\nimport {\n  error,\n  logWrapper,\n  requireKey,\n  setTimeoutNonBlocking,\n  warn\n} from '../core/util/util';\n\nimport { PROTOCOL_VERSION } from './Constants';\nimport { Transport, TransportConstructor } from './Transport';\nimport { TransportManager } from './TransportManager';\n\n// Abort upgrade attempt if it takes longer than 60s.\nconst UPGRADE_TIMEOUT = 60000;\n\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\nconst DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\n\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\nconst BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nconst BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\n\nconst enum RealtimeState {\n  CONNECTING,\n  CONNECTED,\n  DISCONNECTED\n}\n\nconst MESSAGE_TYPE = 't';\nconst MESSAGE_DATA = 'd';\nconst CONTROL_SHUTDOWN = 's';\nconst CONTROL_RESET = 'r';\nconst CONTROL_ERROR = 'e';\nconst CONTROL_PONG = 'o';\nconst SWITCH_ACK = 'a';\nconst END_TRANSMISSION = 'n';\nconst PING = 'p';\n\nconst SERVER_HELLO = 'h';\n\n/**\n * Creates a new real-time connection to the server using whichever method works\n * best in the current browser.\n */\nexport class Connection {\n  connectionCount = 0;\n  pendingDataMessages: unknown[] = [];\n  sessionId: string;\n\n  private conn_: Transport;\n  private healthyTimeout_: number;\n  private isHealthy_: boolean;\n  private log_: (...args: unknown[]) => void;\n  private primaryResponsesRequired_: number;\n  private rx_: Transport;\n  private secondaryConn_: Transport;\n  private secondaryResponsesRequired_: number;\n  private state_ = RealtimeState.CONNECTING;\n  private transportManager_: TransportManager;\n  private tx_: Transport;\n\n  /**\n   * @param id - an id for this connection\n   * @param repoInfo_ - the info for the endpoint to connect to\n   * @param applicationId_ - the Firebase App ID for this project\n   * @param appCheckToken_ - The App Check Token for this device.\n   * @param authToken_ - The auth token for this session.\n   * @param onMessage_ - the callback to be triggered when a server-push message arrives\n   * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\n   * @param onDisconnect_ - the callback to be triggered when a connection was lost\n   * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\n   * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\n   */\n  constructor(\n    public id: string,\n    private repoInfo_: RepoInfo,\n    private applicationId_: string | undefined,\n    private appCheckToken_: string | undefined,\n    private authToken_: string | undefined,\n    private onMessage_: (a: {}) => void,\n    private onReady_: (a: number, b: string) => void,\n    private onDisconnect_: () => void,\n    private onKill_: (a: string) => void,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper('c:' + this.id + ':');\n    this.transportManager_ = new TransportManager(repoInfo_);\n    this.log_('Connection created');\n    this.start_();\n  }\n\n  /**\n   * Starts a connection attempt\n   */\n  private start_(): void {\n    const conn = this.transportManager_.initialTransport();\n    this.conn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.appCheckToken_,\n      this.authToken_,\n      null,\n      this.lastSessionId\n    );\n\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessageReceived = this.connReceiver_(this.conn_);\n    const onConnectionLost = this.disconnReceiver_(this.conn_);\n    this.tx_ = this.conn_;\n    this.rx_ = this.conn_;\n    this.secondaryConn_ = null;\n    this.isHealthy_ = false;\n\n    /*\n     * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\n     * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\n     * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\n     * still have the context of your originating frame.\n     */\n    setTimeout(() => {\n      // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n      this.conn_ && this.conn_.open(onMessageReceived, onConnectionLost);\n    }, Math.floor(0));\n\n    const healthyTimeoutMS = conn['healthyTimeout'] || 0;\n    if (healthyTimeoutMS > 0) {\n      this.healthyTimeout_ = setTimeoutNonBlocking(() => {\n        this.healthyTimeout_ = null;\n        if (!this.isHealthy_) {\n          if (\n            this.conn_ &&\n            this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has received ' +\n                this.conn_.bytesReceived +\n                ' bytes.  Marking connection healthy.'\n            );\n            this.isHealthy_ = true;\n            this.conn_.markConnectionHealthy();\n          } else if (\n            this.conn_ &&\n            this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has sent ' +\n                this.conn_.bytesSent +\n                ' bytes.  Leaving connection alive.'\n            );\n            // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n            // the server.\n          } else {\n            this.log_('Closing unhealthy connection after timeout.');\n            this.close();\n          }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      }, Math.floor(healthyTimeoutMS)) as any;\n    }\n  }\n\n  private nextTransportId_(): string {\n    return 'c:' + this.id + ':' + this.connectionCount++;\n  }\n\n  private disconnReceiver_(conn) {\n    return everConnected => {\n      if (conn === this.conn_) {\n        this.onConnectionLost_(everConnected);\n      } else if (conn === this.secondaryConn_) {\n        this.log_('Secondary connection lost.');\n        this.onSecondaryConnectionLost_();\n      } else {\n        this.log_('closing an old connection');\n      }\n    };\n  }\n\n  private connReceiver_(conn: Transport) {\n    return (message: Indexable) => {\n      if (this.state_ !== RealtimeState.DISCONNECTED) {\n        if (conn === this.rx_) {\n          this.onPrimaryMessageReceived_(message);\n        } else if (conn === this.secondaryConn_) {\n          this.onSecondaryMessageReceived_(message);\n        } else {\n          this.log_('message on old connection');\n        }\n      }\n    };\n  }\n\n  /**\n   * @param dataMsg - An arbitrary data message to be sent to the server\n   */\n  sendRequest(dataMsg: object) {\n    // wrap in a data message envelope and send it on\n    const msg = { t: 'd', d: dataMsg };\n    this.sendData_(msg);\n  }\n\n  tryCleanupConnection() {\n    if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n      this.log_(\n        'cleaning up and promoting a connection: ' + this.secondaryConn_.connId\n      );\n      this.conn_ = this.secondaryConn_;\n      this.secondaryConn_ = null;\n      // the server will shutdown the old connection\n    }\n  }\n\n  private onSecondaryControl_(controlData: { [k: string]: unknown }) {\n    if (MESSAGE_TYPE in controlData) {\n      const cmd = controlData[MESSAGE_TYPE] as string;\n      if (cmd === SWITCH_ACK) {\n        this.upgradeIfSecondaryHealthy_();\n      } else if (cmd === CONTROL_RESET) {\n        // Most likely the session wasn't valid. Abandon the switch attempt\n        this.log_('Got a reset on secondary, closing it');\n        this.secondaryConn_.close();\n        // If we were already using this connection for something, than we need to fully close\n        if (\n          this.tx_ === this.secondaryConn_ ||\n          this.rx_ === this.secondaryConn_\n        ) {\n          this.close();\n        }\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on secondary.');\n        this.secondaryResponsesRequired_--;\n        this.upgradeIfSecondaryHealthy_();\n      }\n    }\n  }\n\n  private onSecondaryMessageReceived_(parsedData: Indexable) {\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onSecondaryControl_(data as Indexable);\n    } else if (layer === 'd') {\n      // got a data message, but we're still second connection. Need to buffer it up\n      this.pendingDataMessages.push(data);\n    } else {\n      throw new Error('Unknown protocol layer: ' + layer);\n    }\n  }\n\n  private upgradeIfSecondaryHealthy_() {\n    if (this.secondaryResponsesRequired_ <= 0) {\n      this.log_('Secondary connection is healthy.');\n      this.isHealthy_ = true;\n      this.secondaryConn_.markConnectionHealthy();\n      this.proceedWithUpgrade_();\n    } else {\n      // Send a ping to make sure the connection is healthy.\n      this.log_('sending ping on secondary.');\n      this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private proceedWithUpgrade_() {\n    // tell this connection to consider itself open\n    this.secondaryConn_.start();\n    // send ack\n    this.log_('sending client ack on secondary');\n    this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\n\n    // send end packet on primary transport, switch to sending on this one\n    // can receive on this one, buffer responses until end received on primary transport\n    this.log_('Ending transmission on primary');\n    this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\n    this.tx_ = this.secondaryConn_;\n\n    this.tryCleanupConnection();\n  }\n\n  private onPrimaryMessageReceived_(parsedData: { [k: string]: unknown }) {\n    // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onControl_(data as { [k: string]: unknown });\n    } else if (layer === 'd') {\n      this.onDataMessage_(data);\n    }\n  }\n\n  private onDataMessage_(message: unknown) {\n    this.onPrimaryResponse_();\n\n    // We don't do anything with data messages, just kick them up a level\n    this.onMessage_(message);\n  }\n\n  private onPrimaryResponse_() {\n    if (!this.isHealthy_) {\n      this.primaryResponsesRequired_--;\n      if (this.primaryResponsesRequired_ <= 0) {\n        this.log_('Primary connection is healthy.');\n        this.isHealthy_ = true;\n        this.conn_.markConnectionHealthy();\n      }\n    }\n  }\n\n  private onControl_(controlData: { [k: string]: unknown }) {\n    const cmd: string = requireKey(MESSAGE_TYPE, controlData) as string;\n    if (MESSAGE_DATA in controlData) {\n      const payload = controlData[MESSAGE_DATA];\n      if (cmd === SERVER_HELLO) {\n        const handshakePayload = {\n          ...(payload as {\n            ts: number;\n            v: string;\n            h: string;\n            s: string;\n          })\n        };\n        if (this.repoInfo_.isUsingEmulator) {\n          // Upon connecting, the emulator will pass the hostname that it's aware of, but we prefer the user's set hostname via `connectDatabaseEmulator` over what the emulator passes.\n          handshakePayload.h = this.repoInfo_.host;\n        }\n        this.onHandshake_(handshakePayload);\n      } else if (cmd === END_TRANSMISSION) {\n        this.log_('recvd end transmission on primary');\n        this.rx_ = this.secondaryConn_;\n        for (let i = 0; i < this.pendingDataMessages.length; ++i) {\n          this.onDataMessage_(this.pendingDataMessages[i]);\n        }\n        this.pendingDataMessages = [];\n        this.tryCleanupConnection();\n      } else if (cmd === CONTROL_SHUTDOWN) {\n        // This was previously the 'onKill' callback passed to the lower-level connection\n        // payload in this case is the reason for the shutdown. Generally a human-readable error\n        this.onConnectionShutdown_(payload as string);\n      } else if (cmd === CONTROL_RESET) {\n        // payload in this case is the host we should contact\n        this.onReset_(payload as string);\n      } else if (cmd === CONTROL_ERROR) {\n        error('Server Error: ' + payload);\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on primary.');\n        this.onPrimaryResponse_();\n        this.sendPingOnPrimaryIfNecessary_();\n      } else {\n        error('Unknown control packet command: ' + cmd);\n      }\n    }\n  }\n\n  /**\n   * @param handshake - The handshake data returned from the server\n   */\n  private onHandshake_(handshake: {\n    ts: number;\n    v: string;\n    h: string;\n    s: string;\n  }): void {\n    const timestamp = handshake.ts;\n    const version = handshake.v;\n    const host = handshake.h;\n    this.sessionId = handshake.s;\n    this.repoInfo_.host = host;\n    // if we've already closed the connection, then don't bother trying to progress further\n    if (this.state_ === RealtimeState.CONNECTING) {\n      this.conn_.start();\n      this.onConnectionEstablished_(this.conn_, timestamp);\n      if (PROTOCOL_VERSION !== version) {\n        warn('Protocol version mismatch detected');\n      }\n      // TODO: do we want to upgrade? when? maybe a delay?\n      this.tryStartUpgrade_();\n    }\n  }\n\n  private tryStartUpgrade_() {\n    const conn = this.transportManager_.upgradeTransport();\n    if (conn) {\n      this.startUpgrade_(conn);\n    }\n  }\n\n  private startUpgrade_(conn: TransportConstructor) {\n    this.secondaryConn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.appCheckToken_,\n      this.authToken_,\n      this.sessionId\n    );\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.secondaryResponsesRequired_ =\n      conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessage = this.connReceiver_(this.secondaryConn_);\n    const onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n    this.secondaryConn_.open(onMessage, onDisconnect);\n\n    // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n    setTimeoutNonBlocking(() => {\n      if (this.secondaryConn_) {\n        this.log_('Timed out trying to upgrade.');\n        this.secondaryConn_.close();\n      }\n    }, Math.floor(UPGRADE_TIMEOUT));\n  }\n\n  private onReset_(host: string) {\n    this.log_('Reset packet received.  New host: ' + host);\n    this.repoInfo_.host = host;\n    // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n    // We don't currently support resets after the connection has already been established\n    if (this.state_ === RealtimeState.CONNECTED) {\n      this.close();\n    } else {\n      // Close whatever connections we have open and start again.\n      this.closeConnections_();\n      this.start_();\n    }\n  }\n\n  private onConnectionEstablished_(conn: Transport, timestamp: number) {\n    this.log_('Realtime connection established.');\n    this.conn_ = conn;\n    this.state_ = RealtimeState.CONNECTED;\n\n    if (this.onReady_) {\n      this.onReady_(timestamp, this.sessionId);\n      this.onReady_ = null;\n    }\n\n    // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n    // send some pings.\n    if (this.primaryResponsesRequired_ === 0) {\n      this.log_('Primary connection is healthy.');\n      this.isHealthy_ = true;\n    } else {\n      setTimeoutNonBlocking(() => {\n        this.sendPingOnPrimaryIfNecessary_();\n      }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n    }\n  }\n\n  private sendPingOnPrimaryIfNecessary_() {\n    // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n    if (!this.isHealthy_ && this.state_ === RealtimeState.CONNECTED) {\n      this.log_('sending ping on primary.');\n      this.sendData_({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private onSecondaryConnectionLost_() {\n    const conn = this.secondaryConn_;\n    this.secondaryConn_ = null;\n    if (this.tx_ === conn || this.rx_ === conn) {\n      // we are relying on this connection already in some capacity. Therefore, a failure is real\n      this.close();\n    }\n  }\n\n  /**\n   * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\n   * we should flush the host cache\n   */\n  private onConnectionLost_(everConnected: boolean) {\n    this.conn_ = null;\n\n    // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n    // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n    if (!everConnected && this.state_ === RealtimeState.CONNECTING) {\n      this.log_('Realtime connection failed.');\n      // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n      if (this.repoInfo_.isCacheableHost()) {\n        PersistentStorage.remove('host:' + this.repoInfo_.host);\n        // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n        this.repoInfo_.internalHost = this.repoInfo_.host;\n      }\n    } else if (this.state_ === RealtimeState.CONNECTED) {\n      this.log_('Realtime connection lost.');\n    }\n\n    this.close();\n  }\n\n  private onConnectionShutdown_(reason: string) {\n    this.log_('Connection shutdown command received. Shutting down...');\n\n    if (this.onKill_) {\n      this.onKill_(reason);\n      this.onKill_ = null;\n    }\n\n    // We intentionally don't want to fire onDisconnect (kill is a different case),\n    // so clear the callback.\n    this.onDisconnect_ = null;\n\n    this.close();\n  }\n\n  private sendData_(data: object) {\n    if (this.state_ !== RealtimeState.CONNECTED) {\n      throw 'Connection is not connected';\n    } else {\n      this.tx_.send(data);\n    }\n  }\n\n  /**\n   * Cleans up this connection, calling the appropriate callbacks\n   */\n  close() {\n    if (this.state_ !== RealtimeState.DISCONNECTED) {\n      this.log_('Closing realtime connection.');\n      this.state_ = RealtimeState.DISCONNECTED;\n\n      this.closeConnections_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_();\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  private closeConnections_() {\n    this.log_('Shutting down all connections');\n    if (this.conn_) {\n      this.conn_.close();\n      this.conn_ = null;\n    }\n\n    if (this.secondaryConn_) {\n      this.secondaryConn_.close();\n      this.secondaryConn_ = null;\n    }\n\n    if (this.healthyTimeout_) {\n      clearTimeout(this.healthyTimeout_);\n      this.healthyTimeout_ = null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { QueryContext } from './view/EventRegistration';\n\n/**\n * Interface defining the set of actions that can be performed against the Firebase server\n * (basically corresponds to our wire protocol).\n *\n * @interface\n */\nexport abstract class ServerActions {\n  abstract listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ): void;\n\n  /**\n   * Remove a listen.\n   */\n  abstract unlisten(query: QueryContext, tag: number | null): void;\n\n  /**\n   * Get the server value satisfying this query.\n   */\n  abstract get(query: QueryContext): Promise<string>;\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {}\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {}\n\n  /**\n   * Refreshes the auth token for the current connection.\n   * @param token - The authentication token\n   */\n  refreshAuthToken(token: string) {}\n\n  /**\n   * Refreshes the app check token for the current connection.\n   * @param token The app check token\n   */\n  refreshAppCheckToken(token: string) {}\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  reportStats(stats: { [k: string]: unknown }) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\n/**\n * Base class to be used if you want to emit events. Call the constructor with\n * the set of allowed event names.\n */\nexport abstract class EventEmitter {\n  private listeners_: {\n    [eventType: string]: Array<{\n      callback(...args: unknown[]): void;\n      context: unknown;\n    }>;\n  } = {};\n\n  constructor(private allowedEvents_: string[]) {\n    assert(\n      Array.isArray(allowedEvents_) && allowedEvents_.length > 0,\n      'Requires a non-empty array'\n    );\n  }\n\n  /**\n   * To be overridden by derived classes in order to fire an initial event when\n   * somebody subscribes for data.\n   *\n   * @returns {Array.<*>} Array of parameters to trigger initial event with.\n   */\n  abstract getInitialEvent(eventType: string): unknown[];\n\n  /**\n   * To be called by derived classes to trigger events.\n   */\n  protected trigger(eventType: string, ...varArgs: unknown[]) {\n    if (Array.isArray(this.listeners_[eventType])) {\n      // Clone the list, since callbacks could add/remove listeners.\n      const listeners = [...this.listeners_[eventType]];\n\n      for (let i = 0; i < listeners.length; i++) {\n        listeners[i].callback.apply(listeners[i].context, varArgs);\n      }\n    }\n  }\n\n  on(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    this.listeners_[eventType] = this.listeners_[eventType] || [];\n    this.listeners_[eventType].push({ callback, context });\n\n    const eventData = this.getInitialEvent(eventType);\n    if (eventData) {\n      callback.apply(context, eventData);\n    }\n  }\n\n  off(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    const listeners = this.listeners_[eventType] || [];\n    for (let i = 0; i < listeners.length; i++) {\n      if (\n        listeners[i].callback === callback &&\n        (!context || context === listeners[i].context)\n      ) {\n        listeners.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  private validateEventType_(eventType: string) {\n    assert(\n      this.allowedEvents_.find(et => {\n        return et === eventType;\n      }),\n      'Unknown event: ' + eventType\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isMobileCordova } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\n/**\n * Monitors online state (as reported by window.online/offline events).\n *\n * The expectation is that this could have many false positives (thinks we are online\n * when we're not), but no false negatives.  So we can safely use it to determine when\n * we definitely cannot reach the internet.\n */\nexport class OnlineMonitor extends EventEmitter {\n  private online_ = true;\n\n  static getInstance() {\n    return new OnlineMonitor();\n  }\n\n  constructor() {\n    super(['online']);\n\n    // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n    // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n    // It would seem that the 'online' event does not always fire consistently. So we disable it\n    // for Cordova.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window.addEventListener !== 'undefined' &&\n      !isMobileCordova()\n    ) {\n      window.addEventListener(\n        'online',\n        () => {\n          if (!this.online_) {\n            this.online_ = true;\n            this.trigger('online', true);\n          }\n        },\n        false\n      );\n\n      window.addEventListener(\n        'offline',\n        () => {\n          if (this.online_) {\n            this.online_ = false;\n            this.trigger('online', false);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'online', 'Unknown event type: ' + eventType);\n    return [this.online_];\n  }\n\n  currentlyOnline(): boolean {\n    return this.online_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringLength } from '@firebase/util';\n\nimport { nameCompare } from './util';\n\n/** Maximum key depth. */\nconst MAX_PATH_DEPTH = 32;\n\n/** Maximum number of (UTF8) bytes in a Firebase path. */\nconst MAX_PATH_LENGTH_BYTES = 768;\n\n/**\n * An immutable object representing a parsed path.  It's immutable so that you\n * can pass them around to other functions without worrying about them changing\n * it.\n */\n\nexport class Path {\n  pieces_: string[];\n  pieceNum_: number;\n\n  /**\n   * @param pathOrString - Path string to parse, or another path, or the raw\n   * tokens array\n   */\n  constructor(pathOrString: string | string[], pieceNum?: number) {\n    if (pieceNum === void 0) {\n      this.pieces_ = (pathOrString as string).split('/');\n\n      // Remove empty pieces.\n      let copyTo = 0;\n      for (let i = 0; i < this.pieces_.length; i++) {\n        if (this.pieces_[i].length > 0) {\n          this.pieces_[copyTo] = this.pieces_[i];\n          copyTo++;\n        }\n      }\n      this.pieces_.length = copyTo;\n\n      this.pieceNum_ = 0;\n    } else {\n      this.pieces_ = pathOrString as string[];\n      this.pieceNum_ = pieceNum;\n    }\n  }\n\n  toString(): string {\n    let pathString = '';\n    for (let i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + this.pieces_[i];\n      }\n    }\n\n    return pathString || '/';\n  }\n}\n\nexport function newEmptyPath(): Path {\n  return new Path('');\n}\n\nexport function pathGetFront(path: Path): string | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  return path.pieces_[path.pieceNum_];\n}\n\n/**\n * @returns The number of segments in this path\n */\nexport function pathGetLength(path: Path): number {\n  return path.pieces_.length - path.pieceNum_;\n}\n\nexport function pathPopFront(path: Path): Path {\n  let pieceNum = path.pieceNum_;\n  if (pieceNum < path.pieces_.length) {\n    pieceNum++;\n  }\n  return new Path(path.pieces_, pieceNum);\n}\n\nexport function pathGetBack(path: Path): string | null {\n  if (path.pieceNum_ < path.pieces_.length) {\n    return path.pieces_[path.pieces_.length - 1];\n  }\n\n  return null;\n}\n\nexport function pathToUrlEncodedString(path: Path): string {\n  let pathString = '';\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    if (path.pieces_[i] !== '') {\n      pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\n    }\n  }\n\n  return pathString || '/';\n}\n\n/**\n * Shallow copy of the parts of the path.\n *\n */\nexport function pathSlice(path: Path, begin: number = 0): string[] {\n  return path.pieces_.slice(path.pieceNum_ + begin);\n}\n\nexport function pathParent(path: Path): Path | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  return new Path(pieces, 0);\n}\n\nexport function pathChild(path: Path, childPathObj: string | Path): Path {\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  if (childPathObj instanceof Path) {\n    for (let i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n      pieces.push(childPathObj.pieces_[i]);\n    }\n  } else {\n    const childPieces = childPathObj.split('/');\n    for (let i = 0; i < childPieces.length; i++) {\n      if (childPieces[i].length > 0) {\n        pieces.push(childPieces[i]);\n      }\n    }\n  }\n\n  return new Path(pieces, 0);\n}\n\n/**\n * @returns True if there are no segments in this path\n */\nexport function pathIsEmpty(path: Path): boolean {\n  return path.pieceNum_ >= path.pieces_.length;\n}\n\n/**\n * @returns The path from outerPath to innerPath\n */\nexport function newRelativePath(outerPath: Path, innerPath: Path): Path {\n  const outer = pathGetFront(outerPath),\n    inner = pathGetFront(innerPath);\n  if (outer === null) {\n    return innerPath;\n  } else if (outer === inner) {\n    return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\n  } else {\n    throw new Error(\n      'INTERNAL ERROR: innerPath (' +\n        innerPath +\n        ') is not within ' +\n        'outerPath (' +\n        outerPath +\n        ')'\n    );\n  }\n}\n\n/**\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\n */\nexport function pathCompare(left: Path, right: Path): number {\n  const leftKeys = pathSlice(left, 0);\n  const rightKeys = pathSlice(right, 0);\n  for (let i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n    const cmp = nameCompare(leftKeys[i], rightKeys[i]);\n    if (cmp !== 0) {\n      return cmp;\n    }\n  }\n  if (leftKeys.length === rightKeys.length) {\n    return 0;\n  }\n  return leftKeys.length < rightKeys.length ? -1 : 1;\n}\n\n/**\n * @returns true if paths are the same.\n */\nexport function pathEquals(path: Path, other: Path): boolean {\n  if (pathGetLength(path) !== pathGetLength(other)) {\n    return false;\n  }\n\n  for (\n    let i = path.pieceNum_, j = other.pieceNum_;\n    i <= path.pieces_.length;\n    i++, j++\n  ) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * @returns True if this path is a parent of (or the same as) other\n */\nexport function pathContains(path: Path, other: Path): boolean {\n  let i = path.pieceNum_;\n  let j = other.pieceNum_;\n  if (pathGetLength(path) > pathGetLength(other)) {\n    return false;\n  }\n  while (i < path.pieces_.length) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n    ++i;\n    ++j;\n  }\n  return true;\n}\n\n/**\n * Dynamic (mutable) path used to count path lengths.\n *\n * This class is used to efficiently check paths for valid\n * length (in UTF8 bytes) and depth (used in path validation).\n *\n * Throws Error exception if path is ever invalid.\n *\n * The definition of a path always begins with '/'.\n */\nexport class ValidationPath {\n  parts_: string[];\n  /** Initialize to number of '/' chars needed in path. */\n  byteLength_: number;\n\n  /**\n   * @param path - Initial Path.\n   * @param errorPrefix_ - Prefix for any error messages.\n   */\n  constructor(path: Path, public errorPrefix_: string) {\n    this.parts_ = pathSlice(path, 0);\n    /** Initialize to number of '/' chars needed in path. */\n    this.byteLength_ = Math.max(1, this.parts_.length);\n\n    for (let i = 0; i < this.parts_.length; i++) {\n      this.byteLength_ += stringLength(this.parts_[i]);\n    }\n    validationPathCheckValid(this);\n  }\n}\n\nexport function validationPathPush(\n  validationPath: ValidationPath,\n  child: string\n): void {\n  // Count the needed '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ += 1;\n  }\n  validationPath.parts_.push(child);\n  validationPath.byteLength_ += stringLength(child);\n  validationPathCheckValid(validationPath);\n}\n\nexport function validationPathPop(validationPath: ValidationPath): void {\n  const last = validationPath.parts_.pop();\n  validationPath.byteLength_ -= stringLength(last);\n  // Un-count the previous '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ -= 1;\n  }\n}\n\nfunction validationPathCheckValid(validationPath: ValidationPath): void {\n  if (validationPath.byteLength_ > MAX_PATH_LENGTH_BYTES) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'has a key path longer than ' +\n        MAX_PATH_LENGTH_BYTES +\n        ' bytes (' +\n        validationPath.byteLength_ +\n        ').'\n    );\n  }\n  if (validationPath.parts_.length > MAX_PATH_DEPTH) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'path specified exceeds the maximum depth that can be written (' +\n        MAX_PATH_DEPTH +\n        ') or object contains a cycle ' +\n        validationPathToErrorString(validationPath)\n    );\n  }\n}\n\n/**\n * String for use in error messages - uses '.' notation for path.\n */\nexport function validationPathToErrorString(\n  validationPath: ValidationPath\n): string {\n  if (validationPath.parts_.length === 0) {\n    return '';\n  }\n  return \"in property '\" + validationPath.parts_.join('.') + \"'\";\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\ndeclare const document: Document;\n\nexport class VisibilityMonitor extends EventEmitter {\n  private visible_: boolean;\n\n  static getInstance() {\n    return new VisibilityMonitor();\n  }\n\n  constructor() {\n    super(['visible']);\n    let hidden: string;\n    let visibilityChange: string;\n    if (\n      typeof document !== 'undefined' &&\n      typeof document.addEventListener !== 'undefined'\n    ) {\n      if (typeof document['hidden'] !== 'undefined') {\n        // Opera 12.10 and Firefox 18 and later support\n        visibilityChange = 'visibilitychange';\n        hidden = 'hidden';\n      } else if (typeof document['mozHidden'] !== 'undefined') {\n        visibilityChange = 'mozvisibilitychange';\n        hidden = 'mozHidden';\n      } else if (typeof document['msHidden'] !== 'undefined') {\n        visibilityChange = 'msvisibilitychange';\n        hidden = 'msHidden';\n      } else if (typeof document['webkitHidden'] !== 'undefined') {\n        visibilityChange = 'webkitvisibilitychange';\n        hidden = 'webkitHidden';\n      }\n    }\n\n    // Initially, we always assume we are visible. This ensures that in browsers\n    // without page visibility support or in cases where we are never visible\n    // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n    // reconnects\n    this.visible_ = true;\n\n    if (visibilityChange) {\n      document.addEventListener(\n        visibilityChange,\n        () => {\n          const visible = !document[hidden];\n          if (visible !== this.visible_) {\n            this.visible_ = visible;\n            this.trigger('visible', visible);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n    return [this.visible_];\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  Deferred,\n  isEmpty,\n  isMobileCordova,\n  isNodeSdk,\n  isReactNative,\n  isValidFormat,\n  safeGet,\n  stringify,\n  isAdmin\n} from '@firebase/util';\n\nimport { Connection } from '../realtime/Connection';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { OnlineMonitor } from './util/OnlineMonitor';\nimport { Path } from './util/Path';\nimport { error, log, logWrapper, warn, ObjectToUniqueKey } from './util/util';\nimport { VisibilityMonitor } from './util/VisibilityMonitor';\nimport { SDK_VERSION } from './version';\nimport { QueryContext } from './view/EventRegistration';\n\nconst RECONNECT_MIN_DELAY = 1000;\nconst RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\nconst RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\nconst RECONNECT_DELAY_MULTIPLIER = 1.3;\nconst RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\nconst SERVER_KILL_INTERRUPT_REASON = 'server_kill';\n\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\nconst INVALID_TOKEN_THRESHOLD = 3;\n\ninterface ListenSpec {\n  onComplete(s: string, p?: unknown): void;\n\n  hashFn(): string;\n\n  query: QueryContext;\n  tag: number | null;\n}\n\ninterface OnDisconnectRequest {\n  pathString: string;\n  action: string;\n  data: unknown;\n  onComplete?: (a: string, b: string) => void;\n}\n\ninterface OutstandingPut {\n  action: string;\n  request: object;\n  queued?: boolean;\n  onComplete: (a: string, b?: string) => void;\n}\n\ninterface OutstandingGet {\n  request: object;\n  onComplete: (response: { [k: string]: unknown }) => void;\n}\n\n/**\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\n *\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\n * in quotes to make sure the closure compiler does not minify them.\n */\nexport class PersistentConnection extends ServerActions {\n  // Used for diagnostic logging.\n  id = PersistentConnection.nextPersistentConnectionId_++;\n  private log_ = logWrapper('p:' + this.id + ':');\n\n  private interruptReasons_: { [reason: string]: boolean } = {};\n  private readonly listens: Map<\n    /* path */ string,\n    Map</* queryId */ string, ListenSpec>\n  > = new Map();\n  private outstandingPuts_: OutstandingPut[] = [];\n  private outstandingGets_: OutstandingGet[] = [];\n  private outstandingPutCount_ = 0;\n  private outstandingGetCount_ = 0;\n  private onDisconnectRequestQueue_: OnDisconnectRequest[] = [];\n  private connected_ = false;\n  private reconnectDelay_ = RECONNECT_MIN_DELAY;\n  private maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n  private securityDebugCallback_: ((a: object) => void) | null = null;\n  lastSessionId: string | null = null;\n\n  private establishConnectionTimer_: number | null = null;\n\n  private visible_: boolean = false;\n\n  // Before we get connected, we keep a queue of pending messages to send.\n  private requestCBHash_: { [k: number]: (a: unknown) => void } = {};\n  private requestNumber_ = 0;\n\n  private realtime_: {\n    sendRequest(a: object): void;\n    close(): void;\n  } | null = null;\n\n  private authToken_: string | null = null;\n  private appCheckToken_: string | null = null;\n  private forceTokenRefresh_ = false;\n  private invalidAuthTokenCount_ = 0;\n  private invalidAppCheckTokenCount_ = 0;\n\n  private firstConnection_ = true;\n  private lastConnectionAttemptTime_: number | null = null;\n  private lastConnectionEstablishedTime_: number | null = null;\n\n  private static nextPersistentConnectionId_ = 0;\n\n  /**\n   * Counter for number of connections created. Mainly used for tagging in the logs\n   */\n  private static nextConnectionId_ = 0;\n\n  /**\n   * @param repoInfo_ - Data about the namespace we are connecting to\n   * @param applicationId_ - The Firebase App ID for this project\n   * @param onDataUpdate_ - A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private applicationId_: string,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private onConnectStatus_: (a: boolean) => void,\n    private onServerInfoUpdate_: (a: unknown) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private appCheckTokenProvider_: AppCheckTokenProvider,\n    private authOverride_?: object | null\n  ) {\n    super();\n\n    if (authOverride_ && !isNodeSdk()) {\n      throw new Error(\n        'Auth override specified in options, but not supported on non Node.js platforms'\n      );\n    }\n\n    VisibilityMonitor.getInstance().on('visible', this.onVisible_, this);\n\n    if (repoInfo_.host.indexOf('fblocal') === -1) {\n      OnlineMonitor.getInstance().on('online', this.onOnline_, this);\n    }\n  }\n\n  protected sendRequest(\n    action: string,\n    body: unknown,\n    onResponse?: (a: unknown) => void\n  ) {\n    const curReqNum = ++this.requestNumber_;\n\n    const msg = { r: curReqNum, a: action, b: body };\n    this.log_(stringify(msg));\n    assert(\n      this.connected_,\n      \"sendRequest call when we're not connected not allowed.\"\n    );\n    this.realtime_.sendRequest(msg);\n    if (onResponse) {\n      this.requestCBHash_[curReqNum] = onResponse;\n    }\n  }\n\n  get(query: QueryContext): Promise<string> {\n    this.initConnection_();\n\n    const deferred = new Deferred<string>();\n    const request = {\n      p: query._path.toString(),\n      q: query._queryObject\n    };\n    const outstandingGet = {\n      action: 'g',\n      request,\n      onComplete: (message: { [k: string]: unknown }) => {\n        const payload = message['d'] as string;\n        if (message['s'] === 'ok') {\n          deferred.resolve(payload);\n        } else {\n          deferred.reject(payload);\n        }\n      }\n    };\n    this.outstandingGets_.push(outstandingGet);\n    this.outstandingGetCount_++;\n    const index = this.outstandingGets_.length - 1;\n\n    if (this.connected_) {\n      this.sendGet_(index);\n    }\n\n    return deferred.promise;\n  }\n\n  listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    this.initConnection_();\n\n    const queryId = query._queryIdentifier;\n    const pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + queryId);\n    if (!this.listens.has(pathString)) {\n      this.listens.set(pathString, new Map());\n    }\n    assert(\n      query._queryParams.isDefault() || !query._queryParams.loadsAllData(),\n      'listen() called for non-default but complete query'\n    );\n    assert(\n      !this.listens.get(pathString)!.has(queryId),\n      `listen() called twice for same path/queryId.`\n    );\n    const listenSpec: ListenSpec = {\n      onComplete,\n      hashFn: currentHashFn,\n      query,\n      tag\n    };\n    this.listens.get(pathString)!.set(queryId, listenSpec);\n\n    if (this.connected_) {\n      this.sendListen_(listenSpec);\n    }\n  }\n\n  private sendGet_(index: number) {\n    const get = this.outstandingGets_[index];\n    this.sendRequest('g', get.request, (message: { [k: string]: unknown }) => {\n      delete this.outstandingGets_[index];\n      this.outstandingGetCount_--;\n      if (this.outstandingGetCount_ === 0) {\n        this.outstandingGets_ = [];\n      }\n      if (get.onComplete) {\n        get.onComplete(message);\n      }\n    });\n  }\n\n  private sendListen_(listenSpec: ListenSpec) {\n    const query = listenSpec.query;\n    const pathString = query._path.toString();\n    const queryId = query._queryIdentifier;\n    this.log_('Listen on ' + pathString + ' for ' + queryId);\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n\n    const action = 'q';\n\n    // Only bother to send query if it's non-default.\n    if (listenSpec.tag) {\n      req['q'] = query._queryObject;\n      req['t'] = listenSpec.tag;\n    }\n\n    req[/*hash*/ 'h'] = listenSpec.hashFn();\n\n    this.sendRequest(action, req, (message: { [k: string]: unknown }) => {\n      const payload: unknown = message[/*data*/ 'd'];\n      const status = message[/*status*/ 's'] as string;\n\n      // print warnings in any case...\n      PersistentConnection.warnOnListenWarnings_(payload, query);\n\n      const currentListenSpec =\n        this.listens.get(pathString) &&\n        this.listens.get(pathString)!.get(queryId);\n      // only trigger actions if the listen hasn't been removed and readded\n      if (currentListenSpec === listenSpec) {\n        this.log_('listen response', message);\n\n        if (status !== 'ok') {\n          this.removeListen_(pathString, queryId);\n        }\n\n        if (listenSpec.onComplete) {\n          listenSpec.onComplete(status, payload);\n        }\n      }\n    });\n  }\n\n  private static warnOnListenWarnings_(payload: unknown, query: QueryContext) {\n    if (payload && typeof payload === 'object' && contains(payload, 'w')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const warnings = safeGet(payload as any, 'w');\n      if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n        const indexSpec =\n          '\".indexOn\": \"' + query._queryParams.getIndex().toString() + '\"';\n        const indexPath = query._path.toString();\n        warn(\n          `Using an unspecified index. Your data will be downloaded and ` +\n            `filtered on the client. Consider adding ${indexSpec} at ` +\n            `${indexPath} to your security rules for better performance.`\n        );\n      }\n    }\n  }\n\n  refreshAuthToken(token: string) {\n    this.authToken_ = token;\n    this.log_('Auth token refreshed');\n    if (this.authToken_) {\n      this.tryAuth();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n      //the credential so we dont become authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unauth', {}, () => {});\n      }\n    }\n\n    this.reduceReconnectDelayIfAdminCredential_(token);\n  }\n\n  private reduceReconnectDelayIfAdminCredential_(credential: string) {\n    // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n    // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n    const isFirebaseSecret = credential && credential.length === 40;\n    if (isFirebaseSecret || isAdmin(credential)) {\n      this.log_(\n        'Admin auth credential detected.  Reducing max reconnect time.'\n      );\n      this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n    }\n  }\n\n  refreshAppCheckToken(token: string | null) {\n    this.appCheckToken_ = token;\n    this.log_('App check token refreshed');\n    if (this.appCheckToken_) {\n      this.tryAppCheck();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us.\n      //If we're not connected, simply delete the credential so we dont become\n      // authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unappeck', {}, () => {});\n      }\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\n   * a auth revoked (the connection is closed).\n   */\n  tryAuth() {\n    if (this.connected_ && this.authToken_) {\n      const token = this.authToken_;\n      const authMethod = isValidFormat(token) ? 'auth' : 'gauth';\n      const requestData: { [k: string]: unknown } = { cred: token };\n      if (this.authOverride_ === null) {\n        requestData['noauth'] = true;\n      } else if (typeof this.authOverride_ === 'object') {\n        requestData['authvar'] = this.authOverride_;\n      }\n      this.sendRequest(\n        authMethod,\n        requestData,\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n\n          if (this.authToken_ === token) {\n            if (status === 'ok') {\n              this.invalidAuthTokenCount_ = 0;\n            } else {\n              // Triggers reconnect and force refresh for auth token\n              this.onAuthRevoked_(status, data);\n            }\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given token. If the authentication\n   * attempt fails, it's triggered like the token was revoked (the connection is\n   * closed).\n   */\n  tryAppCheck() {\n    if (this.connected_ && this.appCheckToken_) {\n      this.sendRequest(\n        'appcheck',\n        { 'token': this.appCheckToken_ },\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n          if (status === 'ok') {\n            this.invalidAppCheckTokenCount_ = 0;\n          } else {\n            this.onAppCheckRevoked_(status, data);\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  unlisten(query: QueryContext, tag: number | null) {\n    const pathString = query._path.toString();\n    const queryId = query._queryIdentifier;\n\n    this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n\n    assert(\n      query._queryParams.isDefault() || !query._queryParams.loadsAllData(),\n      'unlisten() called for non-default but complete query'\n    );\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && this.connected_) {\n      this.sendUnlisten_(pathString, queryId, query._queryObject, tag);\n    }\n  }\n\n  private sendUnlisten_(\n    pathString: string,\n    queryId: string,\n    queryObj: object,\n    tag: number | null\n  ) {\n    this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n    const action = 'n';\n    // Only bother sending queryId if it's non-default.\n    if (tag) {\n      req['q'] = queryObj;\n      req['t'] = tag;\n    }\n\n    this.sendRequest(action, req);\n  }\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('o', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'o',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('om', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'om',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('oc', pathString, null, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'oc',\n        data: null,\n        onComplete\n      });\n    }\n  }\n\n  private sendOnDisconnect_(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string) => void\n  ) {\n    const request = { /*path*/ p: pathString, /*data*/ d: data };\n    this.log_('onDisconnect ' + action, request);\n    this.sendRequest(action, request, (response: { [k: string]: unknown }) => {\n      if (onComplete) {\n        setTimeout(() => {\n          onComplete(\n            response[/*status*/ 's'] as string,\n            response[/* data */ 'd'] as string\n          );\n        }, Math.floor(0));\n      }\n    });\n  }\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {\n    this.putInternal('p', pathString, data, onComplete, hash);\n  }\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.putInternal('m', pathString, data, onComplete, hash);\n  }\n\n  putInternal(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.initConnection_();\n\n    const request: { [k: string]: unknown } = {\n      /*path*/ p: pathString,\n      /*data*/ d: data\n    };\n\n    if (hash !== undefined) {\n      request[/*hash*/ 'h'] = hash;\n    }\n\n    // TODO: Only keep track of the most recent put for a given path?\n    this.outstandingPuts_.push({\n      action,\n      request,\n      onComplete\n    });\n\n    this.outstandingPutCount_++;\n    const index = this.outstandingPuts_.length - 1;\n\n    if (this.connected_) {\n      this.sendPut_(index);\n    } else {\n      this.log_('Buffering put: ' + pathString);\n    }\n  }\n\n  private sendPut_(index: number) {\n    const action = this.outstandingPuts_[index].action;\n    const request = this.outstandingPuts_[index].request;\n    const onComplete = this.outstandingPuts_[index].onComplete;\n    this.outstandingPuts_[index].queued = this.connected_;\n\n    this.sendRequest(action, request, (message: { [k: string]: unknown }) => {\n      this.log_(action + ' response', message);\n\n      delete this.outstandingPuts_[index];\n      this.outstandingPutCount_--;\n\n      // Clean up array occasionally.\n      if (this.outstandingPutCount_ === 0) {\n        this.outstandingPuts_ = [];\n      }\n\n      if (onComplete) {\n        onComplete(\n          message[/*status*/ 's'] as string,\n          message[/* data */ 'd'] as string\n        );\n      }\n    });\n  }\n\n  reportStats(stats: { [k: string]: unknown }) {\n    // If we're not connected, we just drop the stats.\n    if (this.connected_) {\n      const request = { /*counters*/ c: stats };\n      this.log_('reportStats', request);\n\n      this.sendRequest(/*stats*/ 's', request, result => {\n        const status = result[/*status*/ 's'];\n        if (status !== 'ok') {\n          const errorReason = result[/* data */ 'd'];\n          this.log_('reportStats', 'Error sending stats: ' + errorReason);\n        }\n      });\n    }\n  }\n\n  private onDataMessage_(message: { [k: string]: unknown }) {\n    if ('r' in message) {\n      // this is a response\n      this.log_('from server: ' + stringify(message));\n      const reqNum = message['r'] as string;\n      const onResponse = this.requestCBHash_[reqNum];\n      if (onResponse) {\n        delete this.requestCBHash_[reqNum];\n        onResponse(message[/*body*/ 'b']);\n      }\n    } else if ('error' in message) {\n      throw 'A server-side error has occurred: ' + message['error'];\n    } else if ('a' in message) {\n      // a and b are action and body, respectively\n      this.onDataPush_(message['a'] as string, message['b'] as {});\n    }\n  }\n\n  private onDataPush_(action: string, body: { [k: string]: unknown }) {\n    this.log_('handleServerMessage', action, body);\n    if (action === 'd') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge*/ false,\n        body['t'] as number\n      );\n    } else if (action === 'm') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge=*/ true,\n        body['t'] as number\n      );\n    } else if (action === 'c') {\n      this.onListenRevoked_(\n        body[/*path*/ 'p'] as string,\n        body[/*query*/ 'q'] as unknown[]\n      );\n    } else if (action === 'ac') {\n      this.onAuthRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'apc') {\n      this.onAppCheckRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'sd') {\n      this.onSecurityDebugPacket_(body);\n    } else {\n      error(\n        'Unrecognized action received from server: ' +\n          stringify(action) +\n          '\\nAre you using the latest client?'\n      );\n    }\n  }\n\n  private onReady_(timestamp: number, sessionId: string) {\n    this.log_('connection ready');\n    this.connected_ = true;\n    this.lastConnectionEstablishedTime_ = new Date().getTime();\n    this.handleTimestamp_(timestamp);\n    this.lastSessionId = sessionId;\n    if (this.firstConnection_) {\n      this.sendConnectStats_();\n    }\n    this.restoreState_();\n    this.firstConnection_ = false;\n    this.onConnectStatus_(true);\n  }\n\n  private scheduleConnect_(timeout: number) {\n    assert(\n      !this.realtime_,\n      \"Scheduling a connect when we're already connected/ing?\"\n    );\n\n    if (this.establishConnectionTimer_) {\n      clearTimeout(this.establishConnectionTimer_);\n    }\n\n    // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n    // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n\n    this.establishConnectionTimer_ = setTimeout(() => {\n      this.establishConnectionTimer_ = null;\n      this.establishConnection_();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(timeout)) as any;\n  }\n\n  private initConnection_() {\n    if (!this.realtime_ && this.firstConnection_) {\n      this.scheduleConnect_(0);\n    }\n  }\n\n  private onVisible_(visible: boolean) {\n    // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n    if (\n      visible &&\n      !this.visible_ &&\n      this.reconnectDelay_ === this.maxReconnectDelay_\n    ) {\n      this.log_('Window became visible.  Reducing delay.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n    this.visible_ = visible;\n  }\n\n  private onOnline_(online: boolean) {\n    if (online) {\n      this.log_('Browser went online.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    } else {\n      this.log_('Browser went offline.  Killing connection.');\n      if (this.realtime_) {\n        this.realtime_.close();\n      }\n    }\n  }\n\n  private onRealtimeDisconnect_() {\n    this.log_('data client disconnected');\n    this.connected_ = false;\n    this.realtime_ = null;\n\n    // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n    this.cancelSentTransactions_();\n\n    // Clear out the pending requests.\n    this.requestCBHash_ = {};\n\n    if (this.shouldReconnect_()) {\n      if (!this.visible_) {\n        this.log_(\"Window isn't visible.  Delaying reconnect.\");\n        this.reconnectDelay_ = this.maxReconnectDelay_;\n        this.lastConnectionAttemptTime_ = new Date().getTime();\n      } else if (this.lastConnectionEstablishedTime_) {\n        // If we've been connected long enough, reset reconnect delay to minimum.\n        const timeSinceLastConnectSucceeded =\n          new Date().getTime() - this.lastConnectionEstablishedTime_;\n        if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\n          this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        }\n        this.lastConnectionEstablishedTime_ = null;\n      }\n\n      const timeSinceLastConnectAttempt =\n        new Date().getTime() - this.lastConnectionAttemptTime_;\n      let reconnectDelay = Math.max(\n        0,\n        this.reconnectDelay_ - timeSinceLastConnectAttempt\n      );\n      reconnectDelay = Math.random() * reconnectDelay;\n\n      this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n      this.scheduleConnect_(reconnectDelay);\n\n      // Adjust reconnect delay for next time.\n      this.reconnectDelay_ = Math.min(\n        this.maxReconnectDelay_,\n        this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER\n      );\n    }\n    this.onConnectStatus_(false);\n  }\n\n  private async establishConnection_() {\n    if (this.shouldReconnect_()) {\n      this.log_('Making a connection attempt');\n      this.lastConnectionAttemptTime_ = new Date().getTime();\n      this.lastConnectionEstablishedTime_ = null;\n      const onDataMessage = this.onDataMessage_.bind(this);\n      const onReady = this.onReady_.bind(this);\n      const onDisconnect = this.onRealtimeDisconnect_.bind(this);\n      const connId = this.id + ':' + PersistentConnection.nextConnectionId_++;\n      const lastSessionId = this.lastSessionId;\n      let canceled = false;\n      let connection: Connection | null = null;\n      const closeFn = function () {\n        if (connection) {\n          connection.close();\n        } else {\n          canceled = true;\n          onDisconnect();\n        }\n      };\n      const sendRequestFn = function (msg: object) {\n        assert(\n          connection,\n          \"sendRequest call when we're not connected not allowed.\"\n        );\n        connection.sendRequest(msg);\n      };\n\n      this.realtime_ = {\n        close: closeFn,\n        sendRequest: sendRequestFn\n      };\n\n      const forceRefresh = this.forceTokenRefresh_;\n      this.forceTokenRefresh_ = false;\n\n      try {\n        // First fetch auth and app check token, and establish connection after\n        // fetching the token was successful\n        const [authToken, appCheckToken] = await Promise.all([\n          this.authTokenProvider_.getToken(forceRefresh),\n          this.appCheckTokenProvider_.getToken(forceRefresh)\n        ]);\n\n        if (!canceled) {\n          log('getToken() completed. Creating connection.');\n          this.authToken_ = authToken && authToken.accessToken;\n          this.appCheckToken_ = appCheckToken && appCheckToken.token;\n          connection = new Connection(\n            connId,\n            this.repoInfo_,\n            this.applicationId_,\n            this.appCheckToken_,\n            this.authToken_,\n            onDataMessage,\n            onReady,\n            onDisconnect,\n            /* onKill= */ reason => {\n              warn(reason + ' (' + this.repoInfo_.toString() + ')');\n              this.interrupt(SERVER_KILL_INTERRUPT_REASON);\n            },\n            lastSessionId\n          );\n        } else {\n          log('getToken() completed but was canceled');\n        }\n      } catch (error) {\n        this.log_('Failed to get token: ' + error);\n        if (!canceled) {\n          if (this.repoInfo_.nodeAdmin) {\n            // This may be a critical error for the Admin Node.js SDK, so log a warning.\n            // But getToken() may also just have temporarily failed, so we still want to\n            // continue retrying.\n            warn(error);\n          }\n          closeFn();\n        }\n      }\n    }\n  }\n\n  interrupt(reason: string) {\n    log('Interrupting connection for reason: ' + reason);\n    this.interruptReasons_[reason] = true;\n    if (this.realtime_) {\n      this.realtime_.close();\n    } else {\n      if (this.establishConnectionTimer_) {\n        clearTimeout(this.establishConnectionTimer_);\n        this.establishConnectionTimer_ = null;\n      }\n      if (this.connected_) {\n        this.onRealtimeDisconnect_();\n      }\n    }\n  }\n\n  resume(reason: string) {\n    log('Resuming connection for reason: ' + reason);\n    delete this.interruptReasons_[reason];\n    if (isEmpty(this.interruptReasons_)) {\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n  }\n\n  private handleTimestamp_(timestamp: number) {\n    const delta = timestamp - new Date().getTime();\n    this.onServerInfoUpdate_({ serverTimeOffset: delta });\n  }\n\n  private cancelSentTransactions_() {\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      const put = this.outstandingPuts_[i];\n      if (put && /*hash*/ 'h' in put.request && put.queued) {\n        if (put.onComplete) {\n          put.onComplete('disconnect');\n        }\n\n        delete this.outstandingPuts_[i];\n        this.outstandingPutCount_--;\n      }\n    }\n\n    // Clean up array occasionally.\n    if (this.outstandingPutCount_ === 0) {\n      this.outstandingPuts_ = [];\n    }\n  }\n\n  private onListenRevoked_(pathString: string, query?: unknown[]) {\n    // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n    let queryId;\n    if (!query) {\n      queryId = 'default';\n    } else {\n      queryId = query.map(q => ObjectToUniqueKey(q)).join('$');\n    }\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && listen.onComplete) {\n      listen.onComplete('permission_denied');\n    }\n  }\n\n  private removeListen_(pathString: string, queryId: string): ListenSpec {\n    const normalizedPathString = new Path(pathString).toString(); // normalize path.\n    let listen;\n    if (this.listens.has(normalizedPathString)) {\n      const map = this.listens.get(normalizedPathString)!;\n      listen = map.get(queryId);\n      map.delete(queryId);\n      if (map.size === 0) {\n        this.listens.delete(normalizedPathString);\n      }\n    } else {\n      // all listens for this path has already been removed\n      listen = undefined;\n    }\n    return listen;\n  }\n\n  private onAuthRevoked_(statusCode: string, explanation: string) {\n    log('Auth token revoked: ' + statusCode + '/' + explanation);\n    this.authToken_ = null;\n    this.forceTokenRefresh_ = true;\n    this.realtime_.close();\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAuthTokenCount_++;\n      if (this.invalidAuthTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        // Set a long reconnect delay because recovery is unlikely\n        this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n\n        // Notify the auth token provider that the token is invalid, which will log\n        // a warning\n        this.authTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onAppCheckRevoked_(statusCode: string, explanation: string) {\n    log('App check token revoked: ' + statusCode + '/' + explanation);\n    this.appCheckToken_ = null;\n    this.forceTokenRefresh_ = true;\n    // Note: We don't close the connection as the developer may not have\n    // enforcement enabled. The backend closes connections with enforcements.\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAppCheckTokenCount_++;\n      if (this.invalidAppCheckTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        this.appCheckTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onSecurityDebugPacket_(body: { [k: string]: unknown }) {\n    if (this.securityDebugCallback_) {\n      this.securityDebugCallback_(body);\n    } else {\n      if ('msg' in body) {\n        console.log(\n          'FIREBASE: ' + (body['msg'] as string).replace('\\n', '\\nFIREBASE: ')\n        );\n      }\n    }\n  }\n\n  private restoreState_() {\n    //Re-authenticate ourselves if we have a credential stored.\n    this.tryAuth();\n    this.tryAppCheck();\n\n    // Puts depend on having received the corresponding data update from the server before they complete, so we must\n    // make sure to send listens before puts.\n    for (const queries of this.listens.values()) {\n      for (const listenSpec of queries.values()) {\n        this.sendListen_(listenSpec);\n      }\n    }\n\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      if (this.outstandingPuts_[i]) {\n        this.sendPut_(i);\n      }\n    }\n\n    while (this.onDisconnectRequestQueue_.length) {\n      const request = this.onDisconnectRequestQueue_.shift();\n      this.sendOnDisconnect_(\n        request.action,\n        request.pathString,\n        request.data,\n        request.onComplete\n      );\n    }\n\n    for (let i = 0; i < this.outstandingGets_.length; i++) {\n      if (this.outstandingGets_[i]) {\n        this.sendGet_(i);\n      }\n    }\n  }\n\n  /**\n   * Sends client stats for first connection\n   */\n  private sendConnectStats_() {\n    const stats: { [k: string]: number } = {};\n\n    let clientName = 'js';\n    if (isNodeSdk()) {\n      if (this.repoInfo_.nodeAdmin) {\n        clientName = 'admin_node';\n      } else {\n        clientName = 'node';\n      }\n    }\n\n    stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\n\n    if (isMobileCordova()) {\n      stats['framework.cordova'] = 1;\n    } else if (isReactNative()) {\n      stats['framework.reactnative'] = 1;\n    }\n    this.reportStats(stats);\n  }\n\n  private shouldReconnect_(): boolean {\n    const online = OnlineMonitor.getInstance().currentlyOnline();\n    return isEmpty(this.interruptReasons_) && online;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\nimport { Index } from './indexes/Index';\n\n/**\n * Node is an interface defining the common functionality for nodes in\n * a DataSnapshot.\n *\n * @interface\n */\nexport interface Node {\n  /**\n   * Whether this node is a leaf node.\n   * @returns Whether this is a leaf node.\n   */\n  isLeafNode(): boolean;\n\n  /**\n   * Gets the priority of the node.\n   * @returns The priority of the node.\n   */\n  getPriority(): Node;\n\n  /**\n   * Returns a duplicate node with the new priority.\n   * @param newPriorityNode - New priority to set for the node.\n   * @returns Node with new priority.\n   */\n  updatePriority(newPriorityNode: Node): Node;\n\n  /**\n   * Returns the specified immediate child, or null if it doesn't exist.\n   * @param childName - The name of the child to retrieve.\n   * @returns The retrieved child, or an empty node.\n   */\n  getImmediateChild(childName: string): Node;\n\n  /**\n   * Returns a child by path, or null if it doesn't exist.\n   * @param path - The path of the child to retrieve.\n   * @returns The retrieved child or an empty node.\n   */\n  getChild(path: Path): Node;\n\n  /**\n   * Returns the name of the child immediately prior to the specified childNode, or null.\n   * @param childName - The name of the child to find the predecessor of.\n   * @param childNode - The node to find the predecessor of.\n   * @param index - The index to use to determine the predecessor\n   * @returns The name of the predecessor child, or null if childNode is the first child.\n   */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string | null;\n\n  /**\n   * Returns a duplicate node, with the specified immediate child updated.\n   * Any value in the node will be removed.\n   * @param childName - The name of the child to update.\n   * @param newChildNode - The new child node\n   * @returns The updated node.\n   */\n  updateImmediateChild(childName: string, newChildNode: Node): Node;\n\n  /**\n   * Returns a duplicate node, with the specified child updated.  Any value will\n   * be removed.\n   * @param path - The path of the child to update.\n   * @param newChildNode - The new child node, which may be an empty node\n   * @returns The updated node.\n   */\n  updateChild(path: Path, newChildNode: Node): Node;\n\n  /**\n   * True if the immediate child specified exists\n   */\n  hasChild(childName: string): boolean;\n\n  /**\n   * @returns True if this node has no value or children.\n   */\n  isEmpty(): boolean;\n\n  /**\n   * @returns The number of children of this node.\n   */\n  numChildren(): number;\n\n  /**\n   * Calls action for each child.\n   * @param action - Action to be called for\n   * each child.  It's passed the child name and the child node.\n   * @returns The first truthy value return by action, or the last falsey one\n   */\n  forEachChild(index: Index, action: (a: string, b: Node) => void): unknown;\n\n  /**\n   * @param exportFormat - True for export format (also wire protocol format).\n   * @returns Value of this node as JSON.\n   */\n  val(exportFormat?: boolean): unknown;\n\n  /**\n   * @returns hash representing the node contents.\n   */\n  hash(): string;\n\n  /**\n   * @param other - Another node\n   * @returns -1 for less than, 0 for equal, 1 for greater than other\n   */\n  compareTo(other: Node): number;\n\n  /**\n   * @returns Whether or not this snapshot equals other\n   */\n  equals(other: Node): boolean;\n\n  /**\n   * @returns This node, with the specified index now available\n   */\n  withIndex(indexDefinition: Index): Node;\n\n  isIndexed(indexDefinition: Index): boolean;\n}\n\nexport class NamedNode {\n  constructor(public name: string, public node: Node) {}\n\n  static Wrap(name: string, node: Node) {\n    return new NamedNode(name, node);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Comparator } from '../../util/SortedMap';\nimport { MIN_NAME } from '../../util/util';\nimport { Node, NamedNode } from '../Node';\n\nexport abstract class Index {\n  abstract compare(a: NamedNode, b: NamedNode): number;\n\n  abstract isDefinedOn(node: Node): boolean;\n\n  /**\n   * @returns A standalone comparison function for\n   * this index\n   */\n  getCompare(): Comparator<NamedNode> {\n    return this.compare.bind(this);\n  }\n\n  /**\n   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\n   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\n   *\n   *\n   * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\n   */\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    const oldWrapped = new NamedNode(MIN_NAME, oldNode);\n    const newWrapped = new NamedNode(MIN_NAME, newNode);\n    return this.compare(oldWrapped, newWrapped) !== 0;\n  }\n\n  /**\n   * @returns a node wrapper that will sort equal to or less than\n   * any other node wrapper, using this index\n   */\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n\n  /**\n   * @returns a node wrapper that will sort greater than or equal to\n   * any other node wrapper, using this index\n   */\n  abstract maxPost(): NamedNode;\n\n  abstract makePost(indexValue: unknown, name: string): NamedNode;\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  abstract toString(): string;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { ChildrenNode } from '../ChildrenNode';\nimport { Node, NamedNode } from '../Node';\n\nimport { Index } from './Index';\n\nlet __EMPTY_NODE: ChildrenNode;\n\nexport class KeyIndex extends Index {\n  static get __EMPTY_NODE() {\n    return __EMPTY_NODE;\n  }\n\n  static set __EMPTY_NODE(val) {\n    __EMPTY_NODE = val;\n  }\n  compare(a: NamedNode, b: NamedNode): number {\n    return nameCompare(a.name, b.name);\n  }\n  isDefinedOn(node: Node): boolean {\n    // We could probably return true here (since every node has a key), but it's never called\n    // so just leaving unimplemented for now.\n    throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return false; // The key for a node never changes.\n  }\n  minPost() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    // TODO: This should really be created once and cached in a static property, but\n    // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n    return new NamedNode(MAX_NAME, __EMPTY_NODE);\n  }\n\n  makePost(indexValue: string, name: string): NamedNode {\n    assert(\n      typeof indexValue === 'string',\n      'KeyIndex indexValue must always be a string.'\n    );\n    // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n    return new NamedNode(indexValue, __EMPTY_NODE);\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.key';\n  }\n}\n\nexport const KEY_INDEX = new KeyIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Implementation of an immutable SortedMap using a Left-leaning\n * Red-Black Tree, adapted from the implementation in Mugs\n * (http://mads379.github.com/mugs/) by Mads Hartmann Jensen\n * (mads379\\@gmail.com).\n *\n * Original paper on Left-leaning Red-Black Trees:\n *   http://www.cs.princeton.edu/~rs/talks/LLRB/LLRB.pdf\n *\n * Invariant 1: No red node has a red child\n * Invariant 2: Every leaf path has the same number of black nodes\n * Invariant 3: Only the left child can be red (left leaning)\n */\n\n// TODO: There are some improvements I'd like to make to improve memory / perf:\n//  * Create two prototypes, LLRedNode and LLBlackNode, instead of storing a\n//    color property in every node.\n// TODO: It would also be good (and possibly necessary) to create a base\n// interface for LLRBNode and LLRBEmptyNode.\n\nexport type Comparator<K> = (key1: K, key2: K) => number;\n\n/**\n * An iterator over an LLRBNode.\n */\nexport class SortedMapIterator<K, V, T> {\n  private nodeStack_: Array<LLRBNode<K, V> | LLRBEmptyNode<K, V>> = [];\n\n  /**\n   * @param node - Node to iterate.\n   * @param isReverse_ - Whether or not to iterate in reverse\n   */\n  constructor(\n    node: LLRBNode<K, V> | LLRBEmptyNode<K, V>,\n    startKey: K | null,\n    comparator: Comparator<K>,\n    private isReverse_: boolean,\n    private resultGenerator_: ((k: K, v: V) => T) | null = null\n  ) {\n    let cmp = 1;\n    while (!node.isEmpty()) {\n      node = node as LLRBNode<K, V>;\n      cmp = startKey ? comparator(node.key, startKey) : 1;\n      // flip the comparison if we're going in reverse\n      if (isReverse_) {\n        cmp *= -1;\n      }\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse_) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n        this.nodeStack_.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move to the next one\n        this.nodeStack_.push(node);\n        if (this.isReverse_) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  getNext(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    let node = this.nodeStack_.pop();\n    let result: T;\n    if (this.resultGenerator_) {\n      result = this.resultGenerator_(node.key, node.value);\n    } else {\n      result = { key: node.key, value: node.value } as unknown as T;\n    }\n\n    if (this.isReverse_) {\n      node = node.left;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  }\n\n  hasNext(): boolean {\n    return this.nodeStack_.length > 0;\n  }\n\n  peek(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    const node = this.nodeStack_[this.nodeStack_.length - 1];\n    if (this.resultGenerator_) {\n      return this.resultGenerator_(node.key, node.value);\n    } else {\n      return { key: node.key, value: node.value } as unknown as T;\n    }\n  }\n}\n\n/**\n * Represents a node in a Left-leaning Red-Black tree.\n */\nexport class LLRBNode<K, V> {\n  color: boolean;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n\n  /**\n   * @param key - Key associated with this node.\n   * @param value - Value associated with this node.\n   * @param color - Whether this node is red.\n   * @param left - Left child.\n   * @param right - Right child.\n   */\n  constructor(\n    public key: K,\n    public value: V,\n    color: boolean | null,\n    left?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ) {\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left =\n      left != null ? left : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n    this.right =\n      right != null ? right : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n  }\n\n  static RED = true;\n  static BLACK = false;\n\n  /**\n   * Returns a copy of the current node, optionally replacing pieces of it.\n   *\n   * @param key - New key for the node, or null.\n   * @param value - New value for the node, or null.\n   * @param color - New color for the node, or null.\n   * @param left - New left child for the node, or null.\n   * @param right - New right child for the node, or null.\n   * @returns The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBNode<K, V> {\n    return new LLRBNode(\n      key != null ? key : this.key,\n      value != null ? value : this.value,\n      color != null ? color : this.color,\n      left != null ? left : this.left,\n      right != null ? right : this.right\n    );\n  }\n\n  /**\n   * @returns The total number of nodes in the tree.\n   */\n  count(): number {\n    return this.left.count() + 1 + this.right.count();\n  }\n\n  /**\n   * @returns True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   *   node.  If it returns true, traversal is aborted.\n   * @returns The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return (\n      this.left.inorderTraversal(action) ||\n      !!action(this.key, this.value) ||\n      this.right.inorderTraversal(action)\n    );\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return (\n      this.right.reverseTraversal(action) ||\n      action(this.key, this.value) ||\n      this.left.reverseTraversal(action)\n    );\n  }\n\n  /**\n   * @returns The minimum node in the tree.\n   */\n  private min_(): LLRBNode<K, V> {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return (this.left as LLRBNode<K, V>).min_();\n    }\n  }\n\n  /**\n   * @returns The maximum key in the tree.\n   */\n  minKey(): K {\n    return this.min_().key;\n  }\n\n  /**\n   * @returns The maximum key in the tree.\n   */\n  maxKey(): K {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  }\n\n  /**\n   * @param key - Key to insert.\n   * @param value - Value to insert.\n   * @param comparator - Comparator.\n   * @returns New tree, with the key/value added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    const cmp = comparator(key, n.key);\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        n.right.insert(key, value, comparator)\n      );\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @returns New tree, with the minimum key removed.\n   */\n  private removeMin_(): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    if (this.left.isEmpty()) {\n      return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n    }\n    let n: LLRBNode<K, V> = this;\n    if (!n.left.isRed_() && !n.left.left.isRed_()) {\n      n = n.moveRedLeft_();\n    }\n    n = n.copy(null, null, null, (n.left as LLRBNode<K, V>).removeMin_(), null);\n    return n.fixUp_();\n  }\n\n  /**\n   * @param key - The key of the item to remove.\n   * @param comparator - Comparator.\n   * @returns New tree, with the specified item removed.\n   */\n  remove(\n    key: K,\n    comparator: Comparator<K>\n  ): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    let n, smallest;\n    n = this;\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n        n = n.moveRedLeft_();\n      }\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed_()) {\n        n = n.rotateRight_();\n      }\n      if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n        n = n.moveRedRight_();\n      }\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n        } else {\n          smallest = (n.right as LLRBNode<K, V>).min_();\n          n = n.copy(\n            smallest.key,\n            smallest.value,\n            null,\n            null,\n            (n.right as LLRBNode<K, V>).removeMin_()\n          );\n        }\n      }\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @returns Whether this is a RED node.\n   */\n  isRed_(): boolean {\n    return this.color;\n  }\n\n  /**\n   * @returns New tree after performing any needed rotations.\n   */\n  private fixUp_(): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    if (n.right.isRed_() && !n.left.isRed_()) {\n      n = n.rotateLeft_();\n    }\n    if (n.left.isRed_() && n.left.left.isRed_()) {\n      n = n.rotateRight_();\n    }\n    if (n.left.isRed_() && n.right.isRed_()) {\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after moveRedLeft.\n   */\n  private moveRedLeft_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.right.left.isRed_()) {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        (n.right as LLRBNode<K, V>).rotateRight_()\n      );\n      n = n.rotateLeft_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after moveRedRight.\n   */\n  private moveRedRight_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.left.left.isRed_()) {\n      n = n.rotateRight_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after rotateLeft.\n   */\n  private rotateLeft_(): LLRBNode<K, V> {\n    const nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, nl, null) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @returns New tree, after rotateRight.\n   */\n  private rotateRight_(): LLRBNode<K, V> {\n    const nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, nr) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @returns Newt ree, after colorFlip.\n   */\n  private colorFlip_(): LLRBNode<K, V> {\n    const left = this.left.copy(null, null, !this.left.color, null, null);\n    const right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  }\n\n  /**\n   * For testing.\n   *\n   * @returns True if all is well.\n   */\n  private checkMaxDepth_(): boolean {\n    const blackDepth = this.check_();\n    return Math.pow(2.0, blackDepth) <= this.count() + 1;\n  }\n\n  check_(): number {\n    if (this.isRed_() && this.left.isRed_()) {\n      throw new Error(\n        'Red node has red child(' + this.key + ',' + this.value + ')'\n      );\n    }\n    if (this.right.isRed_()) {\n      throw new Error(\n        'Right child of (' + this.key + ',' + this.value + ') is red'\n      );\n    }\n    const blackDepth = this.left.check_();\n    if (blackDepth !== this.right.check_()) {\n      throw new Error('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed_() ? 0 : 1);\n    }\n  }\n}\n\n/**\n * Represents an empty node (a leaf node in the Red-Black Tree).\n */\nexport class LLRBEmptyNode<K, V> {\n  key: K;\n  value: V;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  color: boolean;\n\n  /**\n   * Returns a copy of the current node.\n   *\n   * @returns The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key/value added.\n   *\n   * @param key - Key to be added.\n   * @param value - Value to be added.\n   * @param comparator - Comparator.\n   * @returns New tree, with item added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    return new LLRBNode(key, value, null);\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key removed.\n   *\n   * @param key - The key to remove.\n   * @param comparator - Comparator.\n   * @returns New tree, with item removed.\n   */\n  remove(key: K, comparator: Comparator<K>): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * @returns The total number of nodes in the tree.\n   */\n  count(): number {\n    return 0;\n  }\n\n  /**\n   * @returns True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return true;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return false;\n  }\n\n  minKey(): null {\n    return null;\n  }\n\n  maxKey(): null {\n    return null;\n  }\n\n  check_(): number {\n    return 0;\n  }\n\n  /**\n   * @returns Whether this node is red.\n   */\n  isRed_() {\n    return false;\n  }\n}\n\n/**\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\n * tree.\n */\nexport class SortedMap<K, V> {\n  /**\n   * Always use the same empty node, to reduce memory.\n   */\n  static EMPTY_NODE = new LLRBEmptyNode();\n\n  /**\n   * @param comparator_ - Key comparator.\n   * @param root_ - Optional root node for the map.\n   */\n  constructor(\n    private comparator_: Comparator<K>,\n    private root_:\n      | LLRBNode<K, V>\n      | LLRBEmptyNode<K, V> = SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>\n  ) {}\n\n  /**\n   * Returns a copy of the map, with the specified key/value added or replaced.\n   * (TODO: We should perhaps rename this method to 'put')\n   *\n   * @param key - Key to be added.\n   * @param value - Value to be added.\n   * @returns New map, with item added.\n   */\n  insert(key: K, value: V): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .insert(key, value, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns a copy of the map, with the specified key removed.\n   *\n   * @param key - The key to remove.\n   * @returns New map, with item removed.\n   */\n  remove(key: K): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .remove(key, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns the value of the node with the given key, or null.\n   *\n   * @param key - The key to look up.\n   * @returns The value of the node with the given key, or null if the\n   * key doesn't exist.\n   */\n  get(key: K): V | null {\n    let cmp;\n    let node = this.root_;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Returns the key of the item *before* the specified key, or null if key is the first item.\n   * @param key - The key to find the predecessor of\n   * @returns The predecessor key.\n   */\n  getPredecessorKey(key: K): K | null {\n    let cmp,\n      node = this.root_,\n      rightParent = null;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        if (!node.left.isEmpty()) {\n          node = node.left;\n          while (!node.right.isEmpty()) {\n            node = node.right;\n          }\n          return node.key;\n        } else if (rightParent) {\n          return rightParent.key;\n        } else {\n          return null; // first item.\n        }\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        rightParent = node;\n        node = node.right;\n      }\n    }\n\n    throw new Error(\n      'Attempted to find predecessor key for a nonexistent key.  What gives?'\n    );\n  }\n\n  /**\n   * @returns True if the map is empty.\n   */\n  isEmpty(): boolean {\n    return this.root_.isEmpty();\n  }\n\n  /**\n   * @returns The total number of nodes in the map.\n   */\n  count(): number {\n    return this.root_.count();\n  }\n\n  /**\n   * @returns The minimum key in the map.\n   */\n  minKey(): K | null {\n    return this.root_.minKey();\n  }\n\n  /**\n   * @returns The maximum key in the map.\n   */\n  maxKey(): K | null {\n    return this.root_.maxKey();\n  }\n\n  /**\n   * Traverses the map in key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action - Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @returns The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return this.root_.inorderTraversal(action);\n  }\n\n  /**\n   * Traverses the map in reverse key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action - Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @returns True if the traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return this.root_.reverseTraversal(action);\n  }\n\n  /**\n   * Returns an iterator over the SortedMap.\n   * @returns The iterator.\n   */\n  getIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getReverseIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n\n  getReverseIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../util/util';\n\nimport { NamedNode } from './Node';\n\nexport function NAME_ONLY_COMPARATOR(left: NamedNode, right: NamedNode) {\n  return nameCompare(left.name, right.name);\n}\n\nexport function NAME_COMPARATOR(left: string, right: string) {\n  return nameCompare(left, right);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { doubleToIEEE754String } from '../util/util';\n\nimport { Node } from './Node';\n\nlet MAX_NODE: Node;\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport const priorityHashText = function (priority: string | number): string {\n  if (typeof priority === 'number') {\n    return 'number:' + doubleToIEEE754String(priority);\n  } else {\n    return 'string:' + priority;\n  }\n};\n\n/**\n * Validates that a priority snapshot Node is valid.\n */\nexport const validatePriorityNode = function (priorityNode: Node) {\n  if (priorityNode.isLeafNode()) {\n    const val = priorityNode.val();\n    assert(\n      typeof val === 'string' ||\n        typeof val === 'number' ||\n        (typeof val === 'object' && contains(val as Indexable, '.sv')),\n      'Priority must be a string or number.'\n    );\n  } else {\n    assert(\n      priorityNode === MAX_NODE || priorityNode.isEmpty(),\n      'priority of unexpected type.'\n    );\n  }\n  // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n  assert(\n    priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(),\n    \"Priority nodes can't have a priority of their own.\"\n  );\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport {\n  Path,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\nimport { doubleToIEEE754String, sha1 } from '../util/util';\n\nimport { ChildrenNodeConstructor } from './ChildrenNode';\nimport { Index } from './indexes/Index';\nimport { Node } from './Node';\nimport { priorityHashText, validatePriorityNode } from './snap';\n\nlet __childrenNodeConstructor: ChildrenNodeConstructor;\n\n/**\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\n * implements Node and stores the value of the node (a string,\n * number, or boolean) accessible via getValue().\n */\nexport class LeafNode implements Node {\n  static set __childrenNodeConstructor(val: ChildrenNodeConstructor) {\n    __childrenNodeConstructor = val;\n  }\n\n  static get __childrenNodeConstructor() {\n    return __childrenNodeConstructor;\n  }\n\n  /**\n   * The sort order for comparing leaf nodes of different types. If two leaf nodes have\n   * the same type, the comparison falls back to their value\n   */\n  static VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n\n  private lazyHash_: string | null = null;\n\n  /**\n   * @param value_ - The value to store in this leaf node. The object type is\n   * possible in the event of a deferred value\n   * @param priorityNode_ - The priority of this node.\n   */\n  constructor(\n    private readonly value_: string | number | boolean | Indexable,\n    private priorityNode_: Node = LeafNode.__childrenNodeConstructor.EMPTY_NODE\n  ) {\n    assert(\n      this.value_ !== undefined && this.value_ !== null,\n      \"LeafNode shouldn't be created with null/undefined value.\"\n    );\n\n    validatePriorityNode(this.priorityNode_);\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return true;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    return new LeafNode(this.value_, newPriorityNode);\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    if (pathIsEmpty(path)) {\n      return this;\n    } else if (pathGetFront(path) === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n  hasChild(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(childName: string, childNode: Node): null {\n    return null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else if (newChildNode.isEmpty() && childName !== '.priority') {\n      return this;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(\n        childName,\n        newChildNode\n      ).updatePriority(this.priorityNode_);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else if (newChildNode.isEmpty() && front !== '.priority') {\n      return this;\n    } else {\n      assert(\n        front !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n\n      return this.updateImmediateChild(\n        front,\n        LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(\n          pathPopFront(path),\n          newChildNode\n        )\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return 0;\n  }\n\n  /** @inheritDoc */\n  forEachChild(index: Index, action: (s: string, n: Node) => void): boolean {\n    return false;\n  }\n  val(exportFormat?: boolean): {} {\n    if (exportFormat && !this.getPriority().isEmpty()) {\n      return {\n        '.value': this.getValue(),\n        '.priority': this.getPriority().val()\n      };\n    } else {\n      return this.getValue();\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.priorityNode_.isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.priorityNode_.val() as number | string) +\n          ':';\n      }\n\n      const type = typeof this.value_;\n      toHash += type + ':';\n      if (type === 'number') {\n        toHash += doubleToIEEE754String(this.value_ as number);\n      } else {\n        toHash += this.value_;\n      }\n      this.lazyHash_ = sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /**\n   * Returns the value of the leaf node.\n   * @returns The value of the node.\n   */\n  getValue(): Indexable | string | number | boolean {\n    return this.value_;\n  }\n  compareTo(other: Node): number {\n    if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n      return 1;\n    } else if (other instanceof LeafNode.__childrenNodeConstructor) {\n      return -1;\n    } else {\n      assert(other.isLeafNode(), 'Unknown node type');\n      return this.compareToLeafNode_(other as LeafNode);\n    }\n  }\n\n  /**\n   * Comparison specifically for two leaf nodes\n   */\n  private compareToLeafNode_(otherLeaf: LeafNode): number {\n    const otherLeafType = typeof otherLeaf.value_;\n    const thisLeafType = typeof this.value_;\n    const otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n    const thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n    assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n    assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n    if (otherIndex === thisIndex) {\n      // Same type, compare values\n      if (thisLeafType === 'object') {\n        // Deferred value nodes are all equal, but we should also never get to this point...\n        return 0;\n      } else {\n        // Note that this works because true > false, all others are number or string comparisons\n        if (this.value_ < otherLeaf.value_) {\n          return -1;\n        } else if (this.value_ === otherLeaf.value_) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    } else {\n      return thisIndex - otherIndex;\n    }\n  }\n  withIndex(): Node {\n    return this;\n  }\n  isIndexed(): boolean {\n    return true;\n  }\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      const otherLeaf = other as LeafNode;\n      return (\n        this.value_ === otherLeaf.value_ &&\n        this.priorityNode_.equals(otherLeaf.priorityNode_)\n      );\n    } else {\n      return false;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { LeafNode } from '../LeafNode';\nimport { NamedNode, Node } from '../Node';\n\nimport { Index } from './Index';\n\nlet nodeFromJSON: (a: unknown) => Node;\nlet MAX_NODE: Node;\n\nexport function setNodeFromJSON(val: (a: unknown) => Node) {\n  nodeFromJSON = val;\n}\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport class PriorityIndex extends Index {\n  compare(a: NamedNode, b: NamedNode): number {\n    const aPriority = a.node.getPriority();\n    const bPriority = b.node.getPriority();\n    const indexCmp = aPriority.compareTo(bPriority);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  isDefinedOn(node: Node): boolean {\n    return !node.getPriority().isEmpty();\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.getPriority().equals(newNode.getPriority());\n  }\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE));\n  }\n\n  makePost(indexValue: unknown, name: string): NamedNode {\n    const priorityNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.priority';\n  }\n}\n\nexport const PRIORITY_INDEX = new PriorityIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LLRBNode, SortedMap } from '../util/SortedMap';\n\nimport { NamedNode } from './Node';\n\nconst LOG_2 = Math.log(2);\n\nclass Base12Num {\n  count: number;\n  private current_: number;\n  private bits_: number;\n\n  constructor(length: number) {\n    const logBase2 = (num: number) =>\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      parseInt((Math.log(num) / LOG_2) as any, 10);\n    const bitMask = (bits: number) => parseInt(Array(bits + 1).join('1'), 2);\n    this.count = logBase2(length + 1);\n    this.current_ = this.count - 1;\n    const mask = bitMask(this.count);\n    this.bits_ = (length + 1) & mask;\n  }\n\n  nextBitIsOne(): boolean {\n    //noinspection JSBitwiseOperatorUsage\n    const result = !(this.bits_ & (0x1 << this.current_));\n    this.current_--;\n    return result;\n  }\n}\n\n/**\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\n * function\n *\n * Uses the algorithm described in the paper linked here:\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\n *\n * @param childList - Unsorted list of children\n * @param cmp - The comparison method to be used\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\n * type is not NamedNode\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\n */\nexport const buildChildSet = function <K, V>(\n  childList: NamedNode[],\n  cmp: (a: NamedNode, b: NamedNode) => number,\n  keyFn?: (a: NamedNode) => K,\n  mapSortFn?: (a: K, b: K) => number\n): SortedMap<K, V> {\n  childList.sort(cmp);\n\n  const buildBalancedTree = function (\n    low: number,\n    high: number\n  ): LLRBNode<K, V> | null {\n    const length = high - low;\n    let namedNode: NamedNode;\n    let key: K;\n    if (length === 0) {\n      return null;\n    } else if (length === 1) {\n      namedNode = childList[low];\n      key = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      return new LLRBNode(\n        key,\n        namedNode.node as unknown as V,\n        LLRBNode.BLACK,\n        null,\n        null\n      );\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const middle = parseInt((length / 2) as any, 10) + low;\n      const left = buildBalancedTree(low, middle);\n      const right = buildBalancedTree(middle + 1, high);\n      namedNode = childList[middle];\n      key = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      return new LLRBNode(\n        key,\n        namedNode.node as unknown as V,\n        LLRBNode.BLACK,\n        left,\n        right\n      );\n    }\n  };\n\n  const buildFrom12Array = function (base12: Base12Num): LLRBNode<K, V> {\n    let node: LLRBNode<K, V> = null;\n    let root = null;\n    let index = childList.length;\n\n    const buildPennant = function (chunkSize: number, color: boolean) {\n      const low = index - chunkSize;\n      const high = index;\n      index -= chunkSize;\n      const childTree = buildBalancedTree(low + 1, high);\n      const namedNode = childList[low];\n      const key: K = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      attachPennant(\n        new LLRBNode(\n          key,\n          namedNode.node as unknown as V,\n          color,\n          null,\n          childTree\n        )\n      );\n    };\n\n    const attachPennant = function (pennant: LLRBNode<K, V>) {\n      if (node) {\n        node.left = pennant;\n        node = pennant;\n      } else {\n        root = pennant;\n        node = pennant;\n      }\n    };\n\n    for (let i = 0; i < base12.count; ++i) {\n      const isOne = base12.nextBitIsOne();\n      // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n      const chunkSize = Math.pow(2, base12.count - (i + 1));\n      if (isOne) {\n        buildPennant(chunkSize, LLRBNode.BLACK);\n      } else {\n        // current == 2\n        buildPennant(chunkSize, LLRBNode.BLACK);\n        buildPennant(chunkSize, LLRBNode.RED);\n      }\n    }\n    return root;\n  };\n\n  const base12 = new Base12Num(childList.length);\n  const root = buildFrom12Array(base12);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return new SortedMap<K, V>(mapSortFn || (cmp as any), root);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains, map, safeGet } from '@firebase/util';\n\nimport { SortedMap } from '../util/SortedMap';\n\nimport { buildChildSet } from './childSet';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX } from './indexes/KeyIndex';\nimport { PRIORITY_INDEX } from './indexes/PriorityIndex';\nimport { NamedNode, Node } from './Node';\n\nlet _defaultIndexMap: IndexMap;\n\nconst fallbackObject = {};\n\nexport class IndexMap {\n  /**\n   * The default IndexMap for nodes without a priority\n   */\n  static get Default(): IndexMap {\n    assert(\n      fallbackObject && PRIORITY_INDEX,\n      'ChildrenNode.ts has not been loaded'\n    );\n    _defaultIndexMap =\n      _defaultIndexMap ||\n      new IndexMap(\n        { '.priority': fallbackObject },\n        { '.priority': PRIORITY_INDEX }\n      );\n    return _defaultIndexMap;\n  }\n\n  constructor(\n    private indexes_: {\n      [k: string]: SortedMap<NamedNode, Node> | /*FallbackType*/ object;\n    },\n    private indexSet_: { [k: string]: Index }\n  ) {}\n\n  get(indexKey: string): SortedMap<NamedNode, Node> | null {\n    const sortedMap = safeGet(this.indexes_, indexKey);\n    if (!sortedMap) {\n      throw new Error('No index defined for ' + indexKey);\n    }\n\n    if (sortedMap instanceof SortedMap) {\n      return sortedMap;\n    } else {\n      // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n      // regular child map\n      return null;\n    }\n  }\n\n  hasIndex(indexDefinition: Index): boolean {\n    return contains(this.indexSet_, indexDefinition.toString());\n  }\n\n  addIndex(\n    indexDefinition: Index,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    assert(\n      indexDefinition !== KEY_INDEX,\n      \"KeyIndex always exists and isn't meant to be added to the IndexMap.\"\n    );\n    const childList = [];\n    let sawIndexedValue = false;\n    const iter = existingChildren.getIterator(NamedNode.Wrap);\n    let next = iter.getNext();\n    while (next) {\n      sawIndexedValue =\n        sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n      childList.push(next);\n      next = iter.getNext();\n    }\n    let newIndex;\n    if (sawIndexedValue) {\n      newIndex = buildChildSet(childList, indexDefinition.getCompare());\n    } else {\n      newIndex = fallbackObject;\n    }\n    const indexName = indexDefinition.toString();\n    const newIndexSet = { ...this.indexSet_ };\n    newIndexSet[indexName] = indexDefinition;\n    const newIndexes = { ...this.indexes_ };\n    newIndexes[indexName] = newIndex;\n    return new IndexMap(newIndexes, newIndexSet);\n  }\n\n  /**\n   * Ensure that this node is properly tracked in any indexes that we're maintaining\n   */\n  addToIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>, indexName: string) => {\n        const index = safeGet(this.indexSet_, indexName);\n        assert(index, 'Missing index implementation for ' + indexName);\n        if (indexedChildren === fallbackObject) {\n          // Check to see if we need to index everything\n          if (index.isDefinedOn(namedNode.node)) {\n            // We need to build this index\n            const childList = [];\n            const iter = existingChildren.getIterator(NamedNode.Wrap);\n            let next = iter.getNext();\n            while (next) {\n              if (next.name !== namedNode.name) {\n                childList.push(next);\n              }\n              next = iter.getNext();\n            }\n            childList.push(namedNode);\n            return buildChildSet(childList, index.getCompare());\n          } else {\n            // No change, this remains a fallback\n            return fallbackObject;\n          }\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          let newChildren = indexedChildren;\n          if (existingSnap) {\n            newChildren = newChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          }\n          return newChildren.insert(namedNode, namedNode.node);\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n\n  /**\n   * Create a new IndexMap instance with the given value removed\n   */\n  removeFromIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>) => {\n        if (indexedChildren === fallbackObject) {\n          // This is the fallback. Just return it, nothing to do in this case\n          return indexedChildren;\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          if (existingSnap) {\n            return indexedChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          } else {\n            // No record of this child\n            return indexedChildren;\n          }\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathGetLength, pathPopFront } from '../util/Path';\nimport { SortedMap, SortedMapIterator } from '../util/SortedMap';\nimport { MAX_NAME, MIN_NAME, sha1 } from '../util/util';\n\nimport { NAME_COMPARATOR } from './comparators';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX, KeyIndex } from './indexes/KeyIndex';\nimport {\n  PRIORITY_INDEX,\n  setMaxNode as setPriorityMaxNode\n} from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\nimport { priorityHashText, setMaxNode, validatePriorityNode } from './snap';\n\nexport interface ChildrenNodeConstructor {\n  new (\n    children_: SortedMap<string, Node>,\n    priorityNode_: Node | null,\n    indexMap_: IndexMap\n  ): ChildrenNode;\n  EMPTY_NODE: ChildrenNode;\n}\n\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\n\nlet EMPTY_NODE: ChildrenNode;\n\n/**\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\n * (i.e. nodes with children).  It implements Node and stores the\n * list of children in the children property, sorted by child name.\n */\nexport class ChildrenNode implements Node {\n  private lazyHash_: string | null = null;\n\n  static get EMPTY_NODE(): ChildrenNode {\n    return (\n      EMPTY_NODE ||\n      (EMPTY_NODE = new ChildrenNode(\n        new SortedMap<string, Node>(NAME_COMPARATOR),\n        null,\n        IndexMap.Default\n      ))\n    );\n  }\n\n  /**\n   * @param children_ - List of children of this node..\n   * @param priorityNode_ - The priority of this node (as a snapshot node).\n   */\n  constructor(\n    private readonly children_: SortedMap<string, Node>,\n    private readonly priorityNode_: Node | null,\n    private indexMap_: IndexMap\n  ) {\n    /**\n     * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\n     * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\n     * class instead of an empty ChildrenNode.\n     */\n    if (this.priorityNode_) {\n      validatePriorityNode(this.priorityNode_);\n    }\n\n    if (this.children_.isEmpty()) {\n      assert(\n        !this.priorityNode_ || this.priorityNode_.isEmpty(),\n        'An empty node cannot have a priority'\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_ || EMPTY_NODE;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    if (this.children_.isEmpty()) {\n      // Don't allow priorities on empty nodes\n      return this;\n    } else {\n      return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n    }\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.getPriority();\n    } else {\n      const child = this.children_.get(childName);\n      return child === null ? EMPTY_NODE : child;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return this;\n    }\n\n    return this.getImmediateChild(front).getChild(pathPopFront(path));\n  }\n\n  /** @inheritDoc */\n  hasChild(childName: string): boolean {\n    return this.children_.get(childName) !== null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    assert(newChildNode, 'We should always be passing snapshot nodes');\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else {\n      const namedNode = new NamedNode(childName, newChildNode);\n      let newChildren, newIndexMap;\n      if (newChildNode.isEmpty()) {\n        newChildren = this.children_.remove(childName);\n        newIndexMap = this.indexMap_.removeFromIndexes(\n          namedNode,\n          this.children_\n        );\n      } else {\n        newChildren = this.children_.insert(childName, newChildNode);\n        newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n      }\n\n      const newPriority = newChildren.isEmpty()\n        ? EMPTY_NODE\n        : this.priorityNode_;\n      return new ChildrenNode(newChildren, newPriority, newIndexMap);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else {\n      assert(\n        pathGetFront(path) !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n      const newImmediateChild = this.getImmediateChild(front).updateChild(\n        pathPopFront(path),\n        newChildNode\n      );\n      return this.updateImmediateChild(front, newImmediateChild);\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return this.children_.isEmpty();\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return this.children_.count();\n  }\n\n  private static INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n\n  /** @inheritDoc */\n  val(exportFormat?: boolean): object {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    const obj: { [k: string]: unknown } = {};\n    let numKeys = 0,\n      maxKey = 0,\n      allIntegerKeys = true;\n    this.forEachChild(PRIORITY_INDEX, (key: string, childNode: Node) => {\n      obj[key] = childNode.val(exportFormat);\n\n      numKeys++;\n      if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n        maxKey = Math.max(maxKey, Number(key));\n      } else {\n        allIntegerKeys = false;\n      }\n    });\n\n    if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n      // convert to array.\n      const array: unknown[] = [];\n      // eslint-disable-next-line guard-for-in\n      for (const key in obj) {\n        array[key as unknown as number] = obj[key];\n      }\n\n      return array;\n    } else {\n      if (exportFormat && !this.getPriority().isEmpty()) {\n        obj['.priority'] = this.getPriority().val();\n      }\n      return obj;\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.getPriority().isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.getPriority().val() as string | number) +\n          ':';\n      }\n\n      this.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n        const childHash = childNode.hash();\n        if (childHash !== '') {\n          toHash += ':' + key + ':' + childHash;\n        }\n      });\n\n      this.lazyHash_ = toHash === '' ? '' : sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      const predecessor = idx.getPredecessorKey(\n        new NamedNode(childName, childNode)\n      );\n      return predecessor ? predecessor.name : null;\n    } else {\n      return this.children_.getPredecessorKey(childName);\n    }\n  }\n\n  getFirstChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const minKey = idx.minKey();\n      return minKey && minKey.name;\n    } else {\n      return this.children_.minKey();\n    }\n  }\n\n  getFirstChild(indexDefinition: Index): NamedNode | null {\n    const minKey = this.getFirstChildName(indexDefinition);\n    if (minKey) {\n      return new NamedNode(minKey, this.children_.get(minKey));\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Given an index, return the key name of the largest value we have, according to that index\n   */\n  getLastChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const maxKey = idx.maxKey();\n      return maxKey && maxKey.name;\n    } else {\n      return this.children_.maxKey();\n    }\n  }\n\n  getLastChild(indexDefinition: Index): NamedNode | null {\n    const maxKey = this.getLastChildName(indexDefinition);\n    if (maxKey) {\n      return new NamedNode(maxKey, this.children_.get(maxKey));\n    } else {\n      return null;\n    }\n  }\n  forEachChild(\n    index: Index,\n    action: (key: string, node: Node) => boolean | void\n  ): boolean {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      return idx.inorderTraversal(wrappedNode => {\n        return action(wrappedNode.name, wrappedNode.node);\n      });\n    } else {\n      return this.children_.inorderTraversal(action);\n    }\n  }\n\n  getIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n  }\n\n  getIteratorFrom(\n    startPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getIteratorFrom(startPost, key => key);\n    } else {\n      const iterator = this.children_.getIteratorFrom(\n        startPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, startPost) < 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n\n  getReverseIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getReverseIteratorFrom(\n      indexDefinition.maxPost(),\n      indexDefinition\n    );\n  }\n\n  getReverseIteratorFrom(\n    endPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getReverseIteratorFrom(endPost, key => {\n        return key;\n      });\n    } else {\n      const iterator = this.children_.getReverseIteratorFrom(\n        endPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, endPost) > 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n  compareTo(other: ChildrenNode): number {\n    if (this.isEmpty()) {\n      if (other.isEmpty()) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (other.isLeafNode() || other.isEmpty()) {\n      return 1;\n    } else if (other === MAX_NODE) {\n      return -1;\n    } else {\n      // Must be another node with children.\n      return 0;\n    }\n  }\n  withIndex(indexDefinition: Index): Node {\n    if (\n      indexDefinition === KEY_INDEX ||\n      this.indexMap_.hasIndex(indexDefinition)\n    ) {\n      return this;\n    } else {\n      const newIndexMap = this.indexMap_.addIndex(\n        indexDefinition,\n        this.children_\n      );\n      return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n    }\n  }\n  isIndexed(index: Index): boolean {\n    return index === KEY_INDEX || this.indexMap_.hasIndex(index);\n  }\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      return false;\n    } else {\n      const otherChildrenNode = other as ChildrenNode;\n      if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n        return false;\n      } else if (\n        this.children_.count() === otherChildrenNode.children_.count()\n      ) {\n        const thisIter = this.getIterator(PRIORITY_INDEX);\n        const otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\n        let thisCurrent = thisIter.getNext();\n        let otherCurrent = otherIter.getNext();\n        while (thisCurrent && otherCurrent) {\n          if (\n            thisCurrent.name !== otherCurrent.name ||\n            !thisCurrent.node.equals(otherCurrent.node)\n          ) {\n            return false;\n          }\n          thisCurrent = thisIter.getNext();\n          otherCurrent = otherIter.getNext();\n        }\n        return thisCurrent === null && otherCurrent === null;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  /**\n   * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\n   * instead.\n   *\n   */\n  private resolveIndex_(\n    indexDefinition: Index\n  ): SortedMap<NamedNode, Node> | null {\n    if (indexDefinition === KEY_INDEX) {\n      return null;\n    } else {\n      return this.indexMap_.get(indexDefinition.toString());\n    }\n  }\n}\n\nexport class MaxNode extends ChildrenNode {\n  constructor() {\n    super(\n      new SortedMap<string, Node>(NAME_COMPARATOR),\n      ChildrenNode.EMPTY_NODE,\n      IndexMap.Default\n    );\n  }\n\n  compareTo(other: Node): number {\n    if (other === this) {\n      return 0;\n    } else {\n      return 1;\n    }\n  }\n\n  equals(other: Node): boolean {\n    // Not that we every compare it, but MAX_NODE is only ever equal to itself\n    return other === this;\n  }\n\n  getPriority(): MaxNode {\n    return this;\n  }\n\n  getImmediateChild(childName: string): ChildrenNode {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n}\n\n/**\n * Marker that will sort higher than any other snapshot.\n */\nexport const MAX_NODE = new MaxNode();\n\n/**\n * Document NamedNode extensions\n */\ndeclare module './Node' {\n  interface NamedNode {\n    MIN: NamedNode;\n    MAX: NamedNode;\n  }\n}\n\nObject.defineProperties(NamedNode, {\n  MIN: {\n    value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\n  },\n  MAX: {\n    value: new NamedNode(MAX_NAME, MAX_NODE)\n  }\n});\n\n/**\n * Reference Extensions\n */\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode.__childrenNodeConstructor = ChildrenNode;\nsetMaxNode(MAX_NODE);\nsetPriorityMaxNode(MAX_NODE);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { SortedMap } from '../util/SortedMap';\nimport { each } from '../util/util';\n\nimport { ChildrenNode } from './ChildrenNode';\nimport { buildChildSet } from './childSet';\nimport { NAME_COMPARATOR, NAME_ONLY_COMPARATOR } from './comparators';\nimport { PRIORITY_INDEX, setNodeFromJSON } from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\n\nconst USE_HINZE = true;\n\n/**\n * Constructs a snapshot node representing the passed JSON and returns it.\n * @param json - JSON to create a node for.\n * @param priority - Optional priority to use.  This will be ignored if the\n * passed JSON contains a .priority property.\n */\nexport function nodeFromJSON(\n  json: unknown | null,\n  priority: unknown = null\n): Node {\n  if (json === null) {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  if (typeof json === 'object' && '.priority' in json) {\n    priority = json['.priority'];\n  }\n\n  assert(\n    priority === null ||\n      typeof priority === 'string' ||\n      typeof priority === 'number' ||\n      (typeof priority === 'object' && '.sv' in (priority as object)),\n    'Invalid priority type found: ' + typeof priority\n  );\n\n  if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n    json = json['.value'];\n  }\n\n  // Valid leaf nodes include non-objects or server-value wrapper objects\n  if (typeof json !== 'object' || '.sv' in json) {\n    const jsonLeaf = json as string | number | boolean | Indexable;\n    return new LeafNode(jsonLeaf, nodeFromJSON(priority));\n  }\n\n  if (!(json instanceof Array) && USE_HINZE) {\n    const children: NamedNode[] = [];\n    let childrenHavePriority = false;\n    const hinzeJsonObj = json;\n    each(hinzeJsonObj, (key, child) => {\n      if (key.substring(0, 1) !== '.') {\n        // Ignore metadata nodes\n        const childNode = nodeFromJSON(child);\n        if (!childNode.isEmpty()) {\n          childrenHavePriority =\n            childrenHavePriority || !childNode.getPriority().isEmpty();\n          children.push(new NamedNode(key, childNode));\n        }\n      }\n    });\n\n    if (children.length === 0) {\n      return ChildrenNode.EMPTY_NODE;\n    }\n\n    const childSet = buildChildSet(\n      children,\n      NAME_ONLY_COMPARATOR,\n      namedNode => namedNode.name,\n      NAME_COMPARATOR\n    ) as SortedMap<string, Node>;\n    if (childrenHavePriority) {\n      const sortedChildSet = buildChildSet(\n        children,\n        PRIORITY_INDEX.getCompare()\n      );\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        new IndexMap(\n          { '.priority': sortedChildSet },\n          { '.priority': PRIORITY_INDEX }\n        )\n      );\n    } else {\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        IndexMap.Default\n      );\n    }\n  } else {\n    let node: Node = ChildrenNode.EMPTY_NODE;\n    each(json, (key: string, childData: unknown) => {\n      if (contains(json as object, key)) {\n        if (key.substring(0, 1) !== '.') {\n          // ignore metadata nodes.\n          const childNode = nodeFromJSON(childData);\n          if (childNode.isLeafNode() || !childNode.isEmpty()) {\n            node = node.updateImmediateChild(key, childNode);\n          }\n        }\n      }\n    });\n\n    return node.updatePriority(nodeFromJSON(priority));\n  }\n}\n\nsetNodeFromJSON(nodeFromJSON);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathIsEmpty, pathSlice } from '../../util/Path';\nimport { MAX_NAME, nameCompare } from '../../util/util';\nimport { ChildrenNode, MAX_NODE } from '../ChildrenNode';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class PathIndex extends Index {\n  constructor(private indexPath_: Path) {\n    super();\n\n    assert(\n      !pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority',\n      \"Can't create PathIndex with empty path or .priority key\"\n    );\n  }\n\n  protected extractChild(snap: Node): Node {\n    return snap.getChild(this.indexPath_);\n  }\n  isDefinedOn(node: Node): boolean {\n    return !node.getChild(this.indexPath_).isEmpty();\n  }\n  compare(a: NamedNode, b: NamedNode): number {\n    const aChild = this.extractChild(a.node);\n    const bChild = this.extractChild(b.node);\n    const indexCmp = aChild.compareTo(bChild);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    const node = ChildrenNode.EMPTY_NODE.updateChild(\n      this.indexPath_,\n      valueNode\n    );\n    return new NamedNode(name, node);\n  }\n  maxPost(): NamedNode {\n    const node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE);\n    return new NamedNode(MAX_NAME, node);\n  }\n  toString(): string {\n    return pathSlice(this.indexPath_, 0).join('/');\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../../util/util';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class ValueIndex extends Index {\n  compare(a: NamedNode, b: NamedNode): number {\n    const indexCmp = a.node.compareTo(b.node);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  isDefinedOn(node: Node): boolean {\n    return true;\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.equals(newNode);\n  }\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MAX;\n  }\n\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, valueNode);\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.value';\n  }\n}\n\nexport const VALUE_INDEX = new ValueIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nexport const enum ChangeType {\n  /** Event type for a child added */\n  CHILD_ADDED = 'child_added',\n  /** Event type for a child removed */\n  CHILD_REMOVED = 'child_removed',\n  /** Event type for a child changed */\n  CHILD_CHANGED = 'child_changed',\n  /** Event type for a child moved */\n  CHILD_MOVED = 'child_moved',\n  /** Event type for a value change */\n  VALUE = 'value'\n}\n\nexport interface Change {\n  /** @param type - The event type */\n  type: ChangeType;\n  /** @param snapshotNode - The data */\n  snapshotNode: Node;\n  /** @param childName - The name for this child, if it's a child even */\n  childName?: string;\n  /** @param oldSnap - Used for intermediate processing of child changed events */\n  oldSnap?: Node;\n  /**  * @param prevName - The name for the previous child, if applicable */\n  prevName?: string | null;\n}\n\nexport function changeValue(snapshotNode: Node): Change {\n  return { type: ChangeType.VALUE, snapshotNode };\n}\n\nexport function changeChildAdded(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_ADDED, snapshotNode, childName };\n}\n\nexport function changeChildRemoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_REMOVED, snapshotNode, childName };\n}\n\nexport function changeChildChanged(\n  childName: string,\n  snapshotNode: Node,\n  oldSnap: Node\n): Change {\n  return {\n    type: ChangeType.CHILD_CHANGED,\n    snapshotNode,\n    childName,\n    oldSnap\n  };\n}\n\nexport function changeChildMoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_MOVED, snapshotNode, childName };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, stringify } from '@firebase/util';\n\nimport { Index } from '../snap/indexes/Index';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { PathIndex } from '../snap/indexes/PathIndex';\nimport { PRIORITY_INDEX, PriorityIndex } from '../snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../snap/indexes/ValueIndex';\nimport { MAX_NAME, MIN_NAME } from '../util/util';\n\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { LimitedFilter } from './filter/LimitedFilter';\nimport { NodeFilter } from './filter/NodeFilter';\nimport { RangedFilter } from './filter/RangedFilter';\n\n/**\n * Wire Protocol Constants\n */\nconst enum WIRE_PROTOCOL_CONSTANTS {\n  INDEX_START_VALUE = 'sp',\n  INDEX_START_NAME = 'sn',\n  INDEX_START_IS_INCLUSIVE = 'sin',\n  INDEX_END_VALUE = 'ep',\n  INDEX_END_NAME = 'en',\n  INDEX_END_IS_INCLUSIVE = 'ein',\n  LIMIT = 'l',\n  VIEW_FROM = 'vf',\n  VIEW_FROM_LEFT = 'l',\n  VIEW_FROM_RIGHT = 'r',\n  INDEX = 'i'\n}\n\n/**\n * REST Query Constants\n */\nconst enum REST_QUERY_CONSTANTS {\n  ORDER_BY = 'orderBy',\n  PRIORITY_INDEX = '$priority',\n  VALUE_INDEX = '$value',\n  KEY_INDEX = '$key',\n  START_AFTER = 'startAfter',\n  START_AT = 'startAt',\n  END_AT = 'endAt',\n  END_BEFORE = 'endBefore',\n  LIMIT_TO_FIRST = 'limitToFirst',\n  LIMIT_TO_LAST = 'limitToLast'\n}\n\n/**\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\n * user-facing API level, so it is not done here.\n *\n * @internal\n */\nexport class QueryParams {\n  limitSet_ = false;\n  startSet_ = false;\n  startNameSet_ = false;\n  startAfterSet_ = false; // can only be true if startSet_ is true\n  endSet_ = false;\n  endNameSet_ = false;\n  endBeforeSet_ = false; // can only be true if endSet_ is true\n  limit_ = 0;\n  viewFrom_ = '';\n  indexStartValue_: unknown | null = null;\n  indexStartName_ = '';\n  indexEndValue_: unknown | null = null;\n  indexEndName_ = '';\n  index_: PriorityIndex = PRIORITY_INDEX;\n\n  hasStart(): boolean {\n    return this.startSet_;\n  }\n\n  /**\n   * @returns True if it would return from left.\n   */\n  isViewFromLeft(): boolean {\n    if (this.viewFrom_ === '') {\n      // limit(), rather than limitToFirst or limitToLast was called.\n      // This means that only one of startSet_ and endSet_ is true. Use them\n      // to calculate which side of the view to anchor to. If neither is set,\n      // anchor to the end.\n      return this.startSet_;\n    } else {\n      return this.viewFrom_ === WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n    }\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true\n   */\n  getIndexStartValue(): unknown {\n    assert(this.startSet_, 'Only valid if start has been set');\n    return this.indexStartValue_;\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true.\n   * Returns the starting key name for the range defined by these query parameters\n   */\n  getIndexStartName(): string {\n    assert(this.startSet_, 'Only valid if start has been set');\n    if (this.startNameSet_) {\n      return this.indexStartName_;\n    } else {\n      return MIN_NAME;\n    }\n  }\n\n  hasEnd(): boolean {\n    return this.endSet_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   */\n  getIndexEndValue(): unknown {\n    assert(this.endSet_, 'Only valid if end has been set');\n    return this.indexEndValue_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   * Returns the end key name for the range defined by these query parameters\n   */\n  getIndexEndName(): string {\n    assert(this.endSet_, 'Only valid if end has been set');\n    if (this.endNameSet_) {\n      return this.indexEndName_;\n    } else {\n      return MAX_NAME;\n    }\n  }\n\n  hasLimit(): boolean {\n    return this.limitSet_;\n  }\n\n  /**\n   * @returns True if a limit has been set and it has been explicitly anchored\n   */\n  hasAnchoredLimit(): boolean {\n    return this.limitSet_ && this.viewFrom_ !== '';\n  }\n\n  /**\n   * Only valid to call if hasLimit() returns true\n   */\n  getLimit(): number {\n    assert(this.limitSet_, 'Only valid if limit has been set');\n    return this.limit_;\n  }\n\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  loadsAllData(): boolean {\n    return !(this.startSet_ || this.endSet_ || this.limitSet_);\n  }\n\n  isDefault(): boolean {\n    return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\n  }\n\n  copy(): QueryParams {\n    const copy = new QueryParams();\n    copy.limitSet_ = this.limitSet_;\n    copy.limit_ = this.limit_;\n    copy.startSet_ = this.startSet_;\n    copy.startAfterSet_ = this.startAfterSet_;\n    copy.indexStartValue_ = this.indexStartValue_;\n    copy.startNameSet_ = this.startNameSet_;\n    copy.indexStartName_ = this.indexStartName_;\n    copy.endSet_ = this.endSet_;\n    copy.endBeforeSet_ = this.endBeforeSet_;\n    copy.indexEndValue_ = this.indexEndValue_;\n    copy.endNameSet_ = this.endNameSet_;\n    copy.indexEndName_ = this.indexEndName_;\n    copy.index_ = this.index_;\n    copy.viewFrom_ = this.viewFrom_;\n    return copy;\n  }\n}\n\nexport function queryParamsGetNodeFilter(queryParams: QueryParams): NodeFilter {\n  if (queryParams.loadsAllData()) {\n    return new IndexedFilter(queryParams.getIndex());\n  } else if (queryParams.hasLimit()) {\n    return new LimitedFilter(queryParams);\n  } else {\n    return new RangedFilter(queryParams);\n  }\n}\n\nexport function queryParamsLimit(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = '';\n  return newParams;\n}\n\nexport function queryParamsLimitToFirst(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n  return newParams;\n}\n\nexport function queryParamsLimitToLast(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n  return newParams;\n}\n\nexport function queryParamsStartAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.startSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexStartValue_ = indexValue;\n  if (key != null) {\n    newParams.startNameSet_ = true;\n    newParams.indexStartName_ = key;\n  } else {\n    newParams.startNameSet_ = false;\n    newParams.indexStartName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsStartAfter(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX || !!key) {\n    params = queryParamsStartAt(queryParams, indexValue, key);\n  } else {\n    params = queryParamsStartAt(queryParams, indexValue, MAX_NAME);\n  }\n  params.startAfterSet_ = true;\n  return params;\n}\n\nexport function queryParamsEndAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.endSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexEndValue_ = indexValue;\n  if (key !== undefined) {\n    newParams.endNameSet_ = true;\n    newParams.indexEndName_ = key;\n  } else {\n    newParams.endNameSet_ = false;\n    newParams.indexEndName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsEndBefore(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX || !!key) {\n    params = queryParamsEndAt(queryParams, indexValue, key);\n  } else {\n    params = queryParamsEndAt(queryParams, indexValue, MIN_NAME);\n  }\n  params.endBeforeSet_ = true;\n  return params;\n}\n\nexport function queryParamsOrderBy(\n  queryParams: QueryParams,\n  index: Index\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.index_ = index;\n  return newParams;\n}\n\n/**\n * Returns a set of REST query string parameters representing this query.\n *\n * @returns query string parameters\n */\nexport function queryParamsToRestQueryStringParameters(\n  queryParams: QueryParams\n): Record<string, string | number> {\n  const qs: Record<string, string | number> = {};\n\n  if (queryParams.isDefault()) {\n    return qs;\n  }\n\n  let orderBy;\n  if (queryParams.index_ === PRIORITY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.PRIORITY_INDEX;\n  } else if (queryParams.index_ === VALUE_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.VALUE_INDEX;\n  } else if (queryParams.index_ === KEY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.KEY_INDEX;\n  } else {\n    assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\n    orderBy = queryParams.index_.toString();\n  }\n  qs[REST_QUERY_CONSTANTS.ORDER_BY] = stringify(orderBy);\n\n  if (queryParams.startSet_) {\n    const startParam = queryParams.startAfterSet_\n      ? REST_QUERY_CONSTANTS.START_AFTER\n      : REST_QUERY_CONSTANTS.START_AT;\n    qs[startParam] = stringify(queryParams.indexStartValue_);\n    if (queryParams.startNameSet_) {\n      qs[startParam] += ',' + stringify(queryParams.indexStartName_);\n    }\n  }\n\n  if (queryParams.endSet_) {\n    const endParam = queryParams.endBeforeSet_\n      ? REST_QUERY_CONSTANTS.END_BEFORE\n      : REST_QUERY_CONSTANTS.END_AT;\n    qs[endParam] = stringify(queryParams.indexEndValue_);\n    if (queryParams.endNameSet_) {\n      qs[endParam] += ',' + stringify(queryParams.indexEndName_);\n    }\n  }\n\n  if (queryParams.limitSet_) {\n    if (queryParams.isViewFromLeft()) {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_FIRST] = queryParams.limit_;\n    } else {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_LAST] = queryParams.limit_;\n    }\n  }\n\n  return qs;\n}\n\nexport function queryParamsGetQueryObject(\n  queryParams: QueryParams\n): Record<string, unknown> {\n  const obj: Record<string, unknown> = {};\n  if (queryParams.startSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] =\n      queryParams.indexStartValue_;\n    if (queryParams.startNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] =\n        queryParams.indexStartName_;\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_IS_INCLUSIVE] =\n      !queryParams.startAfterSet_;\n  }\n  if (queryParams.endSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = queryParams.indexEndValue_;\n    if (queryParams.endNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = queryParams.indexEndName_;\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_IS_INCLUSIVE] =\n      !queryParams.endBeforeSet_;\n  }\n  if (queryParams.limitSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = queryParams.limit_;\n    let viewFrom = queryParams.viewFrom_;\n    if (viewFrom === '') {\n      if (queryParams.isViewFromLeft()) {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n      } else {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n      }\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\n  }\n  // For now, priority index is the default, so we only specify if it's some other index\n  if (queryParams.index_ !== PRIORITY_INDEX) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = queryParams.index_.toString();\n  }\n  return obj;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  jsonEval,\n  safeGet,\n  querystring,\n  Deferred\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { logWrapper, warn } from './util/util';\nimport { QueryContext } from './view/EventRegistration';\nimport { queryParamsToRestQueryStringParameters } from './view/QueryParams';\n\n/**\n * An implementation of ServerActions that communicates with the server via REST requests.\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\n * persistent connection (using WebSockets or long-polling)\n */\nexport class ReadonlyRestClient extends ServerActions {\n  reportStats(stats: { [k: string]: unknown }): void {\n    throw new Error('Method not implemented.');\n  }\n\n  /** @private {function(...[*])} */\n  private log_: (...args: unknown[]) => void = logWrapper('p:rest:');\n\n  /**\n   * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\n   * that's been removed. :-/\n   */\n  private listens_: { [k: string]: object } = {};\n\n  static getListenId_(query: QueryContext, tag?: number | null): string {\n    if (tag !== undefined) {\n      return 'tag$' + tag;\n    } else {\n      assert(\n        query._queryParams.isDefault(),\n        \"should have a tag if it's not a default query.\"\n      );\n      return query._path.toString();\n    }\n  }\n\n  /**\n   * @param repoInfo_ - Data about the namespace we are connecting to\n   * @param onDataUpdate_ - A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private appCheckTokenProvider_: AppCheckTokenProvider\n  ) {\n    super();\n  }\n\n  /** @inheritDoc */\n  listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    const pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + query._queryIdentifier);\n\n    // Mark this listener so we can tell if it's removed.\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    const thisListen = {};\n    this.listens_[listenId] = thisListen;\n\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query._queryParams\n    );\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\n        }\n\n        if (safeGet(this.listens_, listenId) === thisListen) {\n          let status;\n          if (!error) {\n            status = 'ok';\n          } else if (error === 401) {\n            status = 'permission_denied';\n          } else {\n            status = 'rest_error:' + error;\n          }\n\n          onComplete(status, null);\n        }\n      }\n    );\n  }\n\n  /** @inheritDoc */\n  unlisten(query: QueryContext, tag: number | null) {\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    delete this.listens_[listenId];\n  }\n\n  get(query: QueryContext): Promise<string> {\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query._queryParams\n    );\n\n    const pathString = query._path.toString();\n\n    const deferred = new Deferred<string>();\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(\n            pathString,\n            data,\n            /*isMerge=*/ false,\n            /*tag=*/ null\n          );\n          deferred.resolve(data as string);\n        } else {\n          deferred.reject(new Error(data as string));\n        }\n      }\n    );\n    return deferred.promise;\n  }\n\n  /** @inheritDoc */\n  refreshAuthToken(token: string) {\n    // no-op since we just always call getToken.\n  }\n\n  /**\n   * Performs a REST request to the given path, with the provided query string parameters,\n   * and any auth credentials we have.\n   */\n  private restRequest_(\n    pathString: string,\n    queryStringParameters: { [k: string]: string | number } = {},\n    callback: ((a: number | null, b?: unknown) => void) | null\n  ) {\n    queryStringParameters['format'] = 'export';\n\n    return Promise.all([\n      this.authTokenProvider_.getToken(/*forceRefresh=*/ false),\n      this.appCheckTokenProvider_.getToken(/*forceRefresh=*/ false)\n    ]).then(([authToken, appCheckToken]) => {\n      if (authToken && authToken.accessToken) {\n        queryStringParameters['auth'] = authToken.accessToken;\n      }\n      if (appCheckToken && appCheckToken.token) {\n        queryStringParameters['ac'] = appCheckToken.token;\n      }\n\n      const url =\n        (this.repoInfo_.secure ? 'https://' : 'http://') +\n        this.repoInfo_.host +\n        pathString +\n        '?' +\n        'ns=' +\n        this.repoInfo_.namespace +\n        querystring(queryStringParameters);\n\n      this.log_('Sending REST request for ' + url);\n      const xhr = new XMLHttpRequest();\n      xhr.onreadystatechange = () => {\n        if (callback && xhr.readyState === 4) {\n          this.log_(\n            'REST Response for ' + url + ' received. status:',\n            xhr.status,\n            'response:',\n            xhr.responseText\n          );\n          let res = null;\n          if (xhr.status >= 200 && xhr.status < 300) {\n            try {\n              res = jsonEval(xhr.responseText);\n            } catch (e) {\n              warn(\n                'Failed to parse JSON response for ' +\n                  url +\n                  ': ' +\n                  xhr.responseText\n              );\n            }\n            callback(null, res);\n          } else {\n            // 401 and 404 are expected.\n            if (xhr.status !== 401 && xhr.status !== 404) {\n              warn(\n                'Got unsuccessful REST response for ' +\n                  url +\n                  ' Status: ' +\n                  xhr.status\n              );\n            }\n            callback(xhr.status);\n          }\n          callback = null;\n        }\n      };\n\n      xhr.open('GET', url, /*asynchronous=*/ true);\n      xhr.send();\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\n * params object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n */\nexport function querystring(querystringParams: {\n  [key: string]: string | number;\n}): string {\n  const params = [];\n  for (const [key, value] of Object.entries(querystringParams)) {\n    if (Array.isArray(value)) {\n      value.forEach(arrayVal => {\n        params.push(\n          encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal)\n        );\n      });\n    } else {\n      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    }\n  }\n  return params.length ? '&' + params.join('&') : '';\n}\n\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\n * (e.g. {arg: 'val', arg2: 'val2'})\n */\nexport function querystringDecode(querystring: string): Record<string, string> {\n  const obj: Record<string, string> = {};\n  const tokens = querystring.replace(/^\\?/, '').split('&');\n\n  tokens.forEach(token => {\n    if (token) {\n      const [key, value] = token.split('=');\n      obj[decodeURIComponent(key)] = decodeURIComponent(value);\n    }\n  });\n  return obj;\n}\n\n/**\n * Extract the query string part of a URL, including the leading question mark (if present).\n */\nexport function extractQuerystring(url: string): string {\n  const queryStart = url.indexOf('?');\n  if (!queryStart) {\n    return '';\n  }\n  const fragmentStart = url.indexOf('#', queryStart);\n  return url.substring(\n    queryStart,\n    fragmentStart > 0 ? fragmentStart : undefined\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\n\n/**\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\n */\nexport class SnapshotHolder {\n  private rootNode_: Node = ChildrenNode.EMPTY_NODE;\n\n  getNode(path: Path): Node {\n    return this.rootNode_.getChild(path);\n  }\n\n  updateSnapshot(path: Path, newSnapshotNode: Node) {\n    this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { Node } from './snap/Node';\nimport { Path, pathGetFront, pathIsEmpty, pathPopFront } from './util/Path';\n\n/**\n * Helper class to store a sparse set of snapshots.\n */\nexport interface SparseSnapshotTree {\n  value: Node | null;\n  readonly children: Map<string, SparseSnapshotTree>;\n}\n\nexport function newSparseSnapshotTree(): SparseSnapshotTree {\n  return {\n    value: null,\n    children: new Map()\n  };\n}\n\n/**\n * Gets the node stored at the given path if one exists.\n * Only seems to be used in tests.\n *\n * @param path - Path to look up snapshot for.\n * @returns The retrieved node, or null.\n */\nexport function sparseSnapshotTreeFind(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): Node | null {\n  if (sparseSnapshotTree.value != null) {\n    return sparseSnapshotTree.value.getChild(path);\n  } else if (!pathIsEmpty(path) && sparseSnapshotTree.children.size > 0) {\n    const childKey = pathGetFront(path);\n    path = pathPopFront(path);\n    if (sparseSnapshotTree.children.has(childKey)) {\n      const childTree = sparseSnapshotTree.children.get(childKey);\n      return sparseSnapshotTreeFind(childTree, path);\n    } else {\n      return null;\n    }\n  } else {\n    return null;\n  }\n}\n\n/**\n * Stores the given node at the specified path. If there is already a node\n * at a shallower path, it merges the new data into that snapshot node.\n *\n * @param path - Path to look up snapshot for.\n * @param data - The new data, or null.\n */\nexport function sparseSnapshotTreeRemember(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path,\n  data: Node\n): void {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = data;\n    sparseSnapshotTree.children.clear();\n  } else if (sparseSnapshotTree.value !== null) {\n    sparseSnapshotTree.value = sparseSnapshotTree.value.updateChild(path, data);\n  } else {\n    const childKey = pathGetFront(path);\n    if (!sparseSnapshotTree.children.has(childKey)) {\n      sparseSnapshotTree.children.set(childKey, newSparseSnapshotTree());\n    }\n\n    const child = sparseSnapshotTree.children.get(childKey);\n    path = pathPopFront(path);\n    sparseSnapshotTreeRemember(child, path, data);\n  }\n}\n\n/**\n * Purge the data at path from the cache.\n *\n * @param path - Path to look up snapshot for.\n * @returns True if this node should now be removed.\n */\nexport function sparseSnapshotTreeForget(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): boolean {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = null;\n    sparseSnapshotTree.children.clear();\n    return true;\n  } else {\n    if (sparseSnapshotTree.value !== null) {\n      if (sparseSnapshotTree.value.isLeafNode()) {\n        // We're trying to forget a node that doesn't exist\n        return false;\n      } else {\n        const value = sparseSnapshotTree.value;\n        sparseSnapshotTree.value = null;\n\n        value.forEachChild(PRIORITY_INDEX, (key, tree) => {\n          sparseSnapshotTreeRemember(sparseSnapshotTree, new Path(key), tree);\n        });\n\n        return sparseSnapshotTreeForget(sparseSnapshotTree, path);\n      }\n    } else if (sparseSnapshotTree.children.size > 0) {\n      const childKey = pathGetFront(path);\n      path = pathPopFront(path);\n      if (sparseSnapshotTree.children.has(childKey)) {\n        const safeToRemove = sparseSnapshotTreeForget(\n          sparseSnapshotTree.children.get(childKey),\n          path\n        );\n        if (safeToRemove) {\n          sparseSnapshotTree.children.delete(childKey);\n        }\n      }\n\n      return sparseSnapshotTree.children.size === 0;\n    } else {\n      return true;\n    }\n  }\n}\n\n/**\n * Recursively iterates through all of the stored tree and calls the\n * callback on each one.\n *\n * @param prefixPath - Path to look up node for.\n * @param func - The function to invoke for each tree.\n */\nexport function sparseSnapshotTreeForEachTree(\n  sparseSnapshotTree: SparseSnapshotTree,\n  prefixPath: Path,\n  func: (a: Path, b: Node) => unknown\n): void {\n  if (sparseSnapshotTree.value !== null) {\n    func(prefixPath, sparseSnapshotTree.value);\n  } else {\n    sparseSnapshotTreeForEachChild(sparseSnapshotTree, (key, tree) => {\n      const path = new Path(prefixPath.toString() + '/' + key);\n      sparseSnapshotTreeForEachTree(tree, path, func);\n    });\n  }\n}\n\n/**\n * Iterates through each immediate child and triggers the callback.\n * Only seems to be used in tests.\n *\n * @param func - The function to invoke for each child.\n */\nexport function sparseSnapshotTreeForEachChild(\n  sparseSnapshotTree: SparseSnapshotTree,\n  func: (a: string, b: SparseSnapshotTree) => void\n): void {\n  sparseSnapshotTree.children.forEach((tree, key) => {\n    func(key, tree);\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\n\n/**\n * Returns the delta from the previous call to get stats.\n *\n * @param collection_ - The collection to \"listen\" to.\n */\nexport class StatsListener {\n  private last_: { [k: string]: number } | null = null;\n\n  constructor(private collection_: StatsCollection) {}\n\n  get(): { [k: string]: number } {\n    const newStats = this.collection_.get();\n\n    const delta = { ...newStats };\n    if (this.last_) {\n      each(this.last_, (stat: string, value: number) => {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n    this.last_ = newStats;\n\n    return delta;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\nimport { ServerActions } from '../ServerActions';\nimport { setTimeoutNonBlocking, each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\nimport { StatsListener } from './StatsListener';\n\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\nconst FIRST_STATS_MIN_TIME = 10 * 1000;\nconst FIRST_STATS_MAX_TIME = 30 * 1000;\n\n// We'll continue to report stats on average every 5 minutes.\nconst REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n\nexport class StatsReporter {\n  private statsListener_: StatsListener;\n  statsToReport_: { [k: string]: boolean } = {};\n\n  constructor(collection: StatsCollection, private server_: ServerActions) {\n    this.statsListener_ = new StatsListener(collection);\n\n    const timeout =\n      FIRST_STATS_MIN_TIME +\n      (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n  }\n\n  private reportStats_() {\n    const stats = this.statsListener_.get();\n    const reportedStats: typeof stats = {};\n    let haveStatsToReport = false;\n\n    each(stats, (stat: string, value: number) => {\n      if (value > 0 && contains(this.statsToReport_, stat)) {\n        reportedStats[stat] = value;\n        haveStatsToReport = true;\n      }\n    });\n\n    if (haveStatsToReport) {\n      this.server_.reportStats(reportedStats);\n    }\n\n    // queue our next run.\n    setTimeoutNonBlocking(\n      this.reportStats_.bind(this),\n      Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL)\n    );\n  }\n}\n\nexport function statsReporterIncludeStat(\n  reporter: StatsReporter,\n  stat: string\n) {\n  reporter.statsToReport_[stat] = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\n/**\n *\n * @enum\n */\nexport enum OperationType {\n  OVERWRITE,\n  MERGE,\n  ACK_USER_WRITE,\n  LISTEN_COMPLETE\n}\n\n/**\n * @interface\n */\nexport interface Operation {\n  source: OperationSource;\n\n  type: OperationType;\n\n  path: Path;\n\n  operationForChild(childName: string): Operation | null;\n}\n\nexport interface OperationSource {\n  fromUser: boolean;\n  fromServer: boolean;\n  queryId: string | null;\n  tagged: boolean;\n}\n\nexport function newOperationSourceUser(): OperationSource {\n  return {\n    fromUser: true,\n    fromServer: false,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServer(): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServerTaggedQuery(\n  queryId: string\n): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId,\n    tagged: true\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\n\nimport { newOperationSourceUser, Operation, OperationType } from './Operation';\n\nexport class AckUserWrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.ACK_USER_WRITE;\n\n  /** @inheritDoc */\n  source = newOperationSourceUser();\n\n  /**\n   * @param affectedTree - A tree containing true for each affected path. Affected paths can't overlap.\n   */\n  constructor(\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public affectedTree: ImmutableTree<boolean>,\n    /** @inheritDoc */ public revert: boolean\n  ) {}\n  operationForChild(childName: string): AckUserWrite {\n    if (!pathIsEmpty(this.path)) {\n      assert(\n        pathGetFront(this.path) === childName,\n        'operationForChild called for unrelated child.'\n      );\n      return new AckUserWrite(\n        pathPopFront(this.path),\n        this.affectedTree,\n        this.revert\n      );\n    } else if (this.affectedTree.value != null) {\n      assert(\n        this.affectedTree.children.isEmpty(),\n        'affectedTree should not have overlapping affected paths.'\n      );\n      // All child locations are affected as well; just return same operation.\n      return this;\n    } else {\n      const childTree = this.affectedTree.subtree(new Path(childName));\n      return new AckUserWrite(newEmptyPath(), childTree, this.revert);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class Overwrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.OVERWRITE;\n\n  constructor(\n    public source: OperationSource,\n    public path: Path,\n    public snap: Node\n  ) {}\n\n  operationForChild(childName: string): Overwrite {\n    if (pathIsEmpty(this.path)) {\n      return new Overwrite(\n        this.source,\n        newEmptyPath(),\n        this.snap.getImmediateChild(childName)\n      );\n    } else {\n      return new Overwrite(this.source, pathPopFront(this.path), this.snap);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\nimport { Overwrite } from './Overwrite';\n\nexport class Merge implements Operation {\n  /** @inheritDoc */\n  type = OperationType.MERGE;\n\n  constructor(\n    /** @inheritDoc */ public source: OperationSource,\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public children: ImmutableTree<Node>\n  ) {}\n  operationForChild(childName: string): Operation {\n    if (pathIsEmpty(this.path)) {\n      const childTree = this.children.subtree(new Path(childName));\n      if (childTree.isEmpty()) {\n        // This child is unaffected\n        return null;\n      } else if (childTree.value) {\n        // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n        return new Overwrite(this.source, newEmptyPath(), childTree.value);\n      } else {\n        // This is a merge at a deeper level\n        return new Merge(this.source, newEmptyPath(), childTree);\n      }\n    } else {\n      assert(\n        pathGetFront(this.path) === childName,\n        \"Can't get a merge for a child not on the path of the operation\"\n      );\n      return new Merge(this.source, pathPopFront(this.path), this.children);\n    }\n  }\n  toString(): string {\n    return (\n      'Operation(' +\n      this.path +\n      ': ' +\n      this.source.toString() +\n      ' merge: ' +\n      this.children.toString() +\n      ')'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\n\n/**\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\n * whether a node potentially had children removed due to a filter.\n */\nexport class CacheNode {\n  constructor(\n    private node_: Node,\n    private fullyInitialized_: boolean,\n    private filtered_: boolean\n  ) {}\n\n  /**\n   * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\n   */\n  isFullyInitialized(): boolean {\n    return this.fullyInitialized_;\n  }\n\n  /**\n   * Returns whether this node is potentially missing children due to a filter applied to the node\n   */\n  isFiltered(): boolean {\n    return this.filtered_;\n  }\n\n  isCompleteForPath(path: Path): boolean {\n    if (pathIsEmpty(path)) {\n      return this.isFullyInitialized() && !this.filtered_;\n    }\n\n    const childKey = pathGetFront(path);\n    return this.isCompleteForChild(childKey);\n  }\n\n  isCompleteForChild(key: string): boolean {\n    return (\n      (this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key)\n    );\n  }\n\n  getNode(): Node {\n    return this.node_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assertionError } from '@firebase/util';\n\nimport { Index } from '../snap/indexes/Index';\nimport { NamedNode, Node } from '../snap/Node';\n\nimport { Change, ChangeType, changeChildMoved } from './Change';\nimport { Event } from './Event';\nimport { EventRegistration, QueryContext } from './EventRegistration';\n\n/**\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\n * for details.\n *\n */\nexport class EventGenerator {\n  index_: Index;\n\n  constructor(public query_: QueryContext) {\n    this.index_ = this.query_._queryParams.getIndex();\n  }\n}\n\n/**\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\n *\n * Notes:\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\n *    our index.\n *  - prevName will be calculated based on the index ordering.\n */\nexport function eventGeneratorGenerateEventsForChanges(\n  eventGenerator: EventGenerator,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistrations: EventRegistration[]\n): Event[] {\n  const events: Event[] = [];\n  const moves: Change[] = [];\n\n  changes.forEach(change => {\n    if (\n      change.type === ChangeType.CHILD_CHANGED &&\n      eventGenerator.index_.indexedValueChanged(\n        change.oldSnap as Node,\n        change.snapshotNode\n      )\n    ) {\n      moves.push(changeChildMoved(change.childName, change.snapshotNode));\n    }\n  });\n\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_REMOVED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_ADDED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_MOVED,\n    moves,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_CHANGED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.VALUE,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n\n  return events;\n}\n\n/**\n * Given changes of a single change type, generate the corresponding events.\n */\nfunction eventGeneratorGenerateEventsForType(\n  eventGenerator: EventGenerator,\n  events: Event[],\n  eventType: string,\n  changes: Change[],\n  registrations: EventRegistration[],\n  eventCache: Node\n) {\n  const filteredChanges = changes.filter(change => change.type === eventType);\n\n  filteredChanges.sort((a, b) =>\n    eventGeneratorCompareChanges(eventGenerator, a, b)\n  );\n  filteredChanges.forEach(change => {\n    const materializedChange = eventGeneratorMaterializeSingleChange(\n      eventGenerator,\n      change,\n      eventCache\n    );\n    registrations.forEach(registration => {\n      if (registration.respondsTo(change.type)) {\n        events.push(\n          registration.createEvent(materializedChange, eventGenerator.query_)\n        );\n      }\n    });\n  });\n}\n\nfunction eventGeneratorMaterializeSingleChange(\n  eventGenerator: EventGenerator,\n  change: Change,\n  eventCache: Node\n): Change {\n  if (change.type === 'value' || change.type === 'child_removed') {\n    return change;\n  } else {\n    change.prevName = eventCache.getPredecessorChildName(\n      change.childName,\n      change.snapshotNode,\n      eventGenerator.index_\n    );\n    return change;\n  }\n}\n\nfunction eventGeneratorCompareChanges(\n  eventGenerator: EventGenerator,\n  a: Change,\n  b: Change\n) {\n  if (a.childName == null || b.childName == null) {\n    throw assertionError('Should only compare child_ events.');\n  }\n  const aWrapped = new NamedNode(a.childName, a.snapshotNode);\n  const bWrapped = new NamedNode(b.childName, b.snapshotNode);\n  return eventGenerator.index_.compare(aWrapped, bWrapped);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nimport { CacheNode } from './CacheNode';\n\n/**\n * Stores the data we have cached for a view.\n *\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\n */\nexport interface ViewCache {\n  readonly eventCache: CacheNode;\n  readonly serverCache: CacheNode;\n}\n\nexport function newViewCache(\n  eventCache: CacheNode,\n  serverCache: CacheNode\n): ViewCache {\n  return { eventCache, serverCache };\n}\n\nexport function viewCacheUpdateEventSnap(\n  viewCache: ViewCache,\n  eventSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    new CacheNode(eventSnap, complete, filtered),\n    viewCache.serverCache\n  );\n}\n\nexport function viewCacheUpdateServerSnap(\n  viewCache: ViewCache,\n  serverSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    viewCache.eventCache,\n    new CacheNode(serverSnap, complete, filtered)\n  );\n}\n\nexport function viewCacheGetCompleteEventSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.eventCache.isFullyInitialized()\n    ? viewCache.eventCache.getNode()\n    : null;\n}\n\nexport function viewCacheGetCompleteServerSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.serverCache.isFullyInitialized()\n    ? viewCache.serverCache.getNode()\n    : null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './Path';\nimport { SortedMap } from './SortedMap';\nimport { each, stringCompare } from './util';\n\nlet emptyChildrenSingleton: SortedMap<string, ImmutableTree<null>>;\n\n/**\n * Singleton empty children collection.\n *\n */\nconst EmptyChildren = (): SortedMap<string, ImmutableTree<null>> => {\n  if (!emptyChildrenSingleton) {\n    emptyChildrenSingleton = new SortedMap<string, ImmutableTree<null>>(\n      stringCompare\n    );\n  }\n  return emptyChildrenSingleton;\n};\n\n/**\n * A tree with immutable elements.\n */\nexport class ImmutableTree<T> {\n  static fromObject<T>(obj: { [k: string]: T }): ImmutableTree<T> {\n    let tree: ImmutableTree<T> = new ImmutableTree<T>(null);\n    each(obj, (childPath: string, childSnap: T) => {\n      tree = tree.set(new Path(childPath), childSnap);\n    });\n    return tree;\n  }\n\n  constructor(\n    public readonly value: T | null,\n    public readonly children: SortedMap<\n      string,\n      ImmutableTree<T>\n    > = EmptyChildren()\n  ) {}\n\n  /**\n   * True if the value is empty and there are no children\n   */\n  isEmpty(): boolean {\n    return this.value === null && this.children.isEmpty();\n  }\n\n  /**\n   * Given a path and predicate, return the first node and the path to that node\n   * where the predicate returns true.\n   *\n   * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\n   * objects on the way back out, it may be better to pass down a pathSoFar obj.\n   *\n   * @param relativePath - The remainder of the path\n   * @param predicate - The predicate to satisfy to return a node\n   */\n  findRootMostMatchingPathAndValue(\n    relativePath: Path,\n    predicate: (a: T) => boolean\n  ): { path: Path; value: T } | null {\n    if (this.value != null && predicate(this.value)) {\n      return { path: newEmptyPath(), value: this.value };\n    } else {\n      if (pathIsEmpty(relativePath)) {\n        return null;\n      } else {\n        const front = pathGetFront(relativePath);\n        const child = this.children.get(front);\n        if (child !== null) {\n          const childExistingPathAndValue =\n            child.findRootMostMatchingPathAndValue(\n              pathPopFront(relativePath),\n              predicate\n            );\n          if (childExistingPathAndValue != null) {\n            const fullPath = pathChild(\n              new Path(front),\n              childExistingPathAndValue.path\n            );\n            return { path: fullPath, value: childExistingPathAndValue.value };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  /**\n   * Find, if it exists, the shortest subpath of the given path that points a defined\n   * value in the tree\n   */\n  findRootMostValueAndPath(\n    relativePath: Path\n  ): { path: Path; value: T } | null {\n    return this.findRootMostMatchingPathAndValue(relativePath, () => true);\n  }\n\n  /**\n   * @returns The subtree at the given path\n   */\n  subtree(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return this;\n    } else {\n      const front = pathGetFront(relativePath);\n      const childTree = this.children.get(front);\n      if (childTree !== null) {\n        return childTree.subtree(pathPopFront(relativePath));\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Sets a value at the specified path.\n   *\n   * @param relativePath - Path to set value at.\n   * @param toSet - Value to set.\n   * @returns Resulting tree.\n   */\n  set(relativePath: Path, toSet: T | null): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return new ImmutableTree(toSet, this.children);\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.set(pathPopFront(relativePath), toSet);\n      const newChildren = this.children.insert(front, newChild);\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Removes the value at the specified path.\n   *\n   * @param relativePath - Path to value to remove.\n   * @returns Resulting tree.\n   */\n  remove(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      if (this.children.isEmpty()) {\n        return new ImmutableTree<T>(null);\n      } else {\n        return new ImmutableTree(null, this.children);\n      }\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        const newChild = child.remove(pathPopFront(relativePath));\n        let newChildren;\n        if (newChild.isEmpty()) {\n          newChildren = this.children.remove(front);\n        } else {\n          newChildren = this.children.insert(front, newChild);\n        }\n        if (this.value === null && newChildren.isEmpty()) {\n          return new ImmutableTree<T>(null);\n        } else {\n          return new ImmutableTree(this.value, newChildren);\n        }\n      } else {\n        return this;\n      }\n    }\n  }\n\n  /**\n   * Gets a value from the tree.\n   *\n   * @param relativePath - Path to get value for.\n   * @returns Value at path, or null.\n   */\n  get(relativePath: Path): T | null {\n    if (pathIsEmpty(relativePath)) {\n      return this.value;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        return child.get(pathPopFront(relativePath));\n      } else {\n        return null;\n      }\n    }\n  }\n\n  /**\n   * Replace the subtree at the specified path with the given new tree.\n   *\n   * @param relativePath - Path to replace subtree for.\n   * @param newTree - New tree.\n   * @returns Resulting tree.\n   */\n  setTree(relativePath: Path, newTree: ImmutableTree<T>): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return newTree;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.setTree(pathPopFront(relativePath), newTree);\n      let newChildren;\n      if (newChild.isEmpty()) {\n        newChildren = this.children.remove(front);\n      } else {\n        newChildren = this.children.insert(front, newChild);\n      }\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Performs a depth first fold on this tree. Transforms a tree into a single\n   * value, given a function that operates on the path to a node, an optional\n   * current value, and a map of child names to folded subtrees\n   */\n  fold<V>(fn: (path: Path, value: T, children: { [k: string]: V }) => V): V {\n    return this.fold_(newEmptyPath(), fn);\n  }\n\n  /**\n   * Recursive helper for public-facing fold() method\n   */\n  private fold_<V>(\n    pathSoFar: Path,\n    fn: (path: Path, value: T | null, children: { [k: string]: V }) => V\n  ): V {\n    const accum: { [k: string]: V } = {};\n    this.children.inorderTraversal(\n      (childKey: string, childTree: ImmutableTree<T>) => {\n        accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\n      }\n    );\n    return fn(pathSoFar, this.value, accum);\n  }\n\n  /**\n   * Find the first matching value on the given path. Return the result of applying f to it.\n   */\n  findOnPath<V>(path: Path, f: (path: Path, value: T) => V | null): V | null {\n    return this.findOnPath_(path, newEmptyPath(), f);\n  }\n\n  private findOnPath_<V>(\n    pathToFollow: Path,\n    pathSoFar: Path,\n    f: (path: Path, value: T) => V | null\n  ): V | null {\n    const result = this.value ? f(pathSoFar, this.value) : false;\n    if (result) {\n      return result;\n    } else {\n      if (pathIsEmpty(pathToFollow)) {\n        return null;\n      } else {\n        const front = pathGetFront(pathToFollow)!;\n        const nextChild = this.children.get(front);\n        if (nextChild) {\n          return nextChild.findOnPath_(\n            pathPopFront(pathToFollow),\n            pathChild(pathSoFar, front),\n            f\n          );\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  foreachOnPath(\n    path: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    return this.foreachOnPath_(path, newEmptyPath(), f);\n  }\n\n  private foreachOnPath_(\n    pathToFollow: Path,\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    if (pathIsEmpty(pathToFollow)) {\n      return this;\n    } else {\n      if (this.value) {\n        f(currentRelativePath, this.value);\n      }\n      const front = pathGetFront(pathToFollow);\n      const nextChild = this.children.get(front);\n      if (nextChild) {\n        return nextChild.foreachOnPath_(\n          pathPopFront(pathToFollow),\n          pathChild(currentRelativePath, front),\n          f\n        );\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Calls the given function for each node in the tree that has a value.\n   *\n   * @param f - A function to be called with the path from the root of the tree to\n   * a node, and the value at that node. Called in depth-first order.\n   */\n  foreach(f: (path: Path, value: T) => void) {\n    this.foreach_(newEmptyPath(), f);\n  }\n\n  private foreach_(\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ) {\n    this.children.inorderTraversal((childName, childTree) => {\n      childTree.foreach_(pathChild(currentRelativePath, childName), f);\n    });\n    if (this.value) {\n      f(currentRelativePath, this.value);\n    }\n  }\n\n  foreachChild(f: (name: string, value: T) => void) {\n    this.children.inorderTraversal(\n      (childName: string, childTree: ImmutableTree<T>) => {\n        if (childTree.value) {\n          f(childName, childTree.value);\n        }\n      }\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathIsEmpty\n} from './util/Path';\nimport { each } from './util/util';\n\n/**\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\n * to reflect the write added.\n */\nexport class CompoundWrite {\n  constructor(public writeTree_: ImmutableTree<Node>) {}\n\n  static empty(): CompoundWrite {\n    return new CompoundWrite(new ImmutableTree(null));\n  }\n}\n\nexport function compoundWriteAddWrite(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  node: Node\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return new CompoundWrite(new ImmutableTree(node));\n  } else {\n    const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n    if (rootmost != null) {\n      const rootMostPath = rootmost.path;\n      let value = rootmost.value;\n      const relativePath = newRelativePath(rootMostPath, path);\n      value = value.updateChild(relativePath, node);\n      return new CompoundWrite(\n        compoundWrite.writeTree_.set(rootMostPath, value)\n      );\n    } else {\n      const subtree = new ImmutableTree(node);\n      const newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\n      return new CompoundWrite(newWriteTree);\n    }\n  }\n}\n\nexport function compoundWriteAddWrites(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  updates: { [name: string]: Node }\n): CompoundWrite {\n  let newWrite = compoundWrite;\n  each(updates, (childKey: string, node: Node) => {\n    newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\n  });\n  return newWrite;\n}\n\n/**\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\n * location, which must be removed by calling this method with that path.\n *\n * @param compoundWrite - The CompoundWrite to remove.\n * @param path - The path at which a write and all deeper writes should be removed\n * @returns The new CompoundWrite with the removed path\n */\nexport function compoundWriteRemoveWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return CompoundWrite.empty();\n  } else {\n    const newWriteTree = compoundWrite.writeTree_.setTree(\n      path,\n      new ImmutableTree<Node>(null)\n    );\n    return new CompoundWrite(newWriteTree);\n  }\n}\n\n/**\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\n * considered \"complete\".\n *\n * @param compoundWrite - The CompoundWrite to check.\n * @param path - The path to check for\n * @returns Whether there is a complete write at that path\n */\nexport function compoundWriteHasCompleteWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): boolean {\n  return compoundWriteGetCompleteNode(compoundWrite, path) != null;\n}\n\n/**\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\n * writes from deeper paths, but will return child nodes from a more shallow path.\n *\n * @param compoundWrite - The CompoundWrite to get the node from.\n * @param path - The path to get a complete write\n * @returns The node if complete at that path, or null otherwise.\n */\nexport function compoundWriteGetCompleteNode(\n  compoundWrite: CompoundWrite,\n  path: Path\n): Node | null {\n  const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n  if (rootmost != null) {\n    return compoundWrite.writeTree_\n      .get(rootmost.path)\n      .getChild(newRelativePath(rootmost.path, path));\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns all children that are guaranteed to be a complete overwrite.\n *\n * @param compoundWrite - The CompoundWrite to get children from.\n * @returns A list of all complete children.\n */\nexport function compoundWriteGetCompleteChildren(\n  compoundWrite: CompoundWrite\n): NamedNode[] {\n  const children: NamedNode[] = [];\n  const node = compoundWrite.writeTree_.value;\n  if (node != null) {\n    // If it's a leaf node, it has no children; so nothing to do.\n    if (!node.isLeafNode()) {\n      (node as ChildrenNode).forEachChild(\n        PRIORITY_INDEX,\n        (childName, childNode) => {\n          children.push(new NamedNode(childName, childNode));\n        }\n      );\n    }\n  } else {\n    compoundWrite.writeTree_.children.inorderTraversal(\n      (childName, childTree) => {\n        if (childTree.value != null) {\n          children.push(new NamedNode(childName, childTree.value));\n        }\n      }\n    );\n  }\n  return children;\n}\n\nexport function compoundWriteChildCompoundWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return compoundWrite;\n  } else {\n    const shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\n    if (shadowingNode != null) {\n      return new CompoundWrite(new ImmutableTree(shadowingNode));\n    } else {\n      return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\n    }\n  }\n}\n\n/**\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\n * @returns Whether this CompoundWrite is empty\n */\nexport function compoundWriteIsEmpty(compoundWrite: CompoundWrite): boolean {\n  return compoundWrite.writeTree_.isEmpty();\n}\n\n/**\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\n * node\n * @param node - The node to apply this CompoundWrite to\n * @returns The node with all writes applied\n */\nexport function compoundWriteApply(\n  compoundWrite: CompoundWrite,\n  node: Node\n): Node {\n  return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\n}\n\nfunction applySubtreeWrite(\n  relativePath: Path,\n  writeTree: ImmutableTree<Node>,\n  node: Node\n): Node {\n  if (writeTree.value != null) {\n    // Since there a write is always a leaf, we're done here\n    return node.updateChild(relativePath, writeTree.value);\n  } else {\n    let priorityWrite = null;\n    writeTree.children.inorderTraversal((childKey, childTree) => {\n      if (childKey === '.priority') {\n        // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n        // to apply priorities to empty nodes that are later filled\n        assert(\n          childTree.value !== null,\n          'Priority writes must always be leaf nodes'\n        );\n        priorityWrite = childTree.value;\n      } else {\n        node = applySubtreeWrite(\n          pathChild(relativePath, childKey),\n          childTree,\n          node\n        );\n      }\n    });\n    // If there was a priority write, we only apply it if the node is not empty\n    if (!node.getChild(relativePath).isEmpty() && priorityWrite !== null) {\n      node = node.updateChild(\n        pathChild(relativePath, '.priority'),\n        priorityWrite\n      );\n    }\n    return node;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError, safeGet } from '@firebase/util';\n\nimport {\n  CompoundWrite,\n  compoundWriteAddWrite,\n  compoundWriteAddWrites,\n  compoundWriteApply,\n  compoundWriteChildCompoundWrite,\n  compoundWriteGetCompleteChildren,\n  compoundWriteGetCompleteNode,\n  compoundWriteHasCompleteWrite,\n  compoundWriteIsEmpty,\n  compoundWriteRemoveWrite\n} from './CompoundWrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Index } from './snap/indexes/Index';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathContains,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './util/Path';\nimport { each } from './util/util';\nimport { CacheNode } from './view/CacheNode';\n\n/**\n * Defines a single user-initiated write operation. May be the result of a set(), transaction(), or update() call. In\n * the case of a set() or transaction, snap wil be non-null.  In the case of an update(), children will be non-null.\n */\nexport interface WriteRecord {\n  writeId: number;\n  path: Path;\n  snap?: Node | null;\n  children?: { [k: string]: Node } | null;\n  visible: boolean;\n}\n\n/**\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\n *\n */\nexport function writeTreeChildWrites(\n  writeTree: WriteTree,\n  path: Path\n): WriteTreeRef {\n  return newWriteTreeRef(path, writeTree);\n}\n\n/**\n * Record a new overwrite from user code.\n *\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\n */\nexport function writeTreeAddOverwrite(\n  writeTree: WriteTree,\n  path: Path,\n  snap: Node,\n  writeId: number,\n  visible?: boolean\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older write on top of newer ones'\n  );\n  if (visible === undefined) {\n    visible = true;\n  }\n  writeTree.allWrites.push({\n    path,\n    snap,\n    writeId,\n    visible\n  });\n\n  if (visible) {\n    writeTree.visibleWrites = compoundWriteAddWrite(\n      writeTree.visibleWrites,\n      path,\n      snap\n    );\n  }\n  writeTree.lastWriteId = writeId;\n}\n\n/**\n * Record a new merge from user code.\n */\nexport function writeTreeAddMerge(\n  writeTree: WriteTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older merge on top of newer ones'\n  );\n  writeTree.allWrites.push({\n    path,\n    children: changedChildren,\n    writeId,\n    visible: true\n  });\n\n  writeTree.visibleWrites = compoundWriteAddWrites(\n    writeTree.visibleWrites,\n    path,\n    changedChildren\n  );\n  writeTree.lastWriteId = writeId;\n}\n\nexport function writeTreeGetWrite(\n  writeTree: WriteTree,\n  writeId: number\n): WriteRecord | null {\n  for (let i = 0; i < writeTree.allWrites.length; i++) {\n    const record = writeTree.allWrites[i];\n    if (record.writeId === writeId) {\n      return record;\n    }\n  }\n  return null;\n}\n\n/**\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\n *\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\n * events as a result).\n */\nexport function writeTreeRemoveWrite(\n  writeTree: WriteTree,\n  writeId: number\n): boolean {\n  // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n  // out of order.\n  //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n  //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n\n  const idx = writeTree.allWrites.findIndex(s => {\n    return s.writeId === writeId;\n  });\n  assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n  const writeToRemove = writeTree.allWrites[idx];\n  writeTree.allWrites.splice(idx, 1);\n\n  let removedWriteWasVisible = writeToRemove.visible;\n  let removedWriteOverlapsWithOtherWrites = false;\n\n  let i = writeTree.allWrites.length - 1;\n\n  while (removedWriteWasVisible && i >= 0) {\n    const currentWrite = writeTree.allWrites[i];\n    if (currentWrite.visible) {\n      if (\n        i >= idx &&\n        writeTreeRecordContainsPath_(currentWrite, writeToRemove.path)\n      ) {\n        // The removed write was completely shadowed by a subsequent write.\n        removedWriteWasVisible = false;\n      } else if (pathContains(writeToRemove.path, currentWrite.path)) {\n        // Either we're covering some writes or they're covering part of us (depending on which came first).\n        removedWriteOverlapsWithOtherWrites = true;\n      }\n    }\n    i--;\n  }\n\n  if (!removedWriteWasVisible) {\n    return false;\n  } else if (removedWriteOverlapsWithOtherWrites) {\n    // There's some shadowing going on. Just rebuild the visible writes from scratch.\n    writeTreeResetTree_(writeTree);\n    return true;\n  } else {\n    // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n    if (writeToRemove.snap) {\n      writeTree.visibleWrites = compoundWriteRemoveWrite(\n        writeTree.visibleWrites,\n        writeToRemove.path\n      );\n    } else {\n      const children = writeToRemove.children;\n      each(children, (childName: string) => {\n        writeTree.visibleWrites = compoundWriteRemoveWrite(\n          writeTree.visibleWrites,\n          pathChild(writeToRemove.path, childName)\n        );\n      });\n    }\n    return true;\n  }\n}\n\nfunction writeTreeRecordContainsPath_(\n  writeRecord: WriteRecord,\n  path: Path\n): boolean {\n  if (writeRecord.snap) {\n    return pathContains(writeRecord.path, path);\n  } else {\n    for (const childName in writeRecord.children) {\n      if (\n        writeRecord.children.hasOwnProperty(childName) &&\n        pathContains(pathChild(writeRecord.path, childName), path)\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n/**\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\n */\nfunction writeTreeResetTree_(writeTree: WriteTree) {\n  writeTree.visibleWrites = writeTreeLayerTree_(\n    writeTree.allWrites,\n    writeTreeDefaultFilter_,\n    newEmptyPath()\n  );\n  if (writeTree.allWrites.length > 0) {\n    writeTree.lastWriteId =\n      writeTree.allWrites[writeTree.allWrites.length - 1].writeId;\n  } else {\n    writeTree.lastWriteId = -1;\n  }\n}\n\n/**\n * The default filter used when constructing the tree. Keep everything that's visible.\n */\nfunction writeTreeDefaultFilter_(write: WriteRecord) {\n  return write.visible;\n}\n\n/**\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\n * event data at that path.\n */\nfunction writeTreeLayerTree_(\n  writes: WriteRecord[],\n  filter: (w: WriteRecord) => boolean,\n  treeRoot: Path\n): CompoundWrite {\n  let compoundWrite = CompoundWrite.empty();\n  for (let i = 0; i < writes.length; ++i) {\n    const write = writes[i];\n    // Theory, a later set will either:\n    // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n    // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n    if (filter(write)) {\n      const writePath = write.path;\n      let relativePath: Path;\n      if (write.snap) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            relativePath,\n            write.snap\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            newEmptyPath(),\n            write.snap.getChild(relativePath)\n          );\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else if (write.children) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrites(\n            compoundWrite,\n            relativePath,\n            write.children\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          if (pathIsEmpty(relativePath)) {\n            compoundWrite = compoundWriteAddWrites(\n              compoundWrite,\n              newEmptyPath(),\n              write.children\n            );\n          } else {\n            const child = safeGet(write.children, pathGetFront(relativePath));\n            if (child) {\n              // There exists a child in this node that matches the root path\n              const deepNode = child.getChild(pathPopFront(relativePath));\n              compoundWrite = compoundWriteAddWrite(\n                compoundWrite,\n                newEmptyPath(),\n                deepNode\n              );\n            }\n          }\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else {\n        throw assertionError('WriteRecord should have .snap or .children');\n      }\n    }\n  }\n  return compoundWrite;\n}\n\n/**\n * Return a complete snapshot for the given path if there's visible write data at that path, else null.\n * No server data is considered.\n *\n */\nexport function writeTreeGetCompleteWriteData(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\n * writes), attempt to calculate a complete snapshot for the given path\n *\n * @param writeIdsToExclude - An optional set to be excluded\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeCalcCompleteEventCache(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  if (!writeIdsToExclude && !includeHiddenWrites) {\n    const shadowingNode = compoundWriteGetCompleteNode(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (shadowingNode != null) {\n      return shadowingNode;\n    } else {\n      const subMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        treePath\n      );\n      if (compoundWriteIsEmpty(subMerge)) {\n        return completeServerCache;\n      } else if (\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())\n      ) {\n        // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n        return null;\n      } else {\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(subMerge, layeredCache);\n      }\n    }\n  } else {\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\n      return completeServerCache;\n    } else {\n      // If the server cache is null, and we don't have a complete cache, we need to return null\n      if (\n        !includeHiddenWrites &&\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(merge, newEmptyPath())\n      ) {\n        return null;\n      } else {\n        const filter = function (write: WriteRecord) {\n          return (\n            (write.visible || includeHiddenWrites) &&\n            (!writeIdsToExclude ||\n              !~writeIdsToExclude.indexOf(write.writeId)) &&\n            (pathContains(write.path, treePath) ||\n              pathContains(treePath, write.path))\n          );\n        };\n        const mergeAtPath = writeTreeLayerTree_(\n          writeTree.allWrites,\n          filter,\n          treePath\n        );\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(mergeAtPath, layeredCache);\n      }\n    }\n  }\n}\n\n/**\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\n * Used when creating new views, to pre-fill their complete event children snapshot.\n */\nexport function writeTreeCalcCompleteEventChildren(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerChildren: ChildrenNode | null\n) {\n  let completeChildren = ChildrenNode.EMPTY_NODE as Node;\n  const topLevelSet = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    treePath\n  );\n  if (topLevelSet) {\n    if (!topLevelSet.isLeafNode()) {\n      // we're shadowing everything. Return the children.\n      topLevelSet.forEachChild(PRIORITY_INDEX, (childName, childSnap) => {\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          childSnap\n        );\n      });\n    }\n    return completeChildren;\n  } else if (completeServerChildren) {\n    // Layer any children we have on top of this\n    // We know we don't have a top-level set, so just enumerate existing children\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    completeServerChildren.forEachChild(\n      PRIORITY_INDEX,\n      (childName, childNode) => {\n        const node = compoundWriteApply(\n          compoundWriteChildCompoundWrite(merge, new Path(childName)),\n          childNode\n        );\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          node\n        );\n      }\n    );\n    // Add any complete children we have from the set\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  } else {\n    // We don't have anything to layer on top of. Layer on any children we have\n    // Note that we can return an empty snap if we have a defined delete\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  }\n}\n\n/**\n * Given that the underlying server data has updated, determine what, if anything, needs to be\n * applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events\n *\n * Either existingEventSnap or existingServerSnap must exist\n */\nexport function writeTreeCalcEventCacheAfterServerOverwrite(\n  writeTree: WriteTree,\n  treePath: Path,\n  childPath: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  assert(\n    existingEventSnap || existingServerSnap,\n    'Either existingEventSnap or existingServerSnap must exist'\n  );\n  const path = pathChild(treePath, childPath);\n  if (compoundWriteHasCompleteWrite(writeTree.visibleWrites, path)) {\n    // At this point we can probably guarantee that we're in case 2, meaning no events\n    // May need to check visibility while doing the findRootMostValueAndPath call\n    return null;\n  } else {\n    // No complete shadowing. We're either partially shadowing or not shadowing at all.\n    const childMerge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      path\n    );\n    if (compoundWriteIsEmpty(childMerge)) {\n      // We're not shadowing at all. Case 1\n      return existingServerSnap.getChild(childPath);\n    } else {\n      // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n      // However this is tricky to find out, since user updates don't necessary change the server\n      // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n      // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n      // only check if the updates change the serverNode.\n      // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getChild(childPath)\n      );\n    }\n  }\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeCalcCompleteChild(\n  writeTree: WriteTree,\n  treePath: Path,\n  childKey: string,\n  existingServerSnap: CacheNode\n): Node | null {\n  const path = pathChild(treePath, childKey);\n  const shadowingNode = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    path\n  );\n  if (shadowingNode != null) {\n    return shadowingNode;\n  } else {\n    if (existingServerSnap.isCompleteForChild(childKey)) {\n      const childMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        path\n      );\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getNode().getImmediateChild(childKey)\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n */\nexport function writeTreeShadowingWrite(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window.\n */\nexport function writeTreeCalcIndexedSlice(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  let toIterate: Node;\n  const merge = compoundWriteChildCompoundWrite(\n    writeTree.visibleWrites,\n    treePath\n  );\n  const shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\n  if (shadowingNode != null) {\n    toIterate = shadowingNode;\n  } else if (completeServerData != null) {\n    toIterate = compoundWriteApply(merge, completeServerData);\n  } else {\n    // no children to iterate on\n    return [];\n  }\n  toIterate = toIterate.withIndex(index);\n  if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n    const nodes = [];\n    const cmp = index.getCompare();\n    const iter = reverse\n      ? (toIterate as ChildrenNode).getReverseIteratorFrom(startPost, index)\n      : (toIterate as ChildrenNode).getIteratorFrom(startPost, index);\n    let next = iter.getNext();\n    while (next && nodes.length < count) {\n      if (cmp(next, startPost) !== 0) {\n        nodes.push(next);\n      }\n      next = iter.getNext();\n    }\n    return nodes;\n  } else {\n    return [];\n  }\n}\n\nexport function newWriteTree(): WriteTree {\n  return {\n    visibleWrites: CompoundWrite.empty(),\n    allWrites: [],\n    lastWriteId: -1\n  };\n}\n\n/**\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\n * and addMerge(), and removed with removeWrite().\n */\nexport interface WriteTree {\n  /**\n   * A tree tracking the result of applying all visible writes.  This does not include transactions with\n   * applyLocally=false or writes that are completely shadowed by other writes.\n   */\n  visibleWrites: CompoundWrite;\n\n  /**\n   * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\n   * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\n   * used by transactions).\n   */\n  allWrites: WriteRecord[];\n\n  lastWriteId: number;\n}\n\n/**\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\n * can lead to a more expensive calculation.\n *\n * @param writeIdsToExclude - Optional writes to exclude.\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeRefCalcCompleteEventCache(\n  writeTreeRef: WriteTreeRef,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  return writeTreeCalcCompleteEventCache(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerCache,\n    writeIdsToExclude,\n    includeHiddenWrites\n  );\n}\n\n/**\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\n * mix of the given server data and write data.\n *\n */\nexport function writeTreeRefCalcCompleteEventChildren(\n  writeTreeRef: WriteTreeRef,\n  completeServerChildren: ChildrenNode | null\n): ChildrenNode {\n  return writeTreeCalcCompleteEventChildren(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerChildren\n  ) as ChildrenNode;\n}\n\n/**\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\n * if anything, needs to be applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events should be raised\n *\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\n *\n *\n */\nexport function writeTreeRefCalcEventCacheAfterServerOverwrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  return writeTreeCalcEventCacheAfterServerOverwrite(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    path,\n    existingEventSnap,\n    existingServerSnap\n  );\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n *\n */\nexport function writeTreeRefShadowingWrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path\n): Node | null {\n  return writeTreeShadowingWrite(\n    writeTreeRef.writeTree,\n    pathChild(writeTreeRef.treePath, path)\n  );\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window\n */\nexport function writeTreeRefCalcIndexedSlice(\n  writeTreeRef: WriteTreeRef,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  return writeTreeCalcIndexedSlice(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerData,\n    startPost,\n    count,\n    reverse,\n    index\n  );\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeRefCalcCompleteChild(\n  writeTreeRef: WriteTreeRef,\n  childKey: string,\n  existingServerCache: CacheNode\n): Node | null {\n  return writeTreeCalcCompleteChild(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    childKey,\n    existingServerCache\n  );\n}\n\n/**\n * Return a WriteTreeRef for a child.\n */\nexport function writeTreeRefChild(\n  writeTreeRef: WriteTreeRef,\n  childName: string\n): WriteTreeRef {\n  return newWriteTreeRef(\n    pathChild(writeTreeRef.treePath, childName),\n    writeTreeRef.writeTree\n  );\n}\n\nexport function newWriteTreeRef(\n  path: Path,\n  writeTree: WriteTree\n): WriteTreeRef {\n  return {\n    treePath: path,\n    writeTree\n  };\n}\n\n/**\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\n * just proxy to the underlying WriteTree.\n *\n */\nexport interface WriteTreeRef {\n  /**\n   * The path to this particular write tree ref. Used for calling methods on writeTree_ while exposing a simpler\n   * interface to callers.\n   */\n  readonly treePath: Path;\n\n  /**\n   * * A reference to the actual tree of write data. All methods are pass-through to the tree, but with the appropriate\n   * path prefixed.\n   *\n   * This lets us make cheap references to points in the tree for sync points without having to copy and maintain all of\n   * the data.\n   */\n  readonly writeTree: WriteTree;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport {\n  Change,\n  ChangeType,\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from './Change';\n\nexport class ChildChangeAccumulator {\n  private readonly changeMap: Map<string, Change> = new Map();\n\n  trackChildChange(change: Change) {\n    const type = change.type;\n    const childKey = change.childName!;\n    assert(\n      type === ChangeType.CHILD_ADDED ||\n        type === ChangeType.CHILD_CHANGED ||\n        type === ChangeType.CHILD_REMOVED,\n      'Only child changes supported for tracking'\n    );\n    assert(\n      childKey !== '.priority',\n      'Only non-priority child changes can be tracked.'\n    );\n    const oldChange = this.changeMap.get(childKey);\n    if (oldChange) {\n      const oldType = oldChange.type;\n      if (\n        type === ChangeType.CHILD_ADDED &&\n        oldType === ChangeType.CHILD_REMOVED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildChanged(\n            childKey,\n            change.snapshotNode,\n            oldChange.snapshotNode\n          )\n        );\n      } else if (\n        type === ChangeType.CHILD_REMOVED &&\n        oldType === ChangeType.CHILD_ADDED\n      ) {\n        this.changeMap.delete(childKey);\n      } else if (\n        type === ChangeType.CHILD_REMOVED &&\n        oldType === ChangeType.CHILD_CHANGED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildRemoved(childKey, oldChange.oldSnap)\n        );\n      } else if (\n        type === ChangeType.CHILD_CHANGED &&\n        oldType === ChangeType.CHILD_ADDED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildAdded(childKey, change.snapshotNode)\n        );\n      } else if (\n        type === ChangeType.CHILD_CHANGED &&\n        oldType === ChangeType.CHILD_CHANGED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildChanged(childKey, change.snapshotNode, oldChange.oldSnap)\n        );\n      } else {\n        throw assertionError(\n          'Illegal combination of changes: ' +\n            change +\n            ' occurred after ' +\n            oldChange\n        );\n      }\n    } else {\n      this.changeMap.set(childKey, change);\n    }\n  }\n\n  getChanges(): Change[] {\n    return Array.from(this.changeMap.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Index } from '../snap/indexes/Index';\nimport { NamedNode, Node } from '../snap/Node';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcIndexedSlice\n} from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { ViewCache, viewCacheGetCompleteServerSnap } from './ViewCache';\n\n/**\n * Since updates to filtered nodes might require nodes to be pulled in from \"outside\" the node, this interface\n * can help to get complete children that can be pulled in.\n * A class implementing this interface takes potentially multiple sources (e.g. user writes, server data from\n * other views etc.) to try it's best to get a complete child that might be useful in pulling into the view.\n *\n * @interface\n */\nexport interface CompleteChildSource {\n  getCompleteChild(childKey: string): Node | null;\n\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null;\n}\n\n/**\n * An implementation of CompleteChildSource that never returns any additional children\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport class NoCompleteChildSource_ implements CompleteChildSource {\n  getCompleteChild(childKey?: string): Node | null {\n    return null;\n  }\n  getChildAfterChild(\n    index?: Index,\n    child?: NamedNode,\n    reverse?: boolean\n  ): NamedNode | null {\n    return null;\n  }\n}\n\n/**\n * Singleton instance.\n */\nexport const NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n\n/**\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\n * old event caches available to calculate complete children.\n */\nexport class WriteTreeCompleteChildSource implements CompleteChildSource {\n  constructor(\n    private writes_: WriteTreeRef,\n    private viewCache_: ViewCache,\n    private optCompleteServerCache_: Node | null = null\n  ) {}\n  getCompleteChild(childKey: string): Node | null {\n    const node = this.viewCache_.eventCache;\n    if (node.isCompleteForChild(childKey)) {\n      return node.getNode().getImmediateChild(childKey);\n    } else {\n      const serverNode =\n        this.optCompleteServerCache_ != null\n          ? new CacheNode(this.optCompleteServerCache_, true, false)\n          : this.viewCache_.serverCache;\n      return writeTreeRefCalcCompleteChild(this.writes_, childKey, serverNode);\n    }\n  }\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null {\n    const completeServerData =\n      this.optCompleteServerCache_ != null\n        ? this.optCompleteServerCache_\n        : viewCacheGetCompleteServerSnap(this.viewCache_);\n    const nodes = writeTreeRefCalcIndexedSlice(\n      this.writes_,\n      completeServerData,\n      child,\n      1,\n      reverse,\n      index\n    );\n    if (nodes.length === 0) {\n      return null;\n    } else {\n      return nodes[0];\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { AckUserWrite } from '../operation/AckUserWrite';\nimport { Merge } from '../operation/Merge';\nimport { Operation, OperationType } from '../operation/Operation';\nimport { Overwrite } from '../operation/Overwrite';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetBack,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathParent,\n  pathPopFront\n} from '../util/Path';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren,\n  writeTreeRefCalcEventCacheAfterServerOverwrite,\n  writeTreeRefShadowingWrite\n} from '../WriteTree';\n\nimport { Change, changeValue } from './Change';\nimport { ChildChangeAccumulator } from './ChildChangeAccumulator';\nimport {\n  CompleteChildSource,\n  NO_COMPLETE_CHILD_SOURCE,\n  WriteTreeCompleteChildSource\n} from './CompleteChildSource';\nimport { NodeFilter } from './filter/NodeFilter';\nimport {\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap,\n  viewCacheUpdateEventSnap,\n  viewCacheUpdateServerSnap\n} from './ViewCache';\n\nexport interface ProcessorResult {\n  readonly viewCache: ViewCache;\n  readonly changes: Change[];\n}\n\nexport interface ViewProcessor {\n  readonly filter: NodeFilter;\n}\n\nexport function newViewProcessor(filter: NodeFilter): ViewProcessor {\n  return { filter };\n}\n\nexport function viewProcessorAssertIndexed(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache\n): void {\n  assert(\n    viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Event snap not indexed'\n  );\n  assert(\n    viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Server snap not indexed'\n  );\n}\n\nexport function viewProcessorApplyOperation(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null\n): ProcessorResult {\n  const accumulator = new ChildChangeAccumulator();\n  let newViewCache, filterServerNode;\n  if (operation.type === OperationType.OVERWRITE) {\n    const overwrite = operation as Overwrite;\n    if (overwrite.source.fromUser) {\n      newViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(overwrite.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered  and the\n      // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n      // again\n      filterServerNode =\n        overwrite.source.tagged ||\n        (oldViewCache.serverCache.isFiltered() && !pathIsEmpty(overwrite.path));\n      newViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.MERGE) {\n    const merge = operation as Merge;\n    if (merge.source.fromUser) {\n      newViewCache = viewProcessorApplyUserMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(merge.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered\n      filterServerNode =\n        merge.source.tagged || oldViewCache.serverCache.isFiltered();\n      newViewCache = viewProcessorApplyServerMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.ACK_USER_WRITE) {\n    const ackUserWrite = operation as AckUserWrite;\n    if (!ackUserWrite.revert) {\n      newViewCache = viewProcessorAckUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        ackUserWrite.affectedTree,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      newViewCache = viewProcessorRevertUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.LISTEN_COMPLETE) {\n    newViewCache = viewProcessorListenComplete(\n      viewProcessor,\n      oldViewCache,\n      operation.path,\n      writesCache,\n      accumulator\n    );\n  } else {\n    throw assertionError('Unknown operation type: ' + operation.type);\n  }\n  const changes = accumulator.getChanges();\n  viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, changes);\n  return { viewCache: newViewCache, changes };\n}\n\nfunction viewProcessorMaybeAddValueEvent(\n  oldViewCache: ViewCache,\n  newViewCache: ViewCache,\n  accumulator: Change[]\n): void {\n  const eventSnap = newViewCache.eventCache;\n  if (eventSnap.isFullyInitialized()) {\n    const isLeafOrEmpty =\n      eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n    const oldCompleteSnap = viewCacheGetCompleteEventSnap(oldViewCache);\n    if (\n      accumulator.length > 0 ||\n      !oldViewCache.eventCache.isFullyInitialized() ||\n      (isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap)) ||\n      !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())\n    ) {\n      accumulator.push(\n        changeValue(viewCacheGetCompleteEventSnap(newViewCache))\n      );\n    }\n  }\n}\n\nfunction viewProcessorGenerateEventCacheAfterServerEvent(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  changePath: Path,\n  writesCache: WriteTreeRef,\n  source: CompleteChildSource,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = viewCache.eventCache;\n  if (writeTreeRefShadowingWrite(writesCache, changePath) != null) {\n    // we have a shadowing write, ignore changes\n    return viewCache;\n  } else {\n    let newEventCache, serverNode;\n    if (pathIsEmpty(changePath)) {\n      // TODO: figure out how this plays with \"sliding ack windows\"\n      assert(\n        viewCache.serverCache.isFullyInitialized(),\n        'If change path is empty, we must have complete server data'\n      );\n      if (viewCache.serverCache.isFiltered()) {\n        // We need to special case this, because we need to only apply writes to complete children, or\n        // we might end up raising events for incomplete children. If the server data is filtered deep\n        // writes cannot be guaranteed to be complete\n        const serverCache = viewCacheGetCompleteServerSnap(viewCache);\n        const completeChildren =\n          serverCache instanceof ChildrenNode\n            ? serverCache\n            : ChildrenNode.EMPTY_NODE;\n        const completeEventChildren = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          completeChildren\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeEventChildren,\n          accumulator\n        );\n      } else {\n        const completeNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeNode,\n          accumulator\n        );\n      }\n    } else {\n      const childKey = pathGetFront(changePath);\n      if (childKey === '.priority') {\n        assert(\n          pathGetLength(changePath) === 1,\n          \"Can't have a priority with additional path components\"\n        );\n        const oldEventNode = oldEventSnap.getNode();\n        serverNode = viewCache.serverCache.getNode();\n        // we might have overwrites for this priority\n        const updatedPriority = writeTreeRefCalcEventCacheAfterServerOverwrite(\n          writesCache,\n          changePath,\n          oldEventNode,\n          serverNode\n        );\n        if (updatedPriority != null) {\n          newEventCache = viewProcessor.filter.updatePriority(\n            oldEventNode,\n            updatedPriority\n          );\n        } else {\n          // priority didn't change, keep old node\n          newEventCache = oldEventSnap.getNode();\n        }\n      } else {\n        const childChangePath = pathPopFront(changePath);\n        // update child\n        let newEventChild;\n        if (oldEventSnap.isCompleteForChild(childKey)) {\n          serverNode = viewCache.serverCache.getNode();\n          const eventChildUpdate =\n            writeTreeRefCalcEventCacheAfterServerOverwrite(\n              writesCache,\n              changePath,\n              oldEventSnap.getNode(),\n              serverNode\n            );\n          if (eventChildUpdate != null) {\n            newEventChild = oldEventSnap\n              .getNode()\n              .getImmediateChild(childKey)\n              .updateChild(childChangePath, eventChildUpdate);\n          } else {\n            // Nothing changed, just keep the old child\n            newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\n          }\n        } else {\n          newEventChild = writeTreeRefCalcCompleteChild(\n            writesCache,\n            childKey,\n            viewCache.serverCache\n          );\n        }\n        if (newEventChild != null) {\n          newEventCache = viewProcessor.filter.updateChild(\n            oldEventSnap.getNode(),\n            childKey,\n            newEventChild,\n            childChangePath,\n            source,\n            accumulator\n          );\n        } else {\n          // no complete child available or no change\n          newEventCache = oldEventSnap.getNode();\n        }\n      }\n    }\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath),\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n\nfunction viewProcessorApplyServerOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerSnap = oldViewCache.serverCache;\n  let newServerCache;\n  const serverFilter = filterServerNode\n    ? viewProcessor.filter\n    : viewProcessor.filter.getIndexedFilter();\n  if (pathIsEmpty(changePath)) {\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      changedSnap,\n      null\n    );\n  } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n    // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n    const newServerNode = oldServerSnap\n      .getNode()\n      .updateChild(changePath, changedSnap);\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      newServerNode,\n      null\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (\n      !oldServerSnap.isCompleteForPath(changePath) &&\n      pathGetLength(changePath) > 1\n    ) {\n      // We don't update incomplete nodes with updates intended for other listeners\n      return oldViewCache;\n    }\n    const childChangePath = pathPopFront(changePath);\n    const childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n    const newChildNode = childNode.updateChild(childChangePath, changedSnap);\n    if (childKey === '.priority') {\n      newServerCache = serverFilter.updatePriority(\n        oldServerSnap.getNode(),\n        newChildNode\n      );\n    } else {\n      newServerCache = serverFilter.updateChild(\n        oldServerSnap.getNode(),\n        childKey,\n        newChildNode,\n        childChangePath,\n        NO_COMPLETE_CHILD_SOURCE,\n        null\n      );\n    }\n  }\n  const newViewCache = viewCacheUpdateServerSnap(\n    oldViewCache,\n    newServerCache,\n    oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath),\n    serverFilter.filtersNodes()\n  );\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    newViewCache,\n    completeCache\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    changePath,\n    writesCache,\n    source,\n    accumulator\n  );\n}\n\nfunction viewProcessorApplyUserOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = oldViewCache.eventCache;\n  let newViewCache, newEventCache;\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    oldViewCache,\n    completeCache\n  );\n  if (pathIsEmpty(changePath)) {\n    newEventCache = viewProcessor.filter.updateFullNode(\n      oldViewCache.eventCache.getNode(),\n      changedSnap,\n      accumulator\n    );\n    newViewCache = viewCacheUpdateEventSnap(\n      oldViewCache,\n      newEventCache,\n      true,\n      viewProcessor.filter.filtersNodes()\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (childKey === '.priority') {\n      newEventCache = viewProcessor.filter.updatePriority(\n        oldViewCache.eventCache.getNode(),\n        changedSnap\n      );\n      newViewCache = viewCacheUpdateEventSnap(\n        oldViewCache,\n        newEventCache,\n        oldEventSnap.isFullyInitialized(),\n        oldEventSnap.isFiltered()\n      );\n    } else {\n      const childChangePath = pathPopFront(changePath);\n      const oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n      let newChild;\n      if (pathIsEmpty(childChangePath)) {\n        // Child overwrite, we can replace the child\n        newChild = changedSnap;\n      } else {\n        const childNode = source.getCompleteChild(childKey);\n        if (childNode != null) {\n          if (\n            pathGetBack(childChangePath) === '.priority' &&\n            childNode.getChild(pathParent(childChangePath)).isEmpty()\n          ) {\n            // This is a priority update on an empty node. If this node exists on the server, the\n            // server will send down the priority in the update, so ignore for now\n            newChild = childNode;\n          } else {\n            newChild = childNode.updateChild(childChangePath, changedSnap);\n          }\n        } else {\n          // There is no complete child node available\n          newChild = ChildrenNode.EMPTY_NODE;\n        }\n      }\n      if (!oldChild.equals(newChild)) {\n        const newEventSnap = viewProcessor.filter.updateChild(\n          oldEventSnap.getNode(),\n          childKey,\n          newChild,\n          childChangePath,\n          source,\n          accumulator\n        );\n        newViewCache = viewCacheUpdateEventSnap(\n          oldViewCache,\n          newEventSnap,\n          oldEventSnap.isFullyInitialized(),\n          viewProcessor.filter.filtersNodes()\n        );\n      } else {\n        newViewCache = oldViewCache;\n      }\n    }\n  }\n  return newViewCache;\n}\n\nfunction viewProcessorCacheHasChild(\n  viewCache: ViewCache,\n  childKey: string\n): boolean {\n  return viewCache.eventCache.isCompleteForChild(childKey);\n}\n\nfunction viewProcessorApplyUserMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (!viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorApplyMerge(\n  viewProcessor: ViewProcessor,\n  node: Node,\n  merge: ImmutableTree<Node>\n): Node {\n  merge.foreach((relativePath, childNode) => {\n    node = node.updateChild(relativePath, childNode);\n  });\n  return node;\n}\n\nfunction viewProcessorApplyServerMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n  // wait for the complete data update coming soon.\n  if (\n    viewCache.serverCache.getNode().isEmpty() &&\n    !viewCache.serverCache.isFullyInitialized()\n  ) {\n    return viewCache;\n  }\n\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  let viewMergeTree: ImmutableTree<Node>;\n  if (pathIsEmpty(path)) {\n    viewMergeTree = changedChildren;\n  } else {\n    viewMergeTree = new ImmutableTree<Node>(null).setTree(\n      path,\n      changedChildren\n    );\n  }\n  const serverNode = viewCache.serverCache.getNode();\n  viewMergeTree.children.inorderTraversal((childKey, childTree) => {\n    if (serverNode.hasChild(childKey)) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n  viewMergeTree.children.inorderTraversal((childKey, childMergeTree) => {\n    const isUnknownDeepMerge =\n      !viewCache.serverCache.isCompleteForChild(childKey) &&\n      childMergeTree.value === null;\n    if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childMergeTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorAckUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  ackPath: Path,\n  affectedTree: ImmutableTree<boolean>,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  if (writeTreeRefShadowingWrite(writesCache, ackPath) != null) {\n    return viewCache;\n  }\n\n  // Only filter server node if it is currently filtered\n  const filterServerNode = viewCache.serverCache.isFiltered();\n\n  // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n  // now that it won't be shadowed.\n  const serverCache = viewCache.serverCache;\n  if (affectedTree.value != null) {\n    // This is an overwrite.\n    if (\n      (pathIsEmpty(ackPath) && serverCache.isFullyInitialized()) ||\n      serverCache.isCompleteForPath(ackPath)\n    ) {\n      return viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        serverCache.getNode().getChild(ackPath),\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else if (pathIsEmpty(ackPath)) {\n      // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n      // should just re-apply whatever we have in our cache as a merge.\n      let changedChildren = new ImmutableTree<Node>(null);\n      serverCache.getNode().forEachChild(KEY_INDEX, (name, node) => {\n        changedChildren = changedChildren.set(new Path(name), node);\n      });\n      return viewProcessorApplyServerMerge(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        changedChildren,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else {\n      return viewCache;\n    }\n  } else {\n    // This is a merge.\n    let changedChildren = new ImmutableTree<Node>(null);\n    affectedTree.foreach((mergePath, value) => {\n      const serverCachePath = pathChild(ackPath, mergePath);\n      if (serverCache.isCompleteForPath(serverCachePath)) {\n        changedChildren = changedChildren.set(\n          mergePath,\n          serverCache.getNode().getChild(serverCachePath)\n        );\n      }\n    });\n    return viewProcessorApplyServerMerge(\n      viewProcessor,\n      viewCache,\n      ackPath,\n      changedChildren,\n      writesCache,\n      completeCache,\n      filterServerNode,\n      accumulator\n    );\n  }\n}\n\nfunction viewProcessorListenComplete(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerNode = viewCache.serverCache;\n  const newViewCache = viewCacheUpdateServerSnap(\n    viewCache,\n    oldServerNode.getNode(),\n    oldServerNode.isFullyInitialized() || pathIsEmpty(path),\n    oldServerNode.isFiltered()\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    path,\n    writesCache,\n    NO_COMPLETE_CHILD_SOURCE,\n    accumulator\n  );\n}\n\nfunction viewProcessorRevertUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  let complete;\n  if (writeTreeRefShadowingWrite(writesCache, path) != null) {\n    return viewCache;\n  } else {\n    const source = new WriteTreeCompleteChildSource(\n      writesCache,\n      viewCache,\n      completeServerCache\n    );\n    const oldEventCache = viewCache.eventCache.getNode();\n    let newEventCache;\n    if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\n      let newNode;\n      if (viewCache.serverCache.isFullyInitialized()) {\n        newNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n      } else {\n        const serverChildren = viewCache.serverCache.getNode();\n        assert(\n          serverChildren instanceof ChildrenNode,\n          'serverChildren would be complete if leaf node'\n        );\n        newNode = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          serverChildren as ChildrenNode\n        );\n      }\n      newNode = newNode as Node;\n      newEventCache = viewProcessor.filter.updateFullNode(\n        oldEventCache,\n        newNode,\n        accumulator\n      );\n    } else {\n      const childKey = pathGetFront(path);\n      let newChild = writeTreeRefCalcCompleteChild(\n        writesCache,\n        childKey,\n        viewCache.serverCache\n      );\n      if (\n        newChild == null &&\n        viewCache.serverCache.isCompleteForChild(childKey)\n      ) {\n        newChild = oldEventCache.getImmediateChild(childKey);\n      }\n      if (newChild != null) {\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          newChild,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else if (viewCache.eventCache.getNode().hasChild(childKey)) {\n        // No complete child available, delete the existing one, if any\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          ChildrenNode.EMPTY_NODE,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else {\n        newEventCache = oldEventCache;\n      }\n      if (\n        newEventCache.isEmpty() &&\n        viewCache.serverCache.isFullyInitialized()\n      ) {\n        // We might have reverted all child writes. Maybe the old event was a leaf node\n        complete = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        if (complete.isLeafNode()) {\n          newEventCache = viewProcessor.filter.updateFullNode(\n            newEventCache,\n            complete,\n            accumulator\n          );\n        }\n      }\n    }\n    complete =\n      viewCache.serverCache.isFullyInitialized() ||\n      writeTreeRefShadowingWrite(writesCache, newEmptyPath()) != null;\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      complete,\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Operation, OperationType } from '../operation/Operation';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\nimport { WriteTreeRef } from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { Change, changeChildAdded, changeValue } from './Change';\nimport { CancelEvent, Event } from './Event';\nimport {\n  EventGenerator,\n  eventGeneratorGenerateEventsForChanges\n} from './EventGenerator';\nimport { EventRegistration, QueryContext } from './EventRegistration';\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { queryParamsGetNodeFilter } from './QueryParams';\nimport {\n  newViewCache,\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap\n} from './ViewCache';\nimport {\n  newViewProcessor,\n  ViewProcessor,\n  viewProcessorApplyOperation,\n  viewProcessorAssertIndexed\n} from './ViewProcessor';\n\n/**\n * A view represents a specific location and query that has 1 or more event registrations.\n *\n * It does several things:\n *  - Maintains the list of event registrations for this location/query.\n *  - Maintains a cache of the data visible for this location/query.\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\n *    registrations returns the set of events to be raised.\n */\nexport class View {\n  processor_: ViewProcessor;\n  viewCache_: ViewCache;\n  eventRegistrations_: EventRegistration[] = [];\n  eventGenerator_: EventGenerator;\n\n  constructor(private query_: QueryContext, initialViewCache: ViewCache) {\n    const params = this.query_._queryParams;\n\n    const indexFilter = new IndexedFilter(params.getIndex());\n    const filter = queryParamsGetNodeFilter(params);\n\n    this.processor_ = newViewProcessor(filter);\n\n    const initialServerCache = initialViewCache.serverCache;\n    const initialEventCache = initialViewCache.eventCache;\n\n    // Don't filter server node with other filter than index, wait for tagged listen\n    const serverSnap = indexFilter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialServerCache.getNode(),\n      null\n    );\n    const eventSnap = filter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialEventCache.getNode(),\n      null\n    );\n    const newServerCache = new CacheNode(\n      serverSnap,\n      initialServerCache.isFullyInitialized(),\n      indexFilter.filtersNodes()\n    );\n    const newEventCache = new CacheNode(\n      eventSnap,\n      initialEventCache.isFullyInitialized(),\n      filter.filtersNodes()\n    );\n\n    this.viewCache_ = newViewCache(newEventCache, newServerCache);\n    this.eventGenerator_ = new EventGenerator(this.query_);\n  }\n\n  get query(): QueryContext {\n    return this.query_;\n  }\n}\n\nexport function viewGetServerCache(view: View): Node | null {\n  return view.viewCache_.serverCache.getNode();\n}\n\nexport function viewGetCompleteNode(view: View): Node | null {\n  return viewCacheGetCompleteEventSnap(view.viewCache_);\n}\n\nexport function viewGetCompleteServerCache(\n  view: View,\n  path: Path\n): Node | null {\n  const cache = viewCacheGetCompleteServerSnap(view.viewCache_);\n  if (cache) {\n    // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n    // we need to see if it contains the child we're interested in.\n    if (\n      view.query._queryParams.loadsAllData() ||\n      (!pathIsEmpty(path) &&\n        !cache.getImmediateChild(pathGetFront(path)).isEmpty())\n    ) {\n      return cache.getChild(path);\n    }\n  }\n  return null;\n}\n\nexport function viewIsEmpty(view: View): boolean {\n  return view.eventRegistrations_.length === 0;\n}\n\nexport function viewAddEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration\n) {\n  view.eventRegistrations_.push(eventRegistration);\n}\n\n/**\n * @param eventRegistration - If null, remove all callbacks.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns Cancel events, if cancelError was provided.\n */\nexport function viewRemoveEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): Event[] {\n  const cancelEvents: CancelEvent[] = [];\n  if (cancelError) {\n    assert(\n      eventRegistration == null,\n      'A cancel should cancel all event registrations.'\n    );\n    const path = view.query._path;\n    view.eventRegistrations_.forEach(registration => {\n      const maybeEvent = registration.createCancelEvent(cancelError, path);\n      if (maybeEvent) {\n        cancelEvents.push(maybeEvent);\n      }\n    });\n  }\n\n  if (eventRegistration) {\n    let remaining = [];\n    for (let i = 0; i < view.eventRegistrations_.length; ++i) {\n      const existing = view.eventRegistrations_[i];\n      if (!existing.matches(eventRegistration)) {\n        remaining.push(existing);\n      } else if (eventRegistration.hasAnyCallback()) {\n        // We're removing just this one\n        remaining = remaining.concat(view.eventRegistrations_.slice(i + 1));\n        break;\n      }\n    }\n    view.eventRegistrations_ = remaining;\n  } else {\n    view.eventRegistrations_ = [];\n  }\n  return cancelEvents;\n}\n\n/**\n * Applies the given Operation, updates our cache, and returns the appropriate events.\n */\nexport function viewApplyOperation(\n  view: View,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null\n): Event[] {\n  if (\n    operation.type === OperationType.MERGE &&\n    operation.source.queryId !== null\n  ) {\n    assert(\n      viewCacheGetCompleteServerSnap(view.viewCache_),\n      'We should always have a full cache before handling merges'\n    );\n    assert(\n      viewCacheGetCompleteEventSnap(view.viewCache_),\n      'Missing event cache, even though we have a server cache'\n    );\n  }\n\n  const oldViewCache = view.viewCache_;\n  const result = viewProcessorApplyOperation(\n    view.processor_,\n    oldViewCache,\n    operation,\n    writesCache,\n    completeServerCache\n  );\n  viewProcessorAssertIndexed(view.processor_, result.viewCache);\n\n  assert(\n    result.viewCache.serverCache.isFullyInitialized() ||\n      !oldViewCache.serverCache.isFullyInitialized(),\n    'Once a server snap is complete, it should never go back'\n  );\n\n  view.viewCache_ = result.viewCache;\n\n  return viewGenerateEventsForChanges_(\n    view,\n    result.changes,\n    result.viewCache.eventCache.getNode(),\n    null\n  );\n}\n\nexport function viewGetInitialEvents(\n  view: View,\n  registration: EventRegistration\n): Event[] {\n  const eventSnap = view.viewCache_.eventCache;\n  const initialChanges: Change[] = [];\n  if (!eventSnap.getNode().isLeafNode()) {\n    const eventNode = eventSnap.getNode() as ChildrenNode;\n    eventNode.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      initialChanges.push(changeChildAdded(key, childNode));\n    });\n  }\n  if (eventSnap.isFullyInitialized()) {\n    initialChanges.push(changeValue(eventSnap.getNode()));\n  }\n  return viewGenerateEventsForChanges_(\n    view,\n    initialChanges,\n    eventSnap.getNode(),\n    registration\n  );\n}\n\nfunction viewGenerateEventsForChanges_(\n  view: View,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistration?: EventRegistration\n): Event[] {\n  const registrations = eventRegistration\n    ? [eventRegistration]\n    : view.eventRegistrations_;\n  return eventGeneratorGenerateEventsForChanges(\n    view.eventGenerator_,\n    changes,\n    eventCache,\n    registrations\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ReferenceConstructor } from '../api/Reference';\n\nimport { Operation } from './operation/Operation';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\nimport {\n  View,\n  viewAddEventRegistration,\n  viewApplyOperation,\n  viewGetCompleteServerCache,\n  viewGetInitialEvents,\n  viewIsEmpty,\n  viewRemoveEventRegistration\n} from './view/View';\nimport { newViewCache } from './view/ViewCache';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\n/**\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\n * and user writes (set, transaction, update).\n *\n * It's responsible for:\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\n *    applyUserOverwrite, etc.)\n */\nexport class SyncPoint {\n  /**\n   * The Views being tracked at this location in the tree, stored as a map where the key is a\n   * queryId and the value is the View for that query.\n   *\n   * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\n   */\n  readonly views: Map<string, View> = new Map();\n}\n\nexport function syncPointSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncPointGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport function syncPointIsEmpty(syncPoint: SyncPoint): boolean {\n  return syncPoint.views.size === 0;\n}\n\nexport function syncPointApplyOperation(\n  syncPoint: SyncPoint,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  optCompleteServerCache: Node | null\n): Event[] {\n  const queryId = operation.source.queryId;\n  if (queryId !== null) {\n    const view = syncPoint.views.get(queryId);\n    assert(view != null, 'SyncTree gave us an op for an invalid query.');\n    return viewApplyOperation(\n      view,\n      operation,\n      writesCache,\n      optCompleteServerCache\n    );\n  } else {\n    let events: Event[] = [];\n\n    for (const view of syncPoint.views.values()) {\n      events = events.concat(\n        viewApplyOperation(view, operation, writesCache, optCompleteServerCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Get a view for the specified query.\n *\n * @param query - The query to return a view for\n * @param writesCache\n * @param serverCache\n * @param serverCacheComplete\n * @returns Events to raise.\n */\nexport function syncPointGetView(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): View {\n  const queryId = query._queryIdentifier;\n  const view = syncPoint.views.get(queryId);\n  if (!view) {\n    // TODO: make writesCache take flag for complete server node\n    let eventCache = writeTreeRefCalcCompleteEventCache(\n      writesCache,\n      serverCacheComplete ? serverCache : null\n    );\n    let eventCacheComplete = false;\n    if (eventCache) {\n      eventCacheComplete = true;\n    } else if (serverCache instanceof ChildrenNode) {\n      eventCache = writeTreeRefCalcCompleteEventChildren(\n        writesCache,\n        serverCache\n      );\n      eventCacheComplete = false;\n    } else {\n      eventCache = ChildrenNode.EMPTY_NODE;\n      eventCacheComplete = false;\n    }\n    const viewCache = newViewCache(\n      new CacheNode(eventCache, eventCacheComplete, false),\n      new CacheNode(serverCache, serverCacheComplete, false)\n    );\n    return new View(query, viewCache);\n  }\n  return view;\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @param query\n * @param eventRegistration\n * @param writesCache\n * @param serverCache - Complete server cache, if we have it.\n * @param serverCacheComplete\n * @returns Events to raise.\n */\nexport function syncPointAddEventRegistration(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  eventRegistration: EventRegistration,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): Event[] {\n  const view = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!syncPoint.views.has(query._queryIdentifier)) {\n    syncPoint.views.set(query._queryIdentifier, view);\n  }\n  // This is guaranteed to exist now, we just created anything that was missing\n  viewAddEventRegistration(view, eventRegistration);\n  return viewGetInitialEvents(view, eventRegistration);\n}\n\n/**\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\n *\n * If query is the default query, we'll check all views for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\n *\n * @param eventRegistration - If null, remove all callbacks.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns removed queries and any cancel events\n */\nexport function syncPointRemoveEventRegistration(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): { removed: QueryContext[]; events: Event[] } {\n  const queryId = query._queryIdentifier;\n  const removed: QueryContext[] = [];\n  let cancelEvents: Event[] = [];\n  const hadCompleteView = syncPointHasCompleteView(syncPoint);\n  if (queryId === 'default') {\n    // When you do ref.off(...), we search all views for the registration to remove.\n    for (const [viewQueryId, view] of syncPoint.views.entries()) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(viewQueryId);\n\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  } else {\n    // remove the callback from the specific view.\n    const view = syncPoint.views.get(queryId);\n    if (view) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(queryId);\n\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  }\n\n  if (hadCompleteView && !syncPointHasCompleteView(syncPoint)) {\n    // We removed our last complete view.\n    removed.push(\n      new (syncPointGetReferenceConstructor())(query._repo, query._path)\n    );\n  }\n\n  return { removed, events: cancelEvents };\n}\n\nexport function syncPointGetQueryViews(syncPoint: SyncPoint): View[] {\n  const result = [];\n  for (const view of syncPoint.views.values()) {\n    if (!view.query._queryParams.loadsAllData()) {\n      result.push(view);\n    }\n  }\n  return result;\n}\n\n/**\n * @param path - The path to the desired complete snapshot\n * @returns A complete cache, if it exists\n */\nexport function syncPointGetCompleteServerCache(\n  syncPoint: SyncPoint,\n  path: Path\n): Node | null {\n  let serverCache: Node | null = null;\n  for (const view of syncPoint.views.values()) {\n    serverCache = serverCache || viewGetCompleteServerCache(view, path);\n  }\n  return serverCache;\n}\n\nexport function syncPointViewForQuery(\n  syncPoint: SyncPoint,\n  query: QueryContext\n): View | null {\n  const params = query._queryParams;\n  if (params.loadsAllData()) {\n    return syncPointGetCompleteView(syncPoint);\n  } else {\n    const queryId = query._queryIdentifier;\n    return syncPoint.views.get(queryId);\n  }\n}\n\nexport function syncPointViewExistsForQuery(\n  syncPoint: SyncPoint,\n  query: QueryContext\n): boolean {\n  return syncPointViewForQuery(syncPoint, query) != null;\n}\n\nexport function syncPointHasCompleteView(syncPoint: SyncPoint): boolean {\n  return syncPointGetCompleteView(syncPoint) != null;\n}\n\nexport function syncPointGetCompleteView(syncPoint: SyncPoint): View | null {\n  for (const view of syncPoint.views.values()) {\n    if (view.query._queryParams.loadsAllData()) {\n      return view;\n    }\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ReferenceConstructor } from '../api/Reference';\n\nimport { AckUserWrite } from './operation/AckUserWrite';\nimport { ListenComplete } from './operation/ListenComplete';\nimport { Merge } from './operation/Merge';\nimport {\n  newOperationSourceServer,\n  newOperationSourceServerTaggedQuery,\n  newOperationSourceUser,\n  Operation\n} from './operation/Operation';\nimport { Overwrite } from './operation/Overwrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport {\n  SyncPoint,\n  syncPointAddEventRegistration,\n  syncPointApplyOperation,\n  syncPointGetCompleteServerCache,\n  syncPointGetCompleteView,\n  syncPointGetQueryViews,\n  syncPointGetView,\n  syncPointHasCompleteView,\n  syncPointIsEmpty,\n  syncPointRemoveEventRegistration,\n  syncPointViewExistsForQuery,\n  syncPointViewForQuery\n} from './SyncPoint';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathGetFront,\n  pathIsEmpty\n} from './util/Path';\nimport { each, errorForServerCode } from './util/util';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\nimport { View, viewGetCompleteNode, viewGetServerCache } from './view/View';\nimport {\n  newWriteTree,\n  WriteTree,\n  writeTreeAddMerge,\n  writeTreeAddOverwrite,\n  writeTreeCalcCompleteEventCache,\n  writeTreeChildWrites,\n  writeTreeGetWrite,\n  WriteTreeRef,\n  writeTreeRefChild,\n  writeTreeRemoveWrite\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\nexport function syncTreeSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncTreeGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport interface ListenProvider {\n  startListening(\n    query: QueryContext,\n    tag: number | null,\n    hashFn: () => string,\n    onComplete: (a: string, b?: unknown) => Event[]\n  ): Event[];\n\n  stopListening(a: QueryContext, b: number | null): void;\n}\n\n/**\n * Static tracker for next query tag.\n */\nlet syncTreeNextQueryTag_ = 1;\n\nexport function resetSyncTreeTag() {\n  syncTreeNextQueryTag_ = 1;\n}\n\n/**\n * SyncTree is the central class for managing event callback registration, data caching, views\n * (query processing), and event generation.  There are typically two SyncTree instances for\n * each Repo, one for the normal Firebase data, and one for the .info data.\n *\n * It has a number of responsibilities, including:\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\n *    (applyUserOverwrite(), applyUserMerge()).\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\n *    applyServerMerge()).\n *  - Generating user-facing events for server and user changes (all of the apply* methods\n *    return the set of events that need to be raised as a result).\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\n *    to the correct set of paths and queries to satisfy the current set of user event\n *    callbacks (listens are started/stopped using the provided listenProvider).\n *\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\n * events are returned to the caller rather than raised synchronously.\n *\n */\nexport class SyncTree {\n  /**\n   * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\n   */\n  syncPointTree_: ImmutableTree<SyncPoint> = new ImmutableTree<SyncPoint>(null);\n\n  /**\n   * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\n   */\n  pendingWriteTree_: WriteTree = newWriteTree();\n\n  readonly tagToQueryMap: Map<number, string> = new Map();\n  readonly queryToTagMap: Map<string, number> = new Map();\n\n  /**\n   * @param listenProvider_ - Used by SyncTree to start / stop listening\n   *   to server data.\n   */\n  constructor(public listenProvider_: ListenProvider) {}\n}\n\n/**\n * Apply the data changes for a user-generated set() or transaction() call.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyUserOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node,\n  writeId: number,\n  visible?: boolean\n): Event[] {\n  // Record pending write.\n  writeTreeAddOverwrite(\n    syncTree.pendingWriteTree_,\n    path,\n    newData,\n    writeId,\n    visible\n  );\n\n  if (!visible) {\n    return [];\n  } else {\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new Overwrite(newOperationSourceUser(), path, newData)\n    );\n  }\n}\n\n/**\n * Apply the data from a user-generated update() call\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyUserMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n): Event[] {\n  // Record pending merge.\n  writeTreeAddMerge(syncTree.pendingWriteTree_, path, changedChildren, writeId);\n\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceUser(), path, changeTree)\n  );\n}\n\n/**\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\n *\n * @param revert - True if the given write failed and needs to be reverted\n * @returns Events to raise.\n */\nexport function syncTreeAckUserWrite(\n  syncTree: SyncTree,\n  writeId: number,\n  revert: boolean = false\n) {\n  const write = writeTreeGetWrite(syncTree.pendingWriteTree_, writeId);\n  const needToReevaluate = writeTreeRemoveWrite(\n    syncTree.pendingWriteTree_,\n    writeId\n  );\n  if (!needToReevaluate) {\n    return [];\n  } else {\n    let affectedTree = new ImmutableTree<boolean>(null);\n    if (write.snap != null) {\n      // overwrite\n      affectedTree = affectedTree.set(newEmptyPath(), true);\n    } else {\n      each(write.children, (pathString: string) => {\n        affectedTree = affectedTree.set(new Path(pathString), true);\n      });\n    }\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new AckUserWrite(write.path, affectedTree, revert)\n    );\n  }\n}\n\n/**\n * Apply new server data for the specified path..\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyServerOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Overwrite(newOperationSourceServer(), path, newData)\n  );\n}\n\n/**\n * Apply new server data to be merged in at the specified path.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyServerMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node }\n): Event[] {\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceServer(), path, changeTree)\n  );\n}\n\n/**\n * Apply a listen complete for a query\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyListenComplete(\n  syncTree: SyncTree,\n  path: Path\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new ListenComplete(newOperationSourceServer(), path)\n  );\n}\n\n/**\n * Apply a listen complete for a tagged query\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedListenComplete(\n  syncTree: SyncTree,\n  path: Path,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new ListenComplete(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Remove event callback(s).\n *\n * If query is the default query, we'll check all queries for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\n *\n * @param eventRegistration - If null, all callbacks are removed.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @param skipListenerDedup - When performing a `get()`, we don't add any new listeners, so no\n *  deduping needs to take place. This flag allows toggling of that behavior\n * @returns Cancel events, if cancelError was provided.\n */\nexport function syncTreeRemoveEventRegistration(\n  syncTree: SyncTree,\n  query: QueryContext,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error,\n  skipListenerDedup = false\n): Event[] {\n  // Find the syncPoint first. Then deal with whether or not it has matching listeners\n  const path = query._path;\n  const maybeSyncPoint = syncTree.syncPointTree_.get(path);\n  let cancelEvents: Event[] = [];\n  // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n  // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n  // not loadsAllData().\n  if (\n    maybeSyncPoint &&\n    (query._queryIdentifier === 'default' ||\n      syncPointViewExistsForQuery(maybeSyncPoint, query))\n  ) {\n    const removedAndEvents = syncPointRemoveEventRegistration(\n      maybeSyncPoint,\n      query,\n      eventRegistration,\n      cancelError\n    );\n    if (syncPointIsEmpty(maybeSyncPoint)) {\n      syncTree.syncPointTree_ = syncTree.syncPointTree_.remove(path);\n    }\n\n    const removed = removedAndEvents.removed;\n    cancelEvents = removedAndEvents.events;\n\n    if (!skipListenerDedup) {\n      /**\n       * We may have just removed one of many listeners and can short-circuit this whole process\n       * We may also not have removed a default listener, in which case all of the descendant listeners should already be\n       * properly set up.\n       */\n\n      // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n      // queryId === 'default'\n      const removingDefault =\n        -1 !==\n        removed.findIndex(query => {\n          return query._queryParams.loadsAllData();\n        });\n      const covered = syncTree.syncPointTree_.findOnPath(\n        path,\n        (relativePath, parentSyncPoint) =>\n          syncPointHasCompleteView(parentSyncPoint)\n      );\n\n      if (removingDefault && !covered) {\n        const subtree = syncTree.syncPointTree_.subtree(path);\n        // There are potentially child listeners. Determine what if any listens we need to send before executing the\n        // removal\n        if (!subtree.isEmpty()) {\n          // We need to fold over our subtree and collect the listeners to send\n          const newViews = syncTreeCollectDistinctViewsForSubTree_(subtree);\n\n          // Ok, we've collected all the listens we need. Set them up.\n          for (let i = 0; i < newViews.length; ++i) {\n            const view = newViews[i],\n              newQuery = view.query;\n            const listener = syncTreeCreateListenerForView_(syncTree, view);\n            syncTree.listenProvider_.startListening(\n              syncTreeQueryForListening_(newQuery),\n              syncTreeTagForQuery(syncTree, newQuery),\n              listener.hashFn,\n              listener.onComplete\n            );\n          }\n        }\n        // Otherwise there's nothing below us, so nothing we need to start listening on\n      }\n      // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n      // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n      // Also, note that if we have a cancelError, it's already been removed at the provider level.\n      if (!covered && removed.length > 0 && !cancelError) {\n        // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n        // default. Otherwise, we need to iterate through and cancel each individual query\n        if (removingDefault) {\n          // We don't tag default listeners\n          const defaultTag: number | null = null;\n          syncTree.listenProvider_.stopListening(\n            syncTreeQueryForListening_(query),\n            defaultTag\n          );\n        } else {\n          removed.forEach((queryToRemove: QueryContext) => {\n            const tagToRemove = syncTree.queryToTagMap.get(\n              syncTreeMakeQueryKey_(queryToRemove)\n            );\n            syncTree.listenProvider_.stopListening(\n              syncTreeQueryForListening_(queryToRemove),\n              tagToRemove\n            );\n          });\n        }\n      }\n    }\n    // Now, clear all of the tags we're tracking for the removed listens\n    syncTreeRemoveTags_(syncTree, removed);\n  } else {\n    // No-op, this listener must've been already removed\n  }\n  return cancelEvents;\n}\n\n/**\n * Apply new server data for the specified tagged query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedQueryOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  snap: Node,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey != null) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new Overwrite(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      snap\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // Query must have been removed already\n    return [];\n  }\n}\n\n/**\n * Apply server data to be merged in for the specified tagged query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedQueryMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const changeTree = ImmutableTree.fromObject(changedChildren);\n    const op = new Merge(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      changeTree\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeAddEventRegistration(\n  syncTree: SyncTree,\n  query: QueryContext,\n  eventRegistration: EventRegistration,\n  skipSetupListener = false\n): Event[] {\n  const path = query._path;\n\n  let serverCache: Node | null = null;\n  let foundAncestorDefaultView = false;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(sp);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(syncPoint);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let serverCacheComplete;\n  if (serverCache != null) {\n    serverCacheComplete = true;\n  } else {\n    serverCacheComplete = false;\n    serverCache = ChildrenNode.EMPTY_NODE;\n    const subtree = syncTree.syncPointTree_.subtree(path);\n    subtree.foreachChild((childName, childSyncPoint) => {\n      const completeCache = syncPointGetCompleteServerCache(\n        childSyncPoint,\n        newEmptyPath()\n      );\n      if (completeCache) {\n        serverCache = serverCache.updateImmediateChild(\n          childName,\n          completeCache\n        );\n      }\n    });\n  }\n\n  const viewAlreadyExists = syncPointViewExistsForQuery(syncPoint, query);\n  if (!viewAlreadyExists && !query._queryParams.loadsAllData()) {\n    // We need to track a tag for this query\n    const queryKey = syncTreeMakeQueryKey_(query);\n    assert(\n      !syncTree.queryToTagMap.has(queryKey),\n      'View does not exist, but we have a tag'\n    );\n    const tag = syncTreeGetNextQueryTag_();\n    syncTree.queryToTagMap.set(queryKey, tag);\n    syncTree.tagToQueryMap.set(tag, queryKey);\n  }\n  const writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, path);\n  let events = syncPointAddEventRegistration(\n    syncPoint,\n    query,\n    eventRegistration,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!viewAlreadyExists && !foundAncestorDefaultView && !skipSetupListener) {\n    const view = syncPointViewForQuery(syncPoint, query);\n    events = events.concat(syncTreeSetupListener_(syncTree, query, view));\n  }\n  return events;\n}\n\n/**\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\n *\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\n *\n * @param path - The path to the data we want\n * @param writeIdsToExclude - A specific set to be excluded\n */\nexport function syncTreeCalcCompleteEventCache(\n  syncTree: SyncTree,\n  path: Path,\n  writeIdsToExclude?: number[]\n): Node {\n  const includeHiddenSets = true;\n  const writeTree = syncTree.pendingWriteTree_;\n  const serverCache = syncTree.syncPointTree_.findOnPath(\n    path,\n    (pathSoFar, syncPoint) => {\n      const relativePath = newRelativePath(pathSoFar, path);\n      const serverCache = syncPointGetCompleteServerCache(\n        syncPoint,\n        relativePath\n      );\n      if (serverCache) {\n        return serverCache;\n      }\n    }\n  );\n  return writeTreeCalcCompleteEventCache(\n    writeTree,\n    path,\n    serverCache,\n    writeIdsToExclude,\n    includeHiddenSets\n  );\n}\n\nexport function syncTreeGetServerValue(\n  syncTree: SyncTree,\n  query: QueryContext\n): Node | null {\n  const path = query._path;\n  let serverCache: Node | null = null;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n  const serverCacheComplete = serverCache != null;\n  const serverCacheNode: CacheNode | null = serverCacheComplete\n    ? new CacheNode(serverCache, true, false)\n    : null;\n  const writesCache: WriteTreeRef | null = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    query._path\n  );\n  const view: View = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE,\n    serverCacheComplete\n  );\n  return viewGetCompleteNode(view);\n}\n\n/**\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\n *\n * NOTES:\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\n *\n * - We call applyOperation() on each SyncPoint passing three things:\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\n *   3. A snapshot Node with cached server data, if we have it.\n *\n * - We concatenate all of the events returned by each SyncPoint and return the result.\n */\nfunction syncTreeApplyOperationToSyncPoints_(\n  syncTree: SyncTree,\n  operation: Operation\n): Event[] {\n  return syncTreeApplyOperationHelper_(\n    operation,\n    syncTree.syncPointTree_,\n    /*serverCache=*/ null,\n    writeTreeChildWrites(syncTree.pendingWriteTree_, newEmptyPath())\n  );\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  if (pathIsEmpty(operation.path)) {\n    return syncTreeApplyOperationDescendantsHelper_(\n      operation,\n      syncPointTree,\n      serverCache,\n      writesCache\n    );\n  } else {\n    const syncPoint = syncPointTree.get(newEmptyPath());\n\n    // If we don't have cached server data, see if we can get it from this SyncPoint.\n    if (serverCache == null && syncPoint != null) {\n      serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n    }\n\n    let events: Event[] = [];\n    const childName = pathGetFront(operation.path);\n    const childOperation = operation.operationForChild(childName);\n    const childTree = syncPointTree.children.get(childName);\n    if (childTree && childOperation) {\n      const childServerCache = serverCache\n        ? serverCache.getImmediateChild(childName)\n        : null;\n      const childWritesCache = writeTreeRefChild(writesCache, childName);\n      events = events.concat(\n        syncTreeApplyOperationHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n\n    if (syncPoint) {\n      events = events.concat(\n        syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationDescendantsHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  const syncPoint = syncPointTree.get(newEmptyPath());\n\n  // If we don't have cached server data, see if we can get it from this SyncPoint.\n  if (serverCache == null && syncPoint != null) {\n    serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let events: Event[] = [];\n  syncPointTree.children.inorderTraversal((childName, childTree) => {\n    const childServerCache = serverCache\n      ? serverCache.getImmediateChild(childName)\n      : null;\n    const childWritesCache = writeTreeRefChild(writesCache, childName);\n    const childOperation = operation.operationForChild(childName);\n    if (childOperation) {\n      events = events.concat(\n        syncTreeApplyOperationDescendantsHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n  });\n\n  if (syncPoint) {\n    events = events.concat(\n      syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n    );\n  }\n\n  return events;\n}\n\nfunction syncTreeCreateListenerForView_(\n  syncTree: SyncTree,\n  view: View\n): { hashFn(): string; onComplete(a: string, b?: unknown): Event[] } {\n  const query = view.query;\n  const tag = syncTreeTagForQuery(syncTree, query);\n\n  return {\n    hashFn: () => {\n      const cache = viewGetServerCache(view) || ChildrenNode.EMPTY_NODE;\n      return cache.hash();\n    },\n    onComplete: (status: string): Event[] => {\n      if (status === 'ok') {\n        if (tag) {\n          return syncTreeApplyTaggedListenComplete(syncTree, query._path, tag);\n        } else {\n          return syncTreeApplyListenComplete(syncTree, query._path);\n        }\n      } else {\n        // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n        // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n        const error = errorForServerCode(status, query);\n        return syncTreeRemoveEventRegistration(\n          syncTree,\n          query,\n          /*eventRegistration*/ null,\n          error\n        );\n      }\n    }\n  };\n}\n\n/**\n * Return the tag associated with the given query.\n */\nexport function syncTreeTagForQuery(\n  syncTree: SyncTree,\n  query: QueryContext\n): number | null {\n  const queryKey = syncTreeMakeQueryKey_(query);\n  return syncTree.queryToTagMap.get(queryKey);\n}\n\n/**\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\n */\nfunction syncTreeMakeQueryKey_(query: QueryContext): string {\n  return query._path.toString() + '$' + query._queryIdentifier;\n}\n\n/**\n * Return the query associated with the given tag, if we have one\n */\nfunction syncTreeQueryKeyForTag_(\n  syncTree: SyncTree,\n  tag: number\n): string | null {\n  return syncTree.tagToQueryMap.get(tag);\n}\n\n/**\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\n */\nfunction syncTreeParseQueryKey_(queryKey: string): {\n  queryId: string;\n  path: Path;\n} {\n  const splitIndex = queryKey.indexOf('$');\n  assert(\n    splitIndex !== -1 && splitIndex < queryKey.length - 1,\n    'Bad queryKey.'\n  );\n  return {\n    queryId: queryKey.substr(splitIndex + 1),\n    path: new Path(queryKey.substr(0, splitIndex))\n  };\n}\n\n/**\n * A helper method to apply tagged operations\n */\nfunction syncTreeApplyTaggedOperation_(\n  syncTree: SyncTree,\n  queryPath: Path,\n  operation: Operation\n): Event[] {\n  const syncPoint = syncTree.syncPointTree_.get(queryPath);\n  assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n  const writesCache = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    queryPath\n  );\n  return syncPointApplyOperation(syncPoint, operation, writesCache, null);\n}\n\n/**\n * This collapses multiple unfiltered views into a single view, since we only need a single\n * listener for them.\n */\nfunction syncTreeCollectDistinctViewsForSubTree_(\n  subtree: ImmutableTree<SyncPoint>\n): View[] {\n  return subtree.fold<View[]>((relativePath, maybeChildSyncPoint, childMap) => {\n    if (maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\n      const completeView = syncPointGetCompleteView(maybeChildSyncPoint);\n      return [completeView];\n    } else {\n      // No complete view here, flatten any deeper listens into an array\n      let views: View[] = [];\n      if (maybeChildSyncPoint) {\n        views = syncPointGetQueryViews(maybeChildSyncPoint);\n      }\n      each(childMap, (_key: string, childViews: View[]) => {\n        views = views.concat(childViews);\n      });\n      return views;\n    }\n  });\n}\n\n/**\n * Normalizes a query to a query we send the server for listening\n *\n * @returns The normalized query\n */\nfunction syncTreeQueryForListening_(query: QueryContext): QueryContext {\n  if (query._queryParams.loadsAllData() && !query._queryParams.isDefault()) {\n    // We treat queries that load all data as default queries\n    // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n    // from Query\n    return new (syncTreeGetReferenceConstructor())(query._repo, query._path);\n  } else {\n    return query;\n  }\n}\n\nfunction syncTreeRemoveTags_(syncTree: SyncTree, queries: QueryContext[]) {\n  for (let j = 0; j < queries.length; ++j) {\n    const removedQuery = queries[j];\n    if (!removedQuery._queryParams.loadsAllData()) {\n      // We should have a tag for this\n      const removedQueryKey = syncTreeMakeQueryKey_(removedQuery);\n      const removedQueryTag = syncTree.queryToTagMap.get(removedQueryKey);\n      syncTree.queryToTagMap.delete(removedQueryKey);\n      syncTree.tagToQueryMap.delete(removedQueryTag);\n    }\n  }\n}\n\n/**\n * Static accessor for query tags.\n */\nfunction syncTreeGetNextQueryTag_(): number {\n  return syncTreeNextQueryTag_++;\n}\n\n/**\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\n *\n * @returns This method can return events to support synchronous data sources\n */\nfunction syncTreeSetupListener_(\n  syncTree: SyncTree,\n  query: QueryContext,\n  view: View\n): Event[] {\n  const path = query._path;\n  const tag = syncTreeTagForQuery(syncTree, query);\n  const listener = syncTreeCreateListenerForView_(syncTree, view);\n\n  const events = syncTree.listenProvider_.startListening(\n    syncTreeQueryForListening_(query),\n    tag,\n    listener.hashFn,\n    listener.onComplete\n  );\n\n  const subtree = syncTree.syncPointTree_.subtree(path);\n  // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n  // may need to shadow other listens as well.\n  if (tag) {\n    assert(\n      !syncPointHasCompleteView(subtree.value),\n      \"If we're adding a query, it shouldn't be shadowed\"\n    );\n  } else {\n    // Shadow everything at or below this location, this is a default listener.\n    const queriesToStop = subtree.fold<QueryContext[]>(\n      (relativePath, maybeChildSyncPoint, childMap) => {\n        if (\n          !pathIsEmpty(relativePath) &&\n          maybeChildSyncPoint &&\n          syncPointHasCompleteView(maybeChildSyncPoint)\n        ) {\n          return [syncPointGetCompleteView(maybeChildSyncPoint).query];\n        } else {\n          // No default listener here, flatten any deeper queries into an array\n          let queries: QueryContext[] = [];\n          if (maybeChildSyncPoint) {\n            queries = queries.concat(\n              syncPointGetQueryViews(maybeChildSyncPoint).map(\n                view => view.query\n              )\n            );\n          }\n          each(childMap, (_key: string, childQueries: QueryContext[]) => {\n            queries = queries.concat(childQueries);\n          });\n          return queries;\n        }\n      }\n    );\n    for (let i = 0; i < queriesToStop.length; ++i) {\n      const queryToStop = queriesToStop[i];\n      syncTree.listenProvider_.stopListening(\n        syncTreeQueryForListening_(queryToStop),\n        syncTreeTagForQuery(syncTree, queryToStop)\n      );\n    }\n  }\n  return events;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { LeafNode } from '../snap/LeafNode';\nimport { Node } from '../snap/Node';\nimport { nodeFromJSON } from '../snap/nodeFromJSON';\nimport { SyncTree, syncTreeCalcCompleteEventCache } from '../SyncTree';\n\nimport { Indexable } from './misc';\nimport { Path, pathChild } from './Path';\n\n/* It's critical for performance that we do not calculate actual values from a SyncTree\n * unless and until the value is needed. Because we expose both a SyncTree and Node\n * version of deferred value resolution, we ned a wrapper class that will let us share\n * code.\n *\n * @see https://github.com/firebase/firebase-js-sdk/issues/2487\n */\ninterface ValueProvider {\n  getImmediateChild(childName: string): ValueProvider;\n  node(): Node;\n}\n\nclass ExistingValueProvider implements ValueProvider {\n  constructor(readonly node_: Node) {}\n\n  getImmediateChild(childName: string): ValueProvider {\n    const child = this.node_.getImmediateChild(childName);\n    return new ExistingValueProvider(child);\n  }\n\n  node(): Node {\n    return this.node_;\n  }\n}\n\nclass DeferredValueProvider implements ValueProvider {\n  private syncTree_: SyncTree;\n  private path_: Path;\n\n  constructor(syncTree: SyncTree, path: Path) {\n    this.syncTree_ = syncTree;\n    this.path_ = path;\n  }\n\n  getImmediateChild(childName: string): ValueProvider {\n    const childPath = pathChild(this.path_, childName);\n    return new DeferredValueProvider(this.syncTree_, childPath);\n  }\n\n  node(): Node {\n    return syncTreeCalcCompleteEventCache(this.syncTree_, this.path_);\n  }\n}\n\n/**\n * Generate placeholders for deferred values.\n */\nexport const generateWithValues = function (\n  values: {\n    [k: string]: unknown;\n  } | null\n): { [k: string]: unknown } {\n  values = values || {};\n  values['timestamp'] = values['timestamp'] || new Date().getTime();\n  return values;\n};\n\n/**\n * Value to use when firing local events. When writing server values, fire\n * local events with an approximate value, otherwise return value as-is.\n */\nexport const resolveDeferredLeafValue = function (\n  value: { [k: string]: unknown } | string | number | boolean,\n  existingVal: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  if (!value || typeof value !== 'object') {\n    return value as string | number | boolean;\n  }\n  assert('.sv' in value, 'Unexpected leaf node or priority contents');\n\n  if (typeof value['.sv'] === 'string') {\n    return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\n  } else if (typeof value['.sv'] === 'object') {\n    return resolveComplexDeferredValue(value['.sv'], existingVal, serverValues);\n  } else {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\n  }\n};\n\nconst resolveScalarDeferredValue = function (\n  op: string,\n  existing: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  switch (op) {\n    case 'timestamp':\n      return serverValues['timestamp'] as string | number | boolean;\n    default:\n      assert(false, 'Unexpected server value: ' + op);\n  }\n};\n\nconst resolveComplexDeferredValue = function (\n  op: object,\n  existing: ValueProvider,\n  unused: { [k: string]: unknown }\n): string | number | boolean {\n  if (!op.hasOwnProperty('increment')) {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\n  }\n  const delta = op['increment'];\n  if (typeof delta !== 'number') {\n    assert(false, 'Unexpected increment value: ' + delta);\n  }\n\n  const existingNode = existing.node();\n  assert(\n    existingNode !== null && typeof existingNode !== 'undefined',\n    'Expected ChildrenNode.EMPTY_NODE for nulls'\n  );\n\n  // Incrementing a non-number sets the value to the incremented amount\n  if (!existingNode.isLeafNode()) {\n    return delta;\n  }\n\n  const leaf = existingNode as LeafNode;\n  const existingVal = leaf.getValue();\n  if (typeof existingVal !== 'number') {\n    return delta;\n  }\n\n  // No need to do over/underflow arithmetic here because JS only handles floats under the covers\n  return existingVal + delta;\n};\n\n/**\n * Recursively replace all deferred values and priorities in the tree with the\n * specified generated replacement values.\n * @param path - path to which write is relative\n * @param node - new data written at path\n * @param syncTree - current data\n */\nexport const resolveDeferredValueTree = function (\n  path: Path,\n  node: Node,\n  syncTree: SyncTree,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new DeferredValueProvider(syncTree, path),\n    serverValues\n  );\n};\n\n/**\n * Recursively replace all deferred values and priorities in the node with the\n * specified generated replacement values.  If there are no server values in the node,\n * it'll be returned as-is.\n */\nexport const resolveDeferredValueSnapshot = function (\n  node: Node,\n  existing: Node,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new ExistingValueProvider(existing),\n    serverValues\n  );\n};\n\nfunction resolveDeferredValue(\n  node: Node,\n  existingVal: ValueProvider,\n  serverValues: Indexable\n): Node {\n  const rawPri = node.getPriority().val() as\n    | Indexable\n    | boolean\n    | null\n    | number\n    | string;\n  const priority = resolveDeferredLeafValue(\n    rawPri,\n    existingVal.getImmediateChild('.priority'),\n    serverValues\n  );\n  let newNode: Node;\n\n  if (node.isLeafNode()) {\n    const leafNode = node as LeafNode;\n    const value = resolveDeferredLeafValue(\n      leafNode.getValue(),\n      existingVal,\n      serverValues\n    );\n    if (\n      value !== leafNode.getValue() ||\n      priority !== leafNode.getPriority().val()\n    ) {\n      return new LeafNode(value, nodeFromJSON(priority));\n    } else {\n      return node;\n    }\n  } else {\n    const childrenNode = node as ChildrenNode;\n    newNode = childrenNode;\n    if (priority !== childrenNode.getPriority().val()) {\n      newNode = newNode.updatePriority(new LeafNode(priority));\n    }\n    childrenNode.forEachChild(PRIORITY_INDEX, (childName, childNode) => {\n      const newChildNode = resolveDeferredValue(\n        childNode,\n        existingVal.getImmediateChild(childName),\n        serverValues\n      );\n      if (newChildNode !== childNode) {\n        newNode = newNode.updateImmediateChild(childName, newChildNode);\n      }\n    });\n    return newNode;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, safeGet } from '@firebase/util';\n\nimport { Path, pathGetFront, pathPopFront } from './Path';\nimport { each } from './util';\n\n/**\n * Node in a Tree.\n */\nexport interface TreeNode<T> {\n  // TODO: Consider making accessors that create children and value lazily or\n  // separate Internal / Leaf 'types'.\n  children: Record<string, TreeNode<T>>;\n  childCount: number;\n  value?: T;\n}\n\n/**\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\n * children.\n */\nexport class Tree<T> {\n  /**\n   * @param name - Optional name of the node.\n   * @param parent - Optional parent node.\n   * @param node - Optional node to wrap.\n   */\n  constructor(\n    readonly name: string = '',\n    readonly parent: Tree<T> | null = null,\n    public node: TreeNode<T> = { children: {}, childCount: 0 }\n  ) {}\n}\n\n/**\n * Returns a sub-Tree for the given path.\n *\n * @param pathObj - Path to look up.\n * @returns Tree for path.\n */\nexport function treeSubTree<T>(tree: Tree<T>, pathObj: string | Path): Tree<T> {\n  // TODO: Require pathObj to be Path?\n  let path = pathObj instanceof Path ? pathObj : new Path(pathObj);\n  let child = tree,\n    next = pathGetFront(path);\n  while (next !== null) {\n    const childNode = safeGet(child.node.children, next) || {\n      children: {},\n      childCount: 0\n    };\n    child = new Tree<T>(next, child, childNode);\n    path = pathPopFront(path);\n    next = pathGetFront(path);\n  }\n\n  return child;\n}\n\n/**\n * Returns the data associated with this tree node.\n *\n * @returns The data or null if no data exists.\n */\nexport function treeGetValue<T>(tree: Tree<T>): T | undefined {\n  return tree.node.value;\n}\n\n/**\n * Sets data to this tree node.\n *\n * @param value - Value to set.\n */\nexport function treeSetValue<T>(tree: Tree<T>, value: T | undefined): void {\n  tree.node.value = value;\n  treeUpdateParents(tree);\n}\n\n/**\n * @returns Whether the tree has any children.\n */\nexport function treeHasChildren<T>(tree: Tree<T>): boolean {\n  return tree.node.childCount > 0;\n}\n\n/**\n * @returns Whethe rthe tree is empty (no value or children).\n */\nexport function treeIsEmpty<T>(tree: Tree<T>): boolean {\n  return treeGetValue(tree) === undefined && !treeHasChildren(tree);\n}\n\n/**\n * Calls action for each child of this tree node.\n *\n * @param action - Action to be called for each child.\n */\nexport function treeForEachChild<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  each(tree.node.children, (child: string, childTree: TreeNode<T>) => {\n    action(new Tree<T>(child, tree, childTree));\n  });\n}\n\n/**\n * Does a depth-first traversal of this node's descendants, calling action for each one.\n *\n * @param action - Action to be called for each child.\n * @param includeSelf - Whether to call action on this node as well. Defaults to\n *   false.\n * @param childrenFirst - Whether to call action on children before calling it on\n *   parent.\n */\nexport function treeForEachDescendant<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void,\n  includeSelf?: boolean,\n  childrenFirst?: boolean\n): void {\n  if (includeSelf && !childrenFirst) {\n    action(tree);\n  }\n\n  treeForEachChild(tree, child => {\n    treeForEachDescendant(child, action, true, childrenFirst);\n  });\n\n  if (includeSelf && childrenFirst) {\n    action(tree);\n  }\n}\n\n/**\n * Calls action on each ancestor node.\n *\n * @param action - Action to be called on each parent; return\n *   true to abort.\n * @param includeSelf - Whether to call action on this node as well.\n * @returns true if the action callback returned true.\n */\nexport function treeForEachAncestor<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => unknown,\n  includeSelf?: boolean\n): boolean {\n  let node = includeSelf ? tree : tree.parent;\n  while (node !== null) {\n    if (action(node)) {\n      return true;\n    }\n    node = node.parent;\n  }\n  return false;\n}\n\n/**\n * Does a depth-first traversal of this node's descendants.  When a descendant with a value\n * is found, action is called on it and traversal does not continue inside the node.\n * Action is *not* called on this node.\n *\n * @param action - Action to be called for each child.\n */\nexport function treeForEachImmediateDescendantWithValue<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  treeForEachChild(tree, child => {\n    if (treeGetValue(child) !== undefined) {\n      action(child);\n    } else {\n      treeForEachImmediateDescendantWithValue(child, action);\n    }\n  });\n}\n\n/**\n * @returns The path of this tree node, as a Path.\n */\nexport function treeGetPath<T>(tree: Tree<T>) {\n  return new Path(\n    tree.parent === null\n      ? tree.name\n      : treeGetPath(tree.parent) + '/' + tree.name\n  );\n}\n\n/**\n * Adds or removes this child from its parent based on whether it's empty or not.\n */\nfunction treeUpdateParents<T>(tree: Tree<T>) {\n  if (tree.parent !== null) {\n    treeUpdateChild(tree.parent, tree.name, tree);\n  }\n}\n\n/**\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\n *\n * @param childName - The name of the child to update.\n * @param child - The child to update.\n */\nfunction treeUpdateChild<T>(tree: Tree<T>, childName: string, child: Tree<T>) {\n  const childEmpty = treeIsEmpty(child);\n  const childExists = contains(tree.node.children, childName);\n  if (childEmpty && childExists) {\n    delete tree.node.children[childName];\n    tree.node.childCount--;\n    treeUpdateParents(tree);\n  } else if (!childEmpty && !childExists) {\n    tree.node.children[childName] = child.node;\n    tree.node.childCount++;\n    treeUpdateParents(tree);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  contains,\n  errorPrefix as errorPrefixFxn,\n  safeGet,\n  stringLength\n} from '@firebase/util';\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport {\n  Path,\n  pathChild,\n  pathCompare,\n  pathContains,\n  pathGetBack,\n  pathGetFront,\n  pathSlice,\n  ValidationPath,\n  validationPathPop,\n  validationPathPush,\n  validationPathToErrorString\n} from './Path';\nimport { each, isInvalidJSONNumber } from './util';\n\n/**\n * True for invalid Firebase keys\n */\nexport const INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n\n/**\n * True for invalid Firebase paths.\n * Allows '/' in paths.\n */\nexport const INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n\n/**\n * Maximum number of characters to allow in leaf value\n */\nexport const MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n\nexport const isValidKey = function (key: unknown): boolean {\n  return (\n    typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key)\n  );\n};\n\nexport const isValidPathString = function (pathString: string): boolean {\n  return (\n    typeof pathString === 'string' &&\n    pathString.length !== 0 &&\n    !INVALID_PATH_REGEX_.test(pathString)\n  );\n};\n\nexport const isValidRootPathString = function (pathString: string): boolean {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  return isValidPathString(pathString);\n};\n\nexport const isValidPriority = function (priority: unknown): boolean {\n  return (\n    priority === null ||\n    typeof priority === 'string' ||\n    (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\n    (priority &&\n      typeof priority === 'object' &&\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      contains(priority as any, '.sv'))\n  );\n};\n\n/**\n * Pre-validate a datum passed as an argument to Firebase function.\n */\nexport const validateFirebaseDataArg = function (\n  fnName: string,\n  value: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && value === undefined) {\n    return;\n  }\n\n  validateFirebaseData(errorPrefixFxn(fnName, 'value'), value, path);\n};\n\n/**\n * Validate a data object client-side before sending to server.\n */\nexport const validateFirebaseData = function (\n  errorPrefix: string,\n  data: unknown,\n  path_: Path | ValidationPath\n) {\n  const path =\n    path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\n\n  if (data === undefined) {\n    throw new Error(\n      errorPrefix + 'contains undefined ' + validationPathToErrorString(path)\n    );\n  }\n  if (typeof data === 'function') {\n    throw new Error(\n      errorPrefix +\n        'contains a function ' +\n        validationPathToErrorString(path) +\n        ' with contents = ' +\n        data.toString()\n    );\n  }\n  if (isInvalidJSONNumber(data)) {\n    throw new Error(\n      errorPrefix +\n        'contains ' +\n        data.toString() +\n        ' ' +\n        validationPathToErrorString(path)\n    );\n  }\n\n  // Check max leaf size, but try to avoid the utf8 conversion if we can.\n  if (\n    typeof data === 'string' &&\n    data.length > MAX_LEAF_SIZE_ / 3 &&\n    stringLength(data) > MAX_LEAF_SIZE_\n  ) {\n    throw new Error(\n      errorPrefix +\n        'contains a string greater than ' +\n        MAX_LEAF_SIZE_ +\n        ' utf8 bytes ' +\n        validationPathToErrorString(path) +\n        \" ('\" +\n        data.substring(0, 50) +\n        \"...')\"\n    );\n  }\n\n  // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n  // to save extra walking of large objects.\n  if (data && typeof data === 'object') {\n    let hasDotValue = false;\n    let hasActualChild = false;\n    each(data, (key: string, value: unknown) => {\n      if (key === '.value') {\n        hasDotValue = true;\n      } else if (key !== '.priority' && key !== '.sv') {\n        hasActualChild = true;\n        if (!isValidKey(key)) {\n          throw new Error(\n            errorPrefix +\n              ' contains an invalid key (' +\n              key +\n              ') ' +\n              validationPathToErrorString(path) +\n              '.  Keys must be non-empty strings ' +\n              'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n          );\n        }\n      }\n\n      validationPathPush(path, key);\n      validateFirebaseData(errorPrefix, value, path);\n      validationPathPop(path);\n    });\n\n    if (hasDotValue && hasActualChild) {\n      throw new Error(\n        errorPrefix +\n          ' contains \".value\" child ' +\n          validationPathToErrorString(path) +\n          ' in addition to actual children.'\n      );\n    }\n  }\n};\n\n/**\n * Pre-validate paths passed in the firebase function.\n */\nexport const validateFirebaseMergePaths = function (\n  errorPrefix: string,\n  mergePaths: Path[]\n) {\n  let i, curPath: Path;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    const keys = pathSlice(curPath);\n    for (let j = 0; j < keys.length; j++) {\n      if (keys[j] === '.priority' && j === keys.length - 1) {\n        // .priority is OK\n      } else if (!isValidKey(keys[j])) {\n        throw new Error(\n          errorPrefix +\n            'contains an invalid key (' +\n            keys[j] +\n            ') in path ' +\n            curPath.toString() +\n            '. Keys must be non-empty strings ' +\n            'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n        );\n      }\n    }\n  }\n\n  // Check that update keys are not descendants of each other.\n  // We rely on the property that sorting guarantees that ancestors come\n  // right before descendants.\n  mergePaths.sort(pathCompare);\n  let prevPath: Path | null = null;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    if (prevPath !== null && pathContains(prevPath, curPath)) {\n      throw new Error(\n        errorPrefix +\n          'contains a path ' +\n          prevPath.toString() +\n          ' that is ancestor of another path ' +\n          curPath.toString()\n      );\n    }\n    prevPath = curPath;\n  }\n};\n\n/**\n * pre-validate an object passed as an argument to firebase function (\n * must be an object - e.g. for firebase.update()).\n */\nexport const validateFirebaseMergeDataArg = function (\n  fnName: string,\n  data: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  const errorPrefix = errorPrefixFxn(fnName, 'values');\n\n  if (!(data && typeof data === 'object') || Array.isArray(data)) {\n    throw new Error(\n      errorPrefix + ' must be an object containing the children to replace.'\n    );\n  }\n\n  const mergePaths: Path[] = [];\n  each(data, (key: string, value: unknown) => {\n    const curPath = new Path(key);\n    validateFirebaseData(errorPrefix, value, pathChild(path, curPath));\n    if (pathGetBack(curPath) === '.priority') {\n      if (!isValidPriority(value)) {\n        throw new Error(\n          errorPrefix +\n            \"contains an invalid value for '\" +\n            curPath.toString() +\n            \"', which must be a valid \" +\n            'Firebase priority (a string, finite number, server value, or null).'\n        );\n      }\n    }\n    mergePaths.push(curPath);\n  });\n  validateFirebaseMergePaths(errorPrefix, mergePaths);\n};\n\nexport const validatePriority = function (\n  fnName: string,\n  priority: unknown,\n  optional: boolean\n) {\n  if (optional && priority === undefined) {\n    return;\n  }\n  if (isInvalidJSONNumber(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'priority') +\n        'is ' +\n        priority.toString() +\n        ', but must be a valid Firebase priority (a string, finite number, ' +\n        'server value, or null).'\n    );\n  }\n  // Special case to allow importing data with a .sv.\n  if (!isValidPriority(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'priority') +\n        'must be a valid Firebase priority ' +\n        '(a string, finite number, server value, or null).'\n    );\n  }\n};\n\nexport const validateKey = function (\n  fnName: string,\n  argumentName: string,\n  key: string,\n  optional: boolean\n) {\n  if (optional && key === undefined) {\n    return;\n  }\n  if (!isValidKey(key)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) +\n        'was an invalid key = \"' +\n        key +\n        '\".  Firebase keys must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").'\n    );\n  }\n};\n\n/**\n * @internal\n */\nexport const validatePathString = function (\n  fnName: string,\n  argumentName: string,\n  pathString: string,\n  optional: boolean\n) {\n  if (optional && pathString === undefined) {\n    return;\n  }\n\n  if (!isValidPathString(pathString)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) +\n        'was an invalid path = \"' +\n        pathString +\n        '\". Paths must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"'\n    );\n  }\n};\n\nexport const validateRootPathString = function (\n  fnName: string,\n  argumentName: string,\n  pathString: string,\n  optional: boolean\n) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  validatePathString(fnName, argumentName, pathString, optional);\n};\n\n/**\n * @internal\n */\nexport const validateWritablePath = function (fnName: string, path: Path) {\n  if (pathGetFront(path) === '.info') {\n    throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n  }\n};\n\nexport const validateUrl = function (\n  fnName: string,\n  parsedUrl: { repoInfo: RepoInfo; path: Path }\n) {\n  // TODO = Validate server better.\n  const pathString = parsedUrl.path.toString();\n  if (\n    !(typeof parsedUrl.repoInfo.host === 'string') ||\n    parsedUrl.repoInfo.host.length === 0 ||\n    (!isValidKey(parsedUrl.repoInfo.namespace) &&\n      parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\n    (pathString.length !== 0 && !isValidRootPathString(pathString))\n  ) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'url') +\n        'must be a valid firebase URL and ' +\n        'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".'\n    );\n  }\n};\n\nexport const validateString = function (\n  fnName: string,\n  argumentName: string,\n  string: unknown,\n  optional: boolean\n) {\n  if (optional && string === undefined) {\n    return;\n  }\n  if (!(typeof string === 'string')) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a valid string.'\n    );\n  }\n};\n\nexport const validateObject = function (\n  fnName: string,\n  argumentName: string,\n  obj: unknown,\n  optional: boolean\n) {\n  if (optional && obj === undefined) {\n    return;\n  }\n  if (!(obj && typeof obj === 'object') || obj === null) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a valid object.'\n    );\n  }\n};\n\nexport const validateObjectContainsKey = function (\n  fnName: string,\n  argumentName: string,\n  obj: unknown,\n  key: string,\n  optional: boolean,\n  optType?: string\n) {\n  const objectContainsKey =\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    obj && typeof obj === 'object' && contains(obj as any, key);\n\n  if (!objectContainsKey) {\n    if (optional) {\n      return;\n    } else {\n      throw new Error(\n        errorPrefixFxn(fnName, argumentName) +\n          'must contain the key \"' +\n          key +\n          '\"'\n      );\n    }\n  }\n\n  if (optType) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const val = safeGet(obj as any, key);\n    if (\n      (optType === 'number' && !(typeof val === 'number')) ||\n      (optType === 'string' && !(typeof val === 'string')) ||\n      (optType === 'boolean' && !(typeof val === 'boolean')) ||\n      (optType === 'function' && !(typeof val === 'function')) ||\n      (optType === 'object' && !(typeof val === 'object') && val)\n    ) {\n      if (optional) {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentName) +\n            'contains invalid value for key \"' +\n            key +\n            '\" (must be of type \"' +\n            optType +\n            '\")'\n        );\n      } else {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentName) +\n            'must contain the key \"' +\n            key +\n            '\" with type \"' +\n            optType +\n            '\"'\n        );\n      }\n    }\n  }\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path, pathContains, pathEquals } from '../util/Path';\nimport { exceptionGuard, log, logger } from '../util/util';\n\nimport { Event } from './Event';\n\n/**\n * The event queue serves a few purposes:\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\n *    events being queued.\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\n *    left off, ensuring that the events are still raised synchronously and in order.\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\n *    events are raised synchronously.\n *\n * NOTE: This can all go away if/when we move to async events.\n *\n */\nexport class EventQueue {\n  eventLists_: EventList[] = [];\n\n  /**\n   * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\n   */\n  recursionDepth_ = 0;\n}\n\n/**\n * @param eventDataList - The new events to queue.\n */\nexport function eventQueueQueueEvents(\n  eventQueue: EventQueue,\n  eventDataList: Event[]\n) {\n  // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n  let currList: EventList | null = null;\n  for (let i = 0; i < eventDataList.length; i++) {\n    const data = eventDataList[i];\n    const path = data.getPath();\n    if (currList !== null && !pathEquals(path, currList.path)) {\n      eventQueue.eventLists_.push(currList);\n      currList = null;\n    }\n\n    if (currList === null) {\n      currList = { events: [], path };\n    }\n\n    currList.events.push(data);\n  }\n  if (currList) {\n    eventQueue.eventLists_.push(currList);\n  }\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones)\n * for the specified path.\n *\n * It is assumed that the new events are all for the specified path.\n *\n * @param path - The path to raise events for.\n * @param eventDataList - The new events to raise.\n */\nexport function eventQueueRaiseEventsAtPath(\n  eventQueue: EventQueue,\n  path: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, eventPath =>\n    pathEquals(eventPath, path)\n  );\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\n * locations related to the specified change path (i.e. all ancestors and descendants).\n *\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\n *\n * @param changedPath - The path to raise events for.\n * @param eventDataList - The events to raise\n */\nexport function eventQueueRaiseEventsForChangedPath(\n  eventQueue: EventQueue,\n  changedPath: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(\n    eventQueue,\n    eventPath =>\n      pathContains(eventPath, changedPath) ||\n      pathContains(changedPath, eventPath)\n  );\n}\n\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(\n  eventQueue: EventQueue,\n  predicate: (path: Path) => boolean\n) {\n  eventQueue.recursionDepth_++;\n\n  let sentAll = true;\n  for (let i = 0; i < eventQueue.eventLists_.length; i++) {\n    const eventList = eventQueue.eventLists_[i];\n    if (eventList) {\n      const eventPath = eventList.path;\n      if (predicate(eventPath)) {\n        eventListRaise(eventQueue.eventLists_[i]);\n        eventQueue.eventLists_[i] = null;\n      } else {\n        sentAll = false;\n      }\n    }\n  }\n\n  if (sentAll) {\n    eventQueue.eventLists_ = [];\n  }\n\n  eventQueue.recursionDepth_--;\n}\n\ninterface EventList {\n  events: Event[];\n  path: Path;\n}\n\n/**\n * Iterates through the list and raises each event\n */\nfunction eventListRaise(eventList: EventList) {\n  for (let i = 0; i < eventList.events.length; i++) {\n    const eventData = eventList.events[i];\n    if (eventData !== null) {\n      eventList.events[i] = null;\n      const eventFn = eventData.getEventRunner();\n      if (logger) {\n        log('event: ' + eventData.toString());\n      }\n      exceptionGuard(eventFn);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  isEmpty,\n  map,\n  safeGet,\n  stringify\n} from '@firebase/util';\n\nimport { ValueEventRegistration } from '../api/Reference_impl';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { PersistentConnection } from './PersistentConnection';\nimport { ReadonlyRestClient } from './ReadonlyRestClient';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { nodeFromJSON } from './snap/nodeFromJSON';\nimport { SnapshotHolder } from './SnapshotHolder';\nimport {\n  newSparseSnapshotTree,\n  SparseSnapshotTree,\n  sparseSnapshotTreeForEachTree,\n  sparseSnapshotTreeForget,\n  sparseSnapshotTreeRemember\n} from './SparseSnapshotTree';\nimport { StatsCollection } from './stats/StatsCollection';\nimport { StatsListener } from './stats/StatsListener';\nimport {\n  statsManagerGetCollection,\n  statsManagerGetOrCreateReporter\n} from './stats/StatsManager';\nimport { StatsReporter, statsReporterIncludeStat } from './stats/StatsReporter';\nimport {\n  SyncTree,\n  syncTreeAckUserWrite,\n  syncTreeAddEventRegistration,\n  syncTreeApplyServerMerge,\n  syncTreeApplyServerOverwrite,\n  syncTreeApplyTaggedQueryMerge,\n  syncTreeApplyTaggedQueryOverwrite,\n  syncTreeApplyUserMerge,\n  syncTreeApplyUserOverwrite,\n  syncTreeCalcCompleteEventCache,\n  syncTreeGetServerValue,\n  syncTreeRemoveEventRegistration,\n  syncTreeTagForQuery\n} from './SyncTree';\nimport { Indexable } from './util/misc';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathPopFront\n} from './util/Path';\nimport {\n  generateWithValues,\n  resolveDeferredValueSnapshot,\n  resolveDeferredValueTree\n} from './util/ServerValues';\nimport {\n  Tree,\n  treeForEachAncestor,\n  treeForEachChild,\n  treeForEachDescendant,\n  treeGetPath,\n  treeGetValue,\n  treeHasChildren,\n  treeSetValue,\n  treeSubTree\n} from './util/Tree';\nimport {\n  beingCrawled,\n  each,\n  exceptionGuard,\n  log,\n  LUIDGenerator,\n  warn\n} from './util/util';\nimport { isValidPriority, validateFirebaseData } from './util/validation';\nimport { Event } from './view/Event';\nimport {\n  EventQueue,\n  eventQueueQueueEvents,\n  eventQueueRaiseEventsAtPath,\n  eventQueueRaiseEventsForChangedPath\n} from './view/EventQueue';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\n\nconst INTERRUPT_REASON = 'repo_interrupt';\n\n/**\n * If a transaction does not succeed after 25 retries, we abort it. Among other\n * things this ensure that if there's ever a bug causing a mismatch between\n * client / server hashes for some data, we won't retry indefinitely.\n */\nconst MAX_TRANSACTION_RETRIES = 25;\n\nconst enum TransactionStatus {\n  // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\n  // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\n  // mismatched hash.\n  RUN,\n\n  // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\n  // or rejected yet).\n  SENT,\n\n  // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\n  // removed when we get a chance to prune completed ones.\n  COMPLETED,\n\n  // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\n  // If it comes back as unsuccessful, we'll abort it.\n  SENT_NEEDS_ABORT,\n\n  // Temporary state used to mark transactions that need to be aborted.\n  NEEDS_ABORT\n}\n\ninterface Transaction {\n  path: Path;\n  update: (a: unknown) => unknown;\n  onComplete: (\n    error: Error | null,\n    committed: boolean,\n    node: Node | null\n  ) => void;\n  status: TransactionStatus;\n  order: number;\n  applyLocally: boolean;\n  retryCount: number;\n  unwatcher: () => void;\n  abortReason: string | null;\n  currentWriteId: number;\n  currentInputSnapshot: Node | null;\n  currentOutputSnapshotRaw: Node | null;\n  currentOutputSnapshotResolved: Node | null;\n}\n\n/**\n * A connection to a single data repository.\n */\nexport class Repo {\n  /** Key for uniquely identifying this repo, used in RepoManager */\n  readonly key: string;\n\n  dataUpdateCount = 0;\n  infoSyncTree_: SyncTree;\n  serverSyncTree_: SyncTree;\n\n  stats_: StatsCollection;\n  statsListener_: StatsListener | null = null;\n  eventQueue_ = new EventQueue();\n  nextWriteId_ = 1;\n  server_: ServerActions;\n  statsReporter_: StatsReporter;\n  infoData_: SnapshotHolder;\n  interceptServerDataCallback_: ((a: string, b: unknown) => void) | null = null;\n\n  /** A list of data pieces and paths to be set when this client disconnects. */\n  onDisconnect_: SparseSnapshotTree = newSparseSnapshotTree();\n\n  /** Stores queues of outstanding transactions for Firebase locations. */\n  transactionQueueTree_ = new Tree<Transaction[]>();\n\n  // TODO: This should be @private but it's used by test_access.js and internal.js\n  persistentConnection_: PersistentConnection | null = null;\n\n  constructor(\n    public repoInfo_: RepoInfo,\n    public forceRestClient_: boolean,\n    public authTokenProvider_: AuthTokenProvider,\n    public appCheckProvider_: AppCheckTokenProvider\n  ) {\n    // This key is intentionally not updated if RepoInfo is later changed or replaced\n    this.key = this.repoInfo_.toURLString();\n  }\n\n  /**\n   * @returns The URL corresponding to the root of this Firebase.\n   */\n  toString(): string {\n    return (\n      (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host\n    );\n  }\n}\n\nexport function repoStart(\n  repo: Repo,\n  appId: string,\n  authOverride?: object\n): void {\n  repo.stats_ = statsManagerGetCollection(repo.repoInfo_);\n\n  if (repo.forceRestClient_ || beingCrawled()) {\n    repo.server_ = new ReadonlyRestClient(\n      repo.repoInfo_,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      repo.authTokenProvider_,\n      repo.appCheckProvider_\n    );\n\n    // Minor hack: Fire onConnect immediately, since there's no actual connection.\n    setTimeout(() => repoOnConnectStatus(repo, /* connectStatus= */ true), 0);\n  } else {\n    // Validate authOverride\n    if (typeof authOverride !== 'undefined' && authOverride !== null) {\n      if (typeof authOverride !== 'object') {\n        throw new Error(\n          'Only objects are supported for option databaseAuthVariableOverride'\n        );\n      }\n      try {\n        stringify(authOverride);\n      } catch (e) {\n        throw new Error('Invalid authOverride provided: ' + e);\n      }\n    }\n\n    repo.persistentConnection_ = new PersistentConnection(\n      repo.repoInfo_,\n      appId,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      (connectStatus: boolean) => {\n        repoOnConnectStatus(repo, connectStatus);\n      },\n      (updates: object) => {\n        repoOnServerInfoUpdate(repo, updates);\n      },\n      repo.authTokenProvider_,\n      repo.appCheckProvider_,\n      authOverride\n    );\n\n    repo.server_ = repo.persistentConnection_;\n  }\n\n  repo.authTokenProvider_.addTokenChangeListener(token => {\n    repo.server_.refreshAuthToken(token);\n  });\n\n  repo.appCheckProvider_.addTokenChangeListener(result => {\n    repo.server_.refreshAppCheckToken(result.token);\n  });\n\n  // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n  // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n  repo.statsReporter_ = statsManagerGetOrCreateReporter(\n    repo.repoInfo_,\n    () => new StatsReporter(repo.stats_, repo.server_)\n  );\n\n  // Used for .info.\n  repo.infoData_ = new SnapshotHolder();\n  repo.infoSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      let infoEvents: Event[] = [];\n      const node = repo.infoData_.getNode(query._path);\n      // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n      // on initial data...\n      if (!node.isEmpty()) {\n        infoEvents = syncTreeApplyServerOverwrite(\n          repo.infoSyncTree_,\n          query._path,\n          node\n        );\n        setTimeout(() => {\n          onComplete('ok');\n        }, 0);\n      }\n      return infoEvents;\n    },\n    stopListening: () => {}\n  });\n  repoUpdateInfo(repo, 'connected', false);\n\n  repo.serverSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      repo.server_.listen(query, currentHashFn, tag, (status, data) => {\n        const events = onComplete(status, data);\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          query._path,\n          events\n        );\n      });\n      // No synchronous events for network-backed sync trees\n      return [];\n    },\n    stopListening: (query, tag) => {\n      repo.server_.unlisten(query, tag);\n    }\n  });\n}\n\n/**\n * @returns The time in milliseconds, taking the server offset into account if we have one.\n */\nexport function repoServerTime(repo: Repo): number {\n  const offsetNode = repo.infoData_.getNode(new Path('.info/serverTimeOffset'));\n  const offset = (offsetNode.val() as number) || 0;\n  return new Date().getTime() + offset;\n}\n\n/**\n * Generate ServerValues using some variables from the repo object.\n */\nexport function repoGenerateServerValues(repo: Repo): Indexable {\n  return generateWithValues({\n    timestamp: repoServerTime(repo)\n  });\n}\n\n/**\n * Called by realtime when we get new messages from the server.\n */\nfunction repoOnDataUpdate(\n  repo: Repo,\n  pathString: string,\n  data: unknown,\n  isMerge: boolean,\n  tag: number | null\n): void {\n  // For testing.\n  repo.dataUpdateCount++;\n  const path = new Path(pathString);\n  data = repo.interceptServerDataCallback_\n    ? repo.interceptServerDataCallback_(pathString, data)\n    : data;\n  let events = [];\n  if (tag) {\n    if (isMerge) {\n      const taggedChildren = map(\n        data as { [k: string]: unknown },\n        (raw: unknown) => nodeFromJSON(raw)\n      );\n      events = syncTreeApplyTaggedQueryMerge(\n        repo.serverSyncTree_,\n        path,\n        taggedChildren,\n        tag\n      );\n    } else {\n      const taggedSnap = nodeFromJSON(data);\n      events = syncTreeApplyTaggedQueryOverwrite(\n        repo.serverSyncTree_,\n        path,\n        taggedSnap,\n        tag\n      );\n    }\n  } else if (isMerge) {\n    const changedChildren = map(\n      data as { [k: string]: unknown },\n      (raw: unknown) => nodeFromJSON(raw)\n    );\n    events = syncTreeApplyServerMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren\n    );\n  } else {\n    const snap = nodeFromJSON(data);\n    events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap);\n  }\n  let affectedPath = path;\n  if (events.length > 0) {\n    // Since we have a listener outstanding for each transaction, receiving any events\n    // is a proxy for some change having occurred.\n    affectedPath = repoRerunTransactions(repo, path);\n  }\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, events);\n}\n\n// TODO: This should be @private but it's used by test_access.js and internal.js\nexport function repoInterceptServerData(\n  repo: Repo,\n  callback: ((a: string, b: unknown) => unknown) | null\n): void {\n  repo.interceptServerDataCallback_ = callback;\n}\n\nfunction repoOnConnectStatus(repo: Repo, connectStatus: boolean): void {\n  repoUpdateInfo(repo, 'connected', connectStatus);\n  if (connectStatus === false) {\n    repoRunOnDisconnectEvents(repo);\n  }\n}\n\nfunction repoOnServerInfoUpdate(repo: Repo, updates: object): void {\n  each(updates, (key: string, value: unknown) => {\n    repoUpdateInfo(repo, key, value);\n  });\n}\n\nfunction repoUpdateInfo(repo: Repo, pathString: string, value: unknown): void {\n  const path = new Path('/.info/' + pathString);\n  const newNode = nodeFromJSON(value);\n  repo.infoData_.updateSnapshot(path, newNode);\n  const events = syncTreeApplyServerOverwrite(\n    repo.infoSyncTree_,\n    path,\n    newNode\n  );\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n}\n\nfunction repoGetNextWriteId(repo: Repo): number {\n  return repo.nextWriteId_++;\n}\n\n/**\n * The purpose of `getValue` is to return the latest known value\n * satisfying `query`.\n *\n * This method will first check for in-memory cached values\n * belonging to active listeners. If they are found, such values\n * are considered to be the most up-to-date.\n *\n * If the client is not connected, this method will wait until the\n *  repo has established a connection and then request the value for `query`.\n * If the client is not able to retrieve the query result for another reason,\n * it reports an error.\n *\n * @param query - The query to surface a value for.\n */\nexport function repoGetValue(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: ValueEventRegistration\n): Promise<Node> {\n  // Only active queries are cached. There is no persisted cache.\n  const cached = syncTreeGetServerValue(repo.serverSyncTree_, query);\n  if (cached != null) {\n    return Promise.resolve(cached);\n  }\n  return repo.server_.get(query).then(\n    payload => {\n      const node = nodeFromJSON(payload).withIndex(\n        query._queryParams.getIndex()\n      );\n      /**\n       * Below we simulate the actions of an `onlyOnce` `onValue()` event where:\n       * Add an event registration,\n       * Update data at the path,\n       * Raise any events,\n       * Cleanup the SyncTree\n       */\n      syncTreeAddEventRegistration(\n        repo.serverSyncTree_,\n        query,\n        eventRegistration,\n        true\n      );\n      let events: Event[];\n      if (query._queryParams.loadsAllData()) {\n        events = syncTreeApplyServerOverwrite(\n          repo.serverSyncTree_,\n          query._path,\n          node\n        );\n      } else {\n        const tag = syncTreeTagForQuery(repo.serverSyncTree_, query);\n        events = syncTreeApplyTaggedQueryOverwrite(\n          repo.serverSyncTree_,\n          query._path,\n          node,\n          tag\n        );\n      }\n      /*\n       * We need to raise events in the scenario where `get()` is called at a parent path, and\n       * while the `get()` is pending, `onValue` is called at a child location. While get() is waiting\n       * for the data, `onValue` will register a new event. Then, get() will come back, and update the syncTree\n       * and its corresponding serverCache, including the child location where `onValue` is called. Then,\n       * `onValue` will receive the event from the server, but look at the syncTree and see that the data received\n       * from the server is already at the SyncPoint, and so the `onValue` callback will never get fired.\n       * Calling `eventQueueRaiseEventsForChangedPath()` is the correct way to propagate the events and\n       * ensure the corresponding child events will get fired.\n       */\n      eventQueueRaiseEventsForChangedPath(\n        repo.eventQueue_,\n        query._path,\n        events\n      );\n      syncTreeRemoveEventRegistration(\n        repo.serverSyncTree_,\n        query,\n        eventRegistration,\n        null,\n        true\n      );\n      return node;\n    },\n    err => {\n      repoLog(repo, 'get for query ' + stringify(query) + ' failed: ' + err);\n      return Promise.reject(new Error(err as string));\n    }\n  );\n}\n\nexport function repoSetWithPriority(\n  repo: Repo,\n  path: Path,\n  newVal: unknown,\n  newPriority: number | string | null,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'set', {\n    path: path.toString(),\n    value: newVal,\n    priority: newPriority\n  });\n\n  // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n  // (b) store unresolved paths on JSON parse\n  const serverValues = repoGenerateServerValues(repo);\n  const newNodeUnresolved = nodeFromJSON(newVal, newPriority);\n  const existing = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path);\n  const newNode = resolveDeferredValueSnapshot(\n    newNodeUnresolved,\n    existing,\n    serverValues\n  );\n\n  const writeId = repoGetNextWriteId(repo);\n  const events = syncTreeApplyUserOverwrite(\n    repo.serverSyncTree_,\n    path,\n    newNode,\n    writeId,\n    true\n  );\n  eventQueueQueueEvents(repo.eventQueue_, events);\n  repo.server_.put(\n    path.toString(),\n    newNodeUnresolved.val(/*export=*/ true),\n    (status, errorReason) => {\n      const success = status === 'ok';\n      if (!success) {\n        warn('set at ' + path + ' failed: ' + status);\n      }\n\n      const clearEvents = syncTreeAckUserWrite(\n        repo.serverSyncTree_,\n        writeId,\n        !success\n      );\n      eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, clearEvents);\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n  const affectedPath = repoAbortTransactions(repo, path);\n  repoRerunTransactions(repo, affectedPath);\n  // We queued the events above, so just flush the queue here\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, []);\n}\n\nexport function repoUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'update', { path: path.toString(), value: childrenToMerge });\n\n  // Start with our existing data and merge each child into it.\n  let empty = true;\n  const serverValues = repoGenerateServerValues(repo);\n  const changedChildren: { [k: string]: Node } = {};\n  each(childrenToMerge, (changedKey: string, changedValue: unknown) => {\n    empty = false;\n    changedChildren[changedKey] = resolveDeferredValueTree(\n      pathChild(path, changedKey),\n      nodeFromJSON(changedValue),\n      repo.serverSyncTree_,\n      serverValues\n    );\n  });\n\n  if (!empty) {\n    const writeId = repoGetNextWriteId(repo);\n    const events = syncTreeApplyUserMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren,\n      writeId\n    );\n    eventQueueQueueEvents(repo.eventQueue_, events);\n    repo.server_.merge(\n      path.toString(),\n      childrenToMerge,\n      (status, errorReason) => {\n        const success = status === 'ok';\n        if (!success) {\n          warn('update at ' + path + ' failed: ' + status);\n        }\n\n        const clearEvents = syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          writeId,\n          !success\n        );\n        const affectedPath =\n          clearEvents.length > 0 ? repoRerunTransactions(repo, path) : path;\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          affectedPath,\n          clearEvents\n        );\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n      }\n    );\n\n    each(childrenToMerge, (changedPath: string) => {\n      const affectedPath = repoAbortTransactions(\n        repo,\n        pathChild(path, changedPath)\n      );\n      repoRerunTransactions(repo, affectedPath);\n    });\n\n    // We queued the events above, so just flush the queue here\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, []);\n  } else {\n    log(\"update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n  }\n}\n\n/**\n * Applies all of the changes stored up in the onDisconnect_ tree.\n */\nfunction repoRunOnDisconnectEvents(repo: Repo): void {\n  repoLog(repo, 'onDisconnectEvents');\n\n  const serverValues = repoGenerateServerValues(repo);\n  const resolvedOnDisconnectTree = newSparseSnapshotTree();\n  sparseSnapshotTreeForEachTree(\n    repo.onDisconnect_,\n    newEmptyPath(),\n    (path, node) => {\n      const resolved = resolveDeferredValueTree(\n        path,\n        node,\n        repo.serverSyncTree_,\n        serverValues\n      );\n      sparseSnapshotTreeRemember(resolvedOnDisconnectTree, path, resolved);\n    }\n  );\n  let events: Event[] = [];\n\n  sparseSnapshotTreeForEachTree(\n    resolvedOnDisconnectTree,\n    newEmptyPath(),\n    (path, snap) => {\n      events = events.concat(\n        syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap)\n      );\n      const affectedPath = repoAbortTransactions(repo, path);\n      repoRerunTransactions(repo, affectedPath);\n    }\n  );\n\n  repo.onDisconnect_ = newSparseSnapshotTree();\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, newEmptyPath(), events);\n}\n\nexport function repoOnDisconnectCancel(\n  repo: Repo,\n  path: Path,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repo.server_.onDisconnectCancel(path.toString(), (status, errorReason) => {\n    if (status === 'ok') {\n      sparseSnapshotTreeForget(repo.onDisconnect_, path);\n    }\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nexport function repoOnDisconnectSet(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectSetWithPriority(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  priority: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value, priority);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  if (isEmpty(childrenToMerge)) {\n    log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n    return;\n  }\n\n  repo.server_.onDisconnectMerge(\n    path.toString(),\n    childrenToMerge,\n    (status, errorReason) => {\n      if (status === 'ok') {\n        each(childrenToMerge, (childName: string, childNode: unknown) => {\n          const newChildNode = nodeFromJSON(childNode);\n          sparseSnapshotTreeRemember(\n            repo.onDisconnect_,\n            pathChild(path, childName),\n            newChildNode\n          );\n        });\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoAddEventCallbackForQuery(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): void {\n  let events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeAddEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeAddEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nexport function repoRemoveEventCallbackForQuery(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): void {\n  // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n  // a little bit by handling the return values anyways.\n  let events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeRemoveEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeRemoveEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nexport function repoInterrupt(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.interrupt(INTERRUPT_REASON);\n  }\n}\n\nexport function repoResume(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.resume(INTERRUPT_REASON);\n  }\n}\n\nexport function repoStats(repo: Repo, showDelta: boolean = false): void {\n  if (typeof console === 'undefined') {\n    return;\n  }\n\n  let stats: { [k: string]: unknown };\n  if (showDelta) {\n    if (!repo.statsListener_) {\n      repo.statsListener_ = new StatsListener(repo.stats_);\n    }\n    stats = repo.statsListener_.get();\n  } else {\n    stats = repo.stats_.get();\n  }\n\n  const longestName = Object.keys(stats).reduce(\n    (previousValue, currentValue) =>\n      Math.max(currentValue.length, previousValue),\n    0\n  );\n\n  each(stats, (stat: string, value: unknown) => {\n    let paddedStat = stat;\n    // pad stat names to be the same length (plus 2 extra spaces).\n    for (let i = stat.length; i < longestName + 2; i++) {\n      paddedStat += ' ';\n    }\n    console.log(paddedStat + value);\n  });\n}\n\nexport function repoStatsIncrementCounter(repo: Repo, metric: string): void {\n  repo.stats_.incrementCounter(metric);\n  statsReporterIncludeStat(repo.statsReporter_, metric);\n}\n\nfunction repoLog(repo: Repo, ...varArgs: unknown[]): void {\n  let prefix = '';\n  if (repo.persistentConnection_) {\n    prefix = repo.persistentConnection_.id + ':';\n  }\n  log(prefix, ...varArgs);\n}\n\nexport function repoCallOnCompleteCallback(\n  repo: Repo,\n  callback: ((status: Error | null, errorReason?: string) => void) | null,\n  status: string,\n  errorReason?: string | null\n): void {\n  if (callback) {\n    exceptionGuard(() => {\n      if (status === 'ok') {\n        callback(null);\n      } else {\n        const code = (status || 'error').toUpperCase();\n        let message = code;\n        if (errorReason) {\n          message += ': ' + errorReason;\n        }\n\n        const error = new Error(message);\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (error as any).code = code;\n        callback(error);\n      }\n    });\n  }\n}\n\n/**\n * Creates a new transaction, adds it to the transactions we're tracking, and\n * sends it to the server if possible.\n *\n * @param path - Path at which to do transaction.\n * @param transactionUpdate - Update callback.\n * @param onComplete - Completion callback.\n * @param unwatcher - Function that will be called when the transaction no longer\n * need data updates for `path`.\n * @param applyLocally - Whether or not to make intermediate results visible\n */\nexport function repoStartTransaction(\n  repo: Repo,\n  path: Path,\n  transactionUpdate: (a: unknown) => unknown,\n  onComplete: ((error: Error, committed: boolean, node: Node) => void) | null,\n  unwatcher: () => void,\n  applyLocally: boolean\n): void {\n  repoLog(repo, 'transaction on ' + path);\n\n  // Initialize transaction.\n  const transaction: Transaction = {\n    path,\n    update: transactionUpdate,\n    onComplete,\n    // One of TransactionStatus enums.\n    status: null,\n    // Used when combining transactions at different locations to figure out\n    // which one goes first.\n    order: LUIDGenerator(),\n    // Whether to raise local events for this transaction.\n    applyLocally,\n    // Count of how many times we've retried the transaction.\n    retryCount: 0,\n    // Function to call to clean up our .on() listener.\n    unwatcher,\n    // Stores why a transaction was aborted.\n    abortReason: null,\n    currentWriteId: null,\n    currentInputSnapshot: null,\n    currentOutputSnapshotRaw: null,\n    currentOutputSnapshotResolved: null\n  };\n\n  // Run transaction initially.\n  const currentState = repoGetLatestState(repo, path, undefined);\n  transaction.currentInputSnapshot = currentState;\n  const newVal = transaction.update(currentState.val());\n  if (newVal === undefined) {\n    // Abort transaction.\n    transaction.unwatcher();\n    transaction.currentOutputSnapshotRaw = null;\n    transaction.currentOutputSnapshotResolved = null;\n    if (transaction.onComplete) {\n      transaction.onComplete(null, false, transaction.currentInputSnapshot);\n    }\n  } else {\n    validateFirebaseData(\n      'transaction failed: Data returned ',\n      newVal,\n      transaction.path\n    );\n\n    // Mark as run and add to our queue.\n    transaction.status = TransactionStatus.RUN;\n    const queueNode = treeSubTree(repo.transactionQueueTree_, path);\n    const nodeQueue = treeGetValue(queueNode) || [];\n    nodeQueue.push(transaction);\n\n    treeSetValue(queueNode, nodeQueue);\n\n    // Update visibleData and raise events\n    // Note: We intentionally raise events after updating all of our\n    // transaction state, since the user could start new transactions from the\n    // event callbacks.\n    let priorityForNode;\n    if (\n      typeof newVal === 'object' &&\n      newVal !== null &&\n      contains(newVal, '.priority')\n    ) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      priorityForNode = safeGet(newVal as any, '.priority');\n      assert(\n        isValidPriority(priorityForNode),\n        'Invalid priority returned by transaction. ' +\n          'Priority must be a valid string, finite number, server value, or null.'\n      );\n    } else {\n      const currentNode =\n        syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path) ||\n        ChildrenNode.EMPTY_NODE;\n      priorityForNode = currentNode.getPriority().val();\n    }\n\n    const serverValues = repoGenerateServerValues(repo);\n    const newNodeUnresolved = nodeFromJSON(newVal, priorityForNode);\n    const newNode = resolveDeferredValueSnapshot(\n      newNodeUnresolved,\n      currentState,\n      serverValues\n    );\n    transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n    transaction.currentOutputSnapshotResolved = newNode;\n    transaction.currentWriteId = repoGetNextWriteId(repo);\n\n    const events = syncTreeApplyUserOverwrite(\n      repo.serverSyncTree_,\n      path,\n      newNode,\n      transaction.currentWriteId,\n      transaction.applyLocally\n    );\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n    repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n  }\n}\n\n/**\n * @param excludeSets - A specific set to exclude\n */\nfunction repoGetLatestState(\n  repo: Repo,\n  path: Path,\n  excludeSets?: number[]\n): Node {\n  return (\n    syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path, excludeSets) ||\n    ChildrenNode.EMPTY_NODE\n  );\n}\n\n/**\n * Sends any already-run transactions that aren't waiting for outstanding\n * transactions to complete.\n *\n * Externally it's called with no arguments, but it calls itself recursively\n * with a particular transactionQueueTree node to recurse through the tree.\n *\n * @param node - transactionQueueTree node to start at.\n */\nfunction repoSendReadyTransactions(\n  repo: Repo,\n  node: Tree<Transaction[]> = repo.transactionQueueTree_\n): void {\n  // Before recursing, make sure any completed transactions are removed.\n  if (!node) {\n    repoPruneCompletedTransactionsBelowNode(repo, node);\n  }\n\n  if (treeGetValue(node)) {\n    const queue = repoBuildTransactionQueue(repo, node);\n    assert(queue.length > 0, 'Sending zero length transaction queue');\n\n    const allRun = queue.every(\n      (transaction: Transaction) => transaction.status === TransactionStatus.RUN\n    );\n\n    // If they're all run (and not sent), we can send them.  Else, we must wait.\n    if (allRun) {\n      repoSendTransactionQueue(repo, treeGetPath(node), queue);\n    }\n  } else if (treeHasChildren(node)) {\n    treeForEachChild(node, childNode => {\n      repoSendReadyTransactions(repo, childNode);\n    });\n  }\n}\n\n/**\n * Given a list of run transactions, send them to the server and then handle\n * the result (success or failure).\n *\n * @param path - The location of the queue.\n * @param queue - Queue of transactions under the specified location.\n */\nfunction repoSendTransactionQueue(\n  repo: Repo,\n  path: Path,\n  queue: Transaction[]\n): void {\n  // Mark transactions as sent and increment retry count!\n  const setsToIgnore = queue.map(txn => {\n    return txn.currentWriteId;\n  });\n  const latestState = repoGetLatestState(repo, path, setsToIgnore);\n  let snapToSend = latestState;\n  const latestHash = latestState.hash();\n  for (let i = 0; i < queue.length; i++) {\n    const txn = queue[i];\n    assert(\n      txn.status === TransactionStatus.RUN,\n      'tryToSendTransactionQueue_: items in queue should all be run.'\n    );\n    txn.status = TransactionStatus.SENT;\n    txn.retryCount++;\n    const relativePath = newRelativePath(path, txn.path);\n    // If we've gotten to this point, the output snapshot must be defined.\n    snapToSend = snapToSend.updateChild(\n      relativePath /** @type {!Node} */,\n      txn.currentOutputSnapshotRaw\n    );\n  }\n\n  const dataToSend = snapToSend.val(true);\n  const pathToSend = path;\n\n  // Send the put.\n  repo.server_.put(\n    pathToSend.toString(),\n    dataToSend,\n    (status: string) => {\n      repoLog(repo, 'transaction put response', {\n        path: pathToSend.toString(),\n        status\n      });\n\n      let events: Event[] = [];\n      if (status === 'ok') {\n        // Queue up the callbacks and fire them after cleaning up all of our\n        // transaction state, since the callback could trigger more\n        // transactions or sets.\n        const callbacks = [];\n        for (let i = 0; i < queue.length; i++) {\n          queue[i].status = TransactionStatus.COMPLETED;\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId)\n          );\n          if (queue[i].onComplete) {\n            // We never unset the output snapshot, and given that this\n            // transaction is complete, it should be set\n            callbacks.push(() =>\n              queue[i].onComplete(\n                null,\n                true,\n                queue[i].currentOutputSnapshotResolved\n              )\n            );\n          }\n          queue[i].unwatcher();\n        }\n\n        // Now remove the completed transactions.\n        repoPruneCompletedTransactionsBelowNode(\n          repo,\n          treeSubTree(repo.transactionQueueTree_, path)\n        );\n        // There may be pending transactions that we can now send.\n        repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n        // Finally, trigger onComplete callbacks.\n        for (let i = 0; i < callbacks.length; i++) {\n          exceptionGuard(callbacks[i]);\n        }\n      } else {\n        // transactions are no longer sent.  Update their status appropriately.\n        if (status === 'datastale') {\n          for (let i = 0; i < queue.length; i++) {\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n              queue[i].status = TransactionStatus.NEEDS_ABORT;\n            } else {\n              queue[i].status = TransactionStatus.RUN;\n            }\n          }\n        } else {\n          warn(\n            'transaction at ' + pathToSend.toString() + ' failed: ' + status\n          );\n          for (let i = 0; i < queue.length; i++) {\n            queue[i].status = TransactionStatus.NEEDS_ABORT;\n            queue[i].abortReason = status;\n          }\n        }\n\n        repoRerunTransactions(repo, path);\n      }\n    },\n    latestHash\n  );\n}\n\n/**\n * Finds all transactions dependent on the data at changedPath and reruns them.\n *\n * Should be called any time cached data changes.\n *\n * Return the highest path that was affected by rerunning transactions. This\n * is the path at which events need to be raised for.\n *\n * @param changedPath - The path in mergedData that changed.\n * @returns The rootmost path that was affected by rerunning transactions.\n */\nfunction repoRerunTransactions(repo: Repo, changedPath: Path): Path {\n  const rootMostTransactionNode = repoGetAncestorTransactionNode(\n    repo,\n    changedPath\n  );\n  const path = treeGetPath(rootMostTransactionNode);\n\n  const queue = repoBuildTransactionQueue(repo, rootMostTransactionNode);\n  repoRerunTransactionQueue(repo, queue, path);\n\n  return path;\n}\n\n/**\n * Does all the work of rerunning transactions (as well as cleans up aborted\n * transactions and whatnot).\n *\n * @param queue - The queue of transactions to run.\n * @param path - The path the queue is for.\n */\nfunction repoRerunTransactionQueue(\n  repo: Repo,\n  queue: Transaction[],\n  path: Path\n): void {\n  if (queue.length === 0) {\n    return; // Nothing to do!\n  }\n\n  // Queue up the callbacks and fire them after cleaning up all of our\n  // transaction state, since the callback could trigger more transactions or\n  // sets.\n  const callbacks = [];\n  let events: Event[] = [];\n  // Ignore all of the sets we're going to re-run.\n  const txnsToRerun = queue.filter(q => {\n    return q.status === TransactionStatus.RUN;\n  });\n  const setsToIgnore = txnsToRerun.map(q => {\n    return q.currentWriteId;\n  });\n  for (let i = 0; i < queue.length; i++) {\n    const transaction = queue[i];\n    const relativePath = newRelativePath(path, transaction.path);\n    let abortTransaction = false,\n      abortReason;\n    assert(\n      relativePath !== null,\n      'rerunTransactionsUnderNode_: relativePath should not be null.'\n    );\n\n    if (transaction.status === TransactionStatus.NEEDS_ABORT) {\n      abortTransaction = true;\n      abortReason = transaction.abortReason;\n      events = events.concat(\n        syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          transaction.currentWriteId,\n          true\n        )\n      );\n    } else if (transaction.status === TransactionStatus.RUN) {\n      if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\n        abortTransaction = true;\n        abortReason = 'maxretry';\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            transaction.currentWriteId,\n            true\n          )\n        );\n      } else {\n        // This code reruns a transaction\n        const currentNode = repoGetLatestState(\n          repo,\n          transaction.path,\n          setsToIgnore\n        );\n        transaction.currentInputSnapshot = currentNode;\n        const newData = queue[i].update(currentNode.val());\n        if (newData !== undefined) {\n          validateFirebaseData(\n            'transaction failed: Data returned ',\n            newData,\n            transaction.path\n          );\n          let newDataNode = nodeFromJSON(newData);\n          const hasExplicitPriority =\n            typeof newData === 'object' &&\n            newData != null &&\n            contains(newData, '.priority');\n          if (!hasExplicitPriority) {\n            // Keep the old priority if there wasn't a priority explicitly specified.\n            newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n          }\n\n          const oldWriteId = transaction.currentWriteId;\n          const serverValues = repoGenerateServerValues(repo);\n          const newNodeResolved = resolveDeferredValueSnapshot(\n            newDataNode,\n            currentNode,\n            serverValues\n          );\n\n          transaction.currentOutputSnapshotRaw = newDataNode;\n          transaction.currentOutputSnapshotResolved = newNodeResolved;\n          transaction.currentWriteId = repoGetNextWriteId(repo);\n          // Mutates setsToIgnore in place\n          setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n          events = events.concat(\n            syncTreeApplyUserOverwrite(\n              repo.serverSyncTree_,\n              transaction.path,\n              newNodeResolved,\n              transaction.currentWriteId,\n              transaction.applyLocally\n            )\n          );\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, oldWriteId, true)\n          );\n        } else {\n          abortTransaction = true;\n          abortReason = 'nodata';\n          events = events.concat(\n            syncTreeAckUserWrite(\n              repo.serverSyncTree_,\n              transaction.currentWriteId,\n              true\n            )\n          );\n        }\n      }\n    }\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n    events = [];\n    if (abortTransaction) {\n      // Abort.\n      queue[i].status = TransactionStatus.COMPLETED;\n\n      // Removing a listener can trigger pruning which can muck with\n      // mergedData/visibleData (as it prunes data). So defer the unwatcher\n      // until we're done.\n      (function (unwatcher) {\n        setTimeout(unwatcher, Math.floor(0));\n      })(queue[i].unwatcher);\n\n      if (queue[i].onComplete) {\n        if (abortReason === 'nodata') {\n          callbacks.push(() =>\n            queue[i].onComplete(null, false, queue[i].currentInputSnapshot)\n          );\n        } else {\n          callbacks.push(() =>\n            queue[i].onComplete(new Error(abortReason), false, null)\n          );\n        }\n      }\n    }\n  }\n\n  // Clean up completed transactions.\n  repoPruneCompletedTransactionsBelowNode(repo, repo.transactionQueueTree_);\n\n  // Now fire callbacks, now that we're in a good, known state.\n  for (let i = 0; i < callbacks.length; i++) {\n    exceptionGuard(callbacks[i]);\n  }\n\n  // Try to send the transaction result to the server.\n  repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n}\n\n/**\n * Returns the rootmost ancestor node of the specified path that has a pending\n * transaction on it, or just returns the node for the given path if there are\n * no pending transactions on any ancestor.\n *\n * @param path - The location to start at.\n * @returns The rootmost node with a transaction.\n */\nfunction repoGetAncestorTransactionNode(\n  repo: Repo,\n  path: Path\n): Tree<Transaction[]> {\n  let front;\n\n  // Start at the root and walk deeper into the tree towards path until we\n  // find a node with pending transactions.\n  let transactionNode = repo.transactionQueueTree_;\n  front = pathGetFront(path);\n  while (front !== null && treeGetValue(transactionNode) === undefined) {\n    transactionNode = treeSubTree(transactionNode, front);\n    path = pathPopFront(path);\n    front = pathGetFront(path);\n  }\n\n  return transactionNode;\n}\n\n/**\n * Builds the queue of all transactions at or below the specified\n * transactionNode.\n *\n * @param transactionNode\n * @returns The generated queue.\n */\nfunction repoBuildTransactionQueue(\n  repo: Repo,\n  transactionNode: Tree<Transaction[]>\n): Transaction[] {\n  // Walk any child transaction queues and aggregate them into a single queue.\n  const transactionQueue: Transaction[] = [];\n  repoAggregateTransactionQueuesForNode(\n    repo,\n    transactionNode,\n    transactionQueue\n  );\n\n  // Sort them by the order the transactions were created.\n  transactionQueue.sort((a, b) => a.order - b.order);\n\n  return transactionQueue;\n}\n\nfunction repoAggregateTransactionQueuesForNode(\n  repo: Repo,\n  node: Tree<Transaction[]>,\n  queue: Transaction[]\n): void {\n  const nodeQueue = treeGetValue(node);\n  if (nodeQueue) {\n    for (let i = 0; i < nodeQueue.length; i++) {\n      queue.push(nodeQueue[i]);\n    }\n  }\n\n  treeForEachChild(node, child => {\n    repoAggregateTransactionQueuesForNode(repo, child, queue);\n  });\n}\n\n/**\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\n */\nfunction repoPruneCompletedTransactionsBelowNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    let to = 0;\n    for (let from = 0; from < queue.length; from++) {\n      if (queue[from].status !== TransactionStatus.COMPLETED) {\n        queue[to] = queue[from];\n        to++;\n      }\n    }\n    queue.length = to;\n    treeSetValue(node, queue.length > 0 ? queue : undefined);\n  }\n\n  treeForEachChild(node, childNode => {\n    repoPruneCompletedTransactionsBelowNode(repo, childNode);\n  });\n}\n\n/**\n * Aborts all transactions on ancestors or descendants of the specified path.\n * Called when doing a set() or update() since we consider them incompatible\n * with transactions.\n *\n * @param path - Path for which we want to abort related transactions.\n */\nfunction repoAbortTransactions(repo: Repo, path: Path): Path {\n  const affectedPath = treeGetPath(repoGetAncestorTransactionNode(repo, path));\n\n  const transactionNode = treeSubTree(repo.transactionQueueTree_, path);\n\n  treeForEachAncestor(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  repoAbortTransactionsOnNode(repo, transactionNode);\n\n  treeForEachDescendant(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  return affectedPath;\n}\n\n/**\n * Abort transactions stored in this transaction queue node.\n *\n * @param node - Node to abort transactions for.\n */\nfunction repoAbortTransactionsOnNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    // Queue up the callbacks and fire them after cleaning up all of our\n    // transaction state, since the callback could trigger more transactions\n    // or sets.\n    const callbacks = [];\n\n    // Go through queue.  Any already-sent transactions must be marked for\n    // abort, while the unsent ones can be immediately aborted and removed.\n    let events: Event[] = [];\n    let lastSent = -1;\n    for (let i = 0; i < queue.length; i++) {\n      if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n        // Already marked.  No action needed.\n      } else if (queue[i].status === TransactionStatus.SENT) {\n        assert(\n          lastSent === i - 1,\n          'All SENT items should be at beginning of queue.'\n        );\n        lastSent = i;\n        // Mark transaction for abort when it comes back.\n        queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\n        queue[i].abortReason = 'set';\n      } else {\n        assert(\n          queue[i].status === TransactionStatus.RUN,\n          'Unexpected transaction status in abort'\n        );\n        // We can abort it immediately.\n        queue[i].unwatcher();\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            queue[i].currentWriteId,\n            true\n          )\n        );\n        if (queue[i].onComplete) {\n          callbacks.push(\n            queue[i].onComplete.bind(null, new Error('set'), false, null)\n          );\n        }\n      }\n    }\n    if (lastSent === -1) {\n      // We're not waiting for any sent transactions.  We can clear the queue.\n      treeSetValue(node, undefined);\n    } else {\n      // Remove the transactions we aborted.\n      queue.length = lastSent + 1;\n    }\n\n    // Now fire the callbacks.\n    eventQueueRaiseEventsForChangedPath(\n      repo.eventQueue_,\n      treeGetPath(node),\n      events\n    );\n    for (let i = 0; i < callbacks.length; i++) {\n      exceptionGuard(callbacks[i]);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../../RepoInfo';\nimport { Path } from '../Path';\nimport { warnIfPageIsSecure, warn, fatal } from '../util';\n\nfunction decodePath(pathString: string): string {\n  let pathStringDecoded = '';\n  const pieces = pathString.split('/');\n  for (let i = 0; i < pieces.length; i++) {\n    if (pieces[i].length > 0) {\n      let piece = pieces[i];\n      try {\n        piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n      } catch (e) {}\n      pathStringDecoded += '/' + piece;\n    }\n  }\n  return pathStringDecoded;\n}\n\n/**\n * @returns key value hash\n */\nfunction decodeQuery(queryString: string): { [key: string]: string } {\n  const results = {};\n  if (queryString.charAt(0) === '?') {\n    queryString = queryString.substring(1);\n  }\n  for (const segment of queryString.split('&')) {\n    if (segment.length === 0) {\n      continue;\n    }\n    const kv = segment.split('=');\n    if (kv.length === 2) {\n      results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n    } else {\n      warn(`Invalid query segment '${segment}' in query '${queryString}'`);\n    }\n  }\n  return results;\n}\n\nexport const parseRepoInfo = function (\n  dataURL: string,\n  nodeAdmin: boolean\n): { repoInfo: RepoInfo; path: Path } {\n  const parsedUrl = parseDatabaseURL(dataURL),\n    namespace = parsedUrl.namespace;\n\n  if (parsedUrl.domain === 'firebase.com') {\n    fatal(\n      parsedUrl.host +\n        ' is no longer supported. ' +\n        'Please use <YOUR FIREBASE>.firebaseio.com instead'\n    );\n  }\n\n  // Catch common error of uninitialized namespace value.\n  if (\n    (!namespace || namespace === 'undefined') &&\n    parsedUrl.domain !== 'localhost'\n  ) {\n    fatal(\n      'Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com'\n    );\n  }\n\n  if (!parsedUrl.secure) {\n    warnIfPageIsSecure();\n  }\n\n  const webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n\n  return {\n    repoInfo: new RepoInfo(\n      parsedUrl.host,\n      parsedUrl.secure,\n      namespace,\n      webSocketOnly,\n      nodeAdmin,\n      /*persistenceKey=*/ '',\n      /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain\n    ),\n    path: new Path(parsedUrl.pathString)\n  };\n};\n\nexport const parseDatabaseURL = function (dataURL: string): {\n  host: string;\n  port: number;\n  domain: string;\n  subdomain: string;\n  secure: boolean;\n  scheme: string;\n  pathString: string;\n  namespace: string;\n} {\n  // Default to empty strings in the event of a malformed string.\n  let host = '',\n    domain = '',\n    subdomain = '',\n    pathString = '',\n    namespace = '';\n\n  // Always default to SSL, unless otherwise specified.\n  let secure = true,\n    scheme = 'https',\n    port = 443;\n\n  // Don't do any validation here. The caller is responsible for validating the result of parsing.\n  if (typeof dataURL === 'string') {\n    // Parse scheme.\n    let colonInd = dataURL.indexOf('//');\n    if (colonInd >= 0) {\n      scheme = dataURL.substring(0, colonInd - 1);\n      dataURL = dataURL.substring(colonInd + 2);\n    }\n\n    // Parse host, path, and query string.\n    let slashInd = dataURL.indexOf('/');\n    if (slashInd === -1) {\n      slashInd = dataURL.length;\n    }\n    let questionMarkInd = dataURL.indexOf('?');\n    if (questionMarkInd === -1) {\n      questionMarkInd = dataURL.length;\n    }\n    host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\n    if (slashInd < questionMarkInd) {\n      // For pathString, questionMarkInd will always come after slashInd\n      pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\n    }\n    const queryParams = decodeQuery(\n      dataURL.substring(Math.min(dataURL.length, questionMarkInd))\n    );\n\n    // If we have a port, use scheme for determining if it's secure.\n    colonInd = host.indexOf(':');\n    if (colonInd >= 0) {\n      secure = scheme === 'https' || scheme === 'wss';\n      port = parseInt(host.substring(colonInd + 1), 10);\n    } else {\n      colonInd = host.length;\n    }\n\n    const hostWithoutPort = host.slice(0, colonInd);\n    if (hostWithoutPort.toLowerCase() === 'localhost') {\n      domain = 'localhost';\n    } else if (hostWithoutPort.split('.').length <= 2) {\n      domain = hostWithoutPort;\n    } else {\n      // Interpret the subdomain of a 3 or more component URL as the namespace name.\n      const dotInd = host.indexOf('.');\n      subdomain = host.substring(0, dotInd).toLowerCase();\n      domain = host.substring(dotInd + 1);\n      // Normalize namespaces to lowercase to share storage / connection.\n      namespace = subdomain;\n    }\n    // Always treat the value of the `ns` as the namespace name if it is present.\n    if ('ns' in queryParams) {\n      namespace = queryParams['ns'];\n    }\n  }\n\n  return {\n    host,\n    port,\n    domain,\n    subdomain,\n    secure,\n    scheme,\n    pathString,\n    namespace\n  };\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport {\n  tryParseInt,\n  MAX_NAME,\n  MIN_NAME,\n  INTEGER_32_MIN,\n  INTEGER_32_MAX\n} from '../util/util';\n\n// Modeled after base64 web-safe chars, but ordered by ASCII.\nconst PUSH_CHARS =\n  '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n\nconst MIN_PUSH_CHAR = '-';\n\nconst MAX_PUSH_CHAR = 'z';\n\nconst MAX_KEY_LEN = 786;\n\n/**\n * Fancy ID generator that creates 20-character string identifiers with the\n * following properties:\n *\n * 1. They're based on timestamp so that they sort *after* any existing ids.\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\n *    collide with other clients' IDs.\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\n *    that will sort properly).\n * 4. They're monotonically increasing. Even if you generate more than one in\n *    the same timestamp, the latter ones will sort after the former ones. We do\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\n *    in the case of a timestamp collision).\n */\nexport const nextPushId = (function () {\n  // Timestamp of last push, used to prevent local collisions if you push twice\n  // in one ms.\n  let lastPushTime = 0;\n\n  // We generate 72-bits of randomness which get turned into 12 characters and\n  // appended to the timestamp to prevent collisions with other clients. We\n  // store the last characters we generated because in the event of a collision,\n  // we'll use those same characters except \"incremented\" by one.\n  const lastRandChars: number[] = [];\n\n  return function (now: number) {\n    const duplicateTime = now === lastPushTime;\n    lastPushTime = now;\n\n    let i;\n    const timeStampChars = new Array(8);\n    for (i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\n      // NOTE: Can't use << here because javascript will convert to int and lose\n      // the upper bits.\n      now = Math.floor(now / 64);\n    }\n    assert(now === 0, 'Cannot push at time == 0');\n\n    let id = timeStampChars.join('');\n\n    if (!duplicateTime) {\n      for (i = 0; i < 12; i++) {\n        lastRandChars[i] = Math.floor(Math.random() * 64);\n      }\n    } else {\n      // If the timestamp hasn't changed since last push, use the same random\n      // number, except incremented by 1.\n      for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n        lastRandChars[i] = 0;\n      }\n      lastRandChars[i]++;\n    }\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n    assert(id.length === 20, 'nextPushId: Length should be 20.');\n\n    return id;\n  };\n})();\n\nexport const successor = function (key: string) {\n  if (key === '' + INTEGER_32_MAX) {\n    // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\n    return MIN_PUSH_CHAR;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt + 1);\n  }\n  const next = new Array(key.length);\n\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n\n  if (next.length < MAX_KEY_LEN) {\n    next.push(MIN_PUSH_CHAR);\n    return next.join('');\n  }\n\n  let i = next.length - 1;\n\n  while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\n    i--;\n  }\n\n  // `successor` was called on the largest possible key, so return the\n  // MAX_NAME, which sorts larger than all keys.\n  if (i === -1) {\n    return MAX_NAME;\n  }\n\n  const source = next[i];\n  const sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\n  next[i] = sourcePlusOne;\n\n  return next.slice(0, i + 1).join('');\n};\n\n// `key` is assumed to be non-empty.\nexport const predecessor = function (key: string) {\n  if (key === '' + INTEGER_32_MIN) {\n    return MIN_NAME;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt - 1);\n  }\n  const next = new Array(key.length);\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n  // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\n  // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\n  // than that, `predecessor(predecessor(key))`, is\n  //\n  // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\n  //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\n  //\n  // analogous to increment/decrement for base-10 integers.\n  //\n  // This works because lexigographic comparison works character-by-character,\n  // using length as a tie-breaker if one key is a prefix of the other.\n  if (next[next.length - 1] === MIN_PUSH_CHAR) {\n    if (next.length === 1) {\n      // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\n      return '' + INTEGER_32_MAX;\n    }\n    delete next[next.length - 1];\n    return next.join('');\n  }\n  // Replace the last character with it's immediate predecessor, and\n  // fill the suffix of the key with MAX_PUSH_CHAR. This is the\n  // lexicographically largest possible key smaller than `key`.\n  next[next.length - 1] = PUSH_CHARS.charAt(\n    PUSH_CHARS.indexOf(next[next.length - 1]) - 1\n  );\n  return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\n};\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, getModularInstance, Deferred } from '@firebase/util';\n\nimport {\n  Repo,\n  repoAddEventCallbackForQuery,\n  repoGetValue,\n  repoRemoveEventCallbackForQuery,\n  repoServerTime,\n  repoSetWithPriority,\n  repoUpdate\n} from '../core/Repo';\nimport { ChildrenNode } from '../core/snap/ChildrenNode';\nimport { Index } from '../core/snap/indexes/Index';\nimport { KEY_INDEX } from '../core/snap/indexes/KeyIndex';\nimport { PathIndex } from '../core/snap/indexes/PathIndex';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../core/snap/indexes/ValueIndex';\nimport { Node } from '../core/snap/Node';\nimport { syncPointSetReferenceConstructor } from '../core/SyncPoint';\nimport { syncTreeSetReferenceConstructor } from '../core/SyncTree';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { nextPushId } from '../core/util/NextPushId';\nimport {\n  Path,\n  pathEquals,\n  pathGetBack,\n  pathGetFront,\n  pathChild,\n  pathParent,\n  pathToUrlEncodedString,\n  pathIsEmpty\n} from '../core/util/Path';\nimport {\n  fatal,\n  MAX_NAME,\n  MIN_NAME,\n  ObjectToUniqueKey\n} from '../core/util/util';\nimport {\n  isValidPriority,\n  validateFirebaseDataArg,\n  validateFirebaseMergeDataArg,\n  validateKey,\n  validatePathString,\n  validatePriority,\n  validateRootPathString,\n  validateUrl,\n  validateWritablePath\n} from '../core/util/validation';\nimport { Change } from '../core/view/Change';\nimport { CancelEvent, DataEvent, EventType } from '../core/view/Event';\nimport {\n  CallbackContext,\n  EventRegistration,\n  QueryContext,\n  UserCallback\n} from '../core/view/EventRegistration';\nimport {\n  QueryParams,\n  queryParamsEndAt,\n  queryParamsEndBefore,\n  queryParamsGetQueryObject,\n  queryParamsLimitToFirst,\n  queryParamsLimitToLast,\n  queryParamsOrderBy,\n  queryParamsStartAfter,\n  queryParamsStartAt\n} from '../core/view/QueryParams';\n\nimport { Database } from './Database';\nimport { OnDisconnect } from './OnDisconnect';\nimport {\n  ListenOptions,\n  Query as Query,\n  DatabaseReference,\n  Unsubscribe,\n  ThenableReference\n} from './Reference';\n\n/**\n * @internal\n */\nexport class QueryImpl implements Query, QueryContext {\n  /**\n   * @hideconstructor\n   */\n  constructor(\n    readonly _repo: Repo,\n    readonly _path: Path,\n    readonly _queryParams: QueryParams,\n    readonly _orderByCalled: boolean\n  ) {}\n\n  get key(): string | null {\n    if (pathIsEmpty(this._path)) {\n      return null;\n    } else {\n      return pathGetBack(this._path);\n    }\n  }\n\n  get ref(): DatabaseReference {\n    return new ReferenceImpl(this._repo, this._path);\n  }\n\n  get _queryIdentifier(): string {\n    const obj = queryParamsGetQueryObject(this._queryParams);\n    const id = ObjectToUniqueKey(obj);\n    return id === '{}' ? 'default' : id;\n  }\n\n  /**\n   * An object representation of the query parameters used by this Query.\n   */\n  get _queryObject(): object {\n    return queryParamsGetQueryObject(this._queryParams);\n  }\n\n  isEqual(other: QueryImpl | null): boolean {\n    other = getModularInstance(other);\n    if (!(other instanceof QueryImpl)) {\n      return false;\n    }\n\n    const sameRepo = this._repo === other._repo;\n    const samePath = pathEquals(this._path, other._path);\n    const sameQueryIdentifier =\n      this._queryIdentifier === other._queryIdentifier;\n\n    return sameRepo && samePath && sameQueryIdentifier;\n  }\n\n  toJSON(): string {\n    return this.toString();\n  }\n\n  toString(): string {\n    return this._repo.toString() + pathToUrlEncodedString(this._path);\n  }\n}\n\n/**\n * Validates that no other order by call has been made\n */\nfunction validateNoPreviousOrderByCall(query: QueryImpl, fnName: string) {\n  if (query._orderByCalled === true) {\n    throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n  }\n}\n\n/**\n * Validates start/end values for queries.\n */\nfunction validateQueryEndpoints(params: QueryParams) {\n  let startNode = null;\n  let endNode = null;\n  if (params.hasStart()) {\n    startNode = params.getIndexStartValue();\n  }\n  if (params.hasEnd()) {\n    endNode = params.getIndexEndValue();\n  }\n\n  if (params.getIndex() === KEY_INDEX) {\n    const tooManyArgsError =\n      'Query: When ordering by key, you may only pass one argument to ' +\n      'startAt(), endAt(), or equalTo().';\n    const wrongArgTypeError =\n      'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' +\n      'endAt(), endBefore(), or equalTo() must be a string.';\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      if (startName !== MIN_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof startNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      if (endName !== MAX_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof endNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n  } else if (params.getIndex() === PRIORITY_INDEX) {\n    if (\n      (startNode != null && !isValidPriority(startNode)) ||\n      (endNode != null && !isValidPriority(endNode))\n    ) {\n      throw new Error(\n        'Query: When ordering by priority, the first argument passed to startAt(), ' +\n          'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' +\n          '(null, a number, or a string).'\n      );\n    }\n  } else {\n    assert(\n      params.getIndex() instanceof PathIndex ||\n        params.getIndex() === VALUE_INDEX,\n      'unknown index type.'\n    );\n    if (\n      (startNode != null && typeof startNode === 'object') ||\n      (endNode != null && typeof endNode === 'object')\n    ) {\n      throw new Error(\n        'Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' +\n          'equalTo() cannot be an object.'\n      );\n    }\n  }\n}\n\n/**\n * Validates that limit* has been called with the correct combination of parameters\n */\nfunction validateLimit(params: QueryParams) {\n  if (\n    params.hasStart() &&\n    params.hasEnd() &&\n    params.hasLimit() &&\n    !params.hasAnchoredLimit()\n  ) {\n    throw new Error(\n      \"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" +\n        'limitToFirst() or limitToLast() instead.'\n    );\n  }\n}\n/**\n * @internal\n */\nexport class ReferenceImpl extends QueryImpl implements DatabaseReference {\n  /** @hideconstructor */\n  constructor(repo: Repo, path: Path) {\n    super(repo, path, new QueryParams(), false);\n  }\n\n  get parent(): ReferenceImpl | null {\n    const parentPath = pathParent(this._path);\n    return parentPath === null\n      ? null\n      : new ReferenceImpl(this._repo, parentPath);\n  }\n\n  get root(): ReferenceImpl {\n    let ref: ReferenceImpl = this;\n    while (ref.parent !== null) {\n      ref = ref.parent;\n    }\n    return ref;\n  }\n}\n\n/**\n * A `DataSnapshot` contains data from a Database location.\n *\n * Any time you read data from the Database, you receive the data as a\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\n * JavaScript object by calling the `val()` method. Alternatively, you can\n * traverse into the snapshot by calling `child()` to return child snapshots\n * (which you could then call `val()` on).\n *\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\n * a Database location. It cannot be modified and will never change (to modify\n * data, you always call the `set()` method on a `Reference` directly).\n */\nexport class DataSnapshot {\n  /**\n   * @param _node - A SnapshotNode to wrap.\n   * @param ref - The location this snapshot came from.\n   * @param _index - The iteration order for this snapshot\n   * @hideconstructor\n   */\n  constructor(\n    readonly _node: Node,\n    /**\n     * The location of this DataSnapshot.\n     */\n    readonly ref: DatabaseReference,\n    readonly _index: Index\n  ) {}\n\n  /**\n   * Gets the priority value of the data in this `DataSnapshot`.\n   *\n   * Applications need not use priority but can order collections by\n   * ordinary properties (see\n   * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\n   * ).\n   */\n  get priority(): string | number | null {\n    // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n    return this._node.getPriority().val() as string | number | null;\n  }\n\n  /**\n   * The key (last part of the path) of the location of this `DataSnapshot`.\n   *\n   * The last token in a Database location is considered its key. For example,\n   * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\n   * `DataSnapshot` will return the key for the location that generated it.\n   * However, accessing the key on the root URL of a Database will return\n   * `null`.\n   */\n  get key(): string | null {\n    return this.ref.key;\n  }\n\n  /** Returns the number of child properties of this `DataSnapshot`. */\n  get size(): number {\n    return this._node.numChildren();\n  }\n\n  /**\n   * Gets another `DataSnapshot` for the location at the specified relative path.\n   *\n   * Passing a relative path to the `child()` method of a DataSnapshot returns\n   * another `DataSnapshot` for the location at the specified relative path. The\n   * relative path can either be a simple child name (for example, \"ada\") or a\n   * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\n   * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\n   * whose value is `null`) is returned.\n   *\n   * @param path - A relative path to the location of child data.\n   */\n  child(path: string): DataSnapshot {\n    const childPath = new Path(path);\n    const childRef = child(this.ref, path);\n    return new DataSnapshot(\n      this._node.getChild(childPath),\n      childRef,\n      PRIORITY_INDEX\n    );\n  }\n  /**\n   * Returns true if this `DataSnapshot` contains any data. It is slightly more\n   * efficient than using `snapshot.val() !== null`.\n   */\n  exists(): boolean {\n    return !this._node.isEmpty();\n  }\n\n  /**\n   * Exports the entire contents of the DataSnapshot as a JavaScript object.\n   *\n   * The `exportVal()` method is similar to `val()`, except priority information\n   * is included (if available), making it suitable for backing up your data.\n   *\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\n   *   Array, string, number, boolean, or `null`).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  exportVal(): any {\n    return this._node.val(true);\n  }\n\n  /**\n   * Enumerates the top-level children in the `IteratedDataSnapshot`.\n   *\n   * Because of the way JavaScript objects work, the ordering of data in the\n   * JavaScript object returned by `val()` is not guaranteed to match the\n   * ordering on the server nor the ordering of `onChildAdded()` events. That is\n   * where `forEach()` comes in handy. It guarantees the children of a\n   * `DataSnapshot` will be iterated in their query order.\n   *\n   * If no explicit `orderBy*()` method is used, results are returned\n   * ordered by key (unless priorities are used, in which case, results are\n   * returned by priority).\n   *\n   * @param action - A function that will be called for each child DataSnapshot.\n   * The callback can return true to cancel further enumeration.\n   * @returns true if enumeration was canceled due to your callback returning\n   * true.\n   */\n  forEach(action: (child: IteratedDataSnapshot) => boolean | void): boolean {\n    if (this._node.isLeafNode()) {\n      return false;\n    }\n\n    const childrenNode = this._node as ChildrenNode;\n    // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n    return !!childrenNode.forEachChild(this._index, (key, node) => {\n      return action(\n        new DataSnapshot(node, child(this.ref, key), PRIORITY_INDEX)\n      );\n    });\n  }\n\n  /**\n   * Returns true if the specified child path has (non-null) data.\n   *\n   * @param path - A relative path to the location of a potential child.\n   * @returns `true` if data exists at the specified child path; else\n   *  `false`.\n   */\n  hasChild(path: string): boolean {\n    const childPath = new Path(path);\n    return !this._node.getChild(childPath).isEmpty();\n  }\n\n  /**\n   * Returns whether or not the `DataSnapshot` has any non-`null` child\n   * properties.\n   *\n   * You can use `hasChildren()` to determine if a `DataSnapshot` has any\n   * children. If it does, you can enumerate them using `forEach()`. If it\n   * doesn't, then either this snapshot contains a primitive value (which can be\n   * retrieved with `val()`) or it is empty (in which case, `val()` will return\n   * `null`).\n   *\n   * @returns true if this snapshot has any children; else false.\n   */\n  hasChildren(): boolean {\n    if (this._node.isLeafNode()) {\n      return false;\n    } else {\n      return !this._node.isEmpty();\n    }\n  }\n\n  /**\n   * Returns a JSON-serializable representation of this object.\n   */\n  toJSON(): object | null {\n    return this.exportVal();\n  }\n\n  /**\n   * Extracts a JavaScript value from a `DataSnapshot`.\n   *\n   * Depending on the data in a `DataSnapshot`, the `val()` method may return a\n   * scalar type (string, number, or boolean), an array, or an object. It may\n   * also return null, indicating that the `DataSnapshot` is empty (contains no\n   * data).\n   *\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\n   *   Array, string, number, boolean, or `null`).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  val(): any {\n    return this._node.val();\n  }\n}\n\n/**\n * Represents a child snapshot of a `Reference` that is being iterated over. The key will never be undefined.\n */\nexport interface IteratedDataSnapshot extends DataSnapshot {\n  key: string; // key of the location of this snapshot.\n}\n\n/**\n *\n * Returns a `Reference` representing the location in the Database\n * corresponding to the provided path. If no path is provided, the `Reference`\n * will point to the root of the Database.\n *\n * @param db - The database instance to obtain a reference for.\n * @param path - Optional path representing the location the returned\n *   `Reference` will point. If not provided, the returned `Reference` will\n *   point to the root of the Database.\n * @returns If a path is provided, a `Reference`\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\n *   root of the Database.\n */\nexport function ref(db: Database, path?: string): DatabaseReference {\n  db = getModularInstance(db);\n  db._checkNotDeleted('ref');\n  return path !== undefined ? child(db._root, path) : db._root;\n}\n\n/**\n * Returns a `Reference` representing the location in the Database\n * corresponding to the provided Firebase URL.\n *\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\n * has a different domain than the current `Database` instance.\n *\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\n * and are not applied to the returned `Reference`.\n *\n * @param db - The database instance to obtain a reference for.\n * @param url - The Firebase URL at which the returned `Reference` will\n *   point.\n * @returns A `Reference` pointing to the provided\n *   Firebase URL.\n */\nexport function refFromURL(db: Database, url: string): DatabaseReference {\n  db = getModularInstance(db);\n  db._checkNotDeleted('refFromURL');\n  const parsedURL = parseRepoInfo(url, db._repo.repoInfo_.nodeAdmin);\n  validateUrl('refFromURL', parsedURL);\n\n  const repoInfo = parsedURL.repoInfo;\n  if (\n    !db._repo.repoInfo_.isCustomHost() &&\n    repoInfo.host !== db._repo.repoInfo_.host\n  ) {\n    fatal(\n      'refFromURL' +\n        ': Host name does not match the current database: ' +\n        '(found ' +\n        repoInfo.host +\n        ' but expected ' +\n        db._repo.repoInfo_.host +\n        ')'\n    );\n  }\n\n  return ref(db, parsedURL.path.toString());\n}\n/**\n * Gets a `Reference` for the location at the specified relative path.\n *\n * The relative path can either be a simple child name (for example, \"ada\") or\n * a deeper slash-separated path (for example, \"ada/name/first\").\n *\n * @param parent - The parent location.\n * @param path - A relative path from this location to the desired child\n *   location.\n * @returns The specified child location.\n */\nexport function child(\n  parent: DatabaseReference,\n  path: string\n): DatabaseReference {\n  parent = getModularInstance(parent);\n  if (pathGetFront(parent._path) === null) {\n    validateRootPathString('child', 'path', path, false);\n  } else {\n    validatePathString('child', 'path', path, false);\n  }\n  return new ReferenceImpl(parent._repo, pathChild(parent._path, path));\n}\n\n/**\n * Returns an `OnDisconnect` object - see\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n * for more information on how to use it.\n *\n * @param ref - The reference to add OnDisconnect triggers for.\n */\nexport function onDisconnect(ref: DatabaseReference): OnDisconnect {\n  ref = getModularInstance(ref) as ReferenceImpl;\n  return new OnDisconnect(ref._repo, ref._path);\n}\n\nexport interface ThenableReferenceImpl\n  extends ReferenceImpl,\n    Pick<Promise<ReferenceImpl>, 'then' | 'catch'> {}\n\n/**\n * Generates a new child location using a unique key and returns its\n * `Reference`.\n *\n * This is the most common pattern for adding data to a collection of items.\n *\n * If you provide a value to `push()`, the value is written to the\n * generated location. If you don't pass a value, nothing is written to the\n * database and the child remains empty (but you can use the `Reference`\n * elsewhere).\n *\n * The unique keys generated by `push()` are ordered by the current time, so the\n * resulting list of items is chronologically sorted. The keys are also\n * designed to be unguessable (they contain 72 random bits of entropy).\n *\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}.\n * See {@link https://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}.\n *\n * @param parent - The parent location.\n * @param value - Optional value to be written at the generated location.\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\n * but can be used immediately as the `Reference` to the child location.\n */\nexport function push(\n  parent: DatabaseReference,\n  value?: unknown\n): ThenableReference {\n  parent = getModularInstance(parent);\n  validateWritablePath('push', parent._path);\n  validateFirebaseDataArg('push', value, parent._path, true);\n  const now = repoServerTime(parent._repo);\n  const name = nextPushId(now);\n\n  // push() returns a ThennableReference whose promise is fulfilled with a\n  // regular Reference. We use child() to create handles to two different\n  // references. The first is turned into a ThennableReference below by adding\n  // then() and catch() methods and is used as the return value of push(). The\n  // second remains a regular Reference and is used as the fulfilled value of\n  // the first ThennableReference.\n  const thennablePushRef: Partial<ThenableReferenceImpl> = child(\n    parent,\n    name\n  ) as ReferenceImpl;\n  const pushRef = child(parent, name) as ReferenceImpl;\n\n  let promise: Promise<ReferenceImpl>;\n  if (value != null) {\n    promise = set(pushRef, value).then(() => pushRef);\n  } else {\n    promise = Promise.resolve(pushRef);\n  }\n\n  thennablePushRef.then = promise.then.bind(promise);\n  thennablePushRef.catch = promise.then.bind(promise, undefined);\n  return thennablePushRef as ThenableReferenceImpl;\n}\n\n/**\n * Removes the data at this Database location.\n *\n * Any data at child locations will also be deleted.\n *\n * The effect of the remove will be visible immediately and the corresponding\n * event 'value' will be triggered. Synchronization of the remove to the\n * Firebase servers will also be started, and the returned Promise will resolve\n * when complete. If provided, the onComplete callback will be called\n * asynchronously after synchronization has finished.\n *\n * @param ref - The location to remove.\n * @returns Resolves when remove on server is complete.\n */\nexport function remove(ref: DatabaseReference): Promise<void> {\n  validateWritablePath('remove', ref._path);\n  return set(ref, null);\n}\n\n/**\n * Writes data to this Database location.\n *\n * This will overwrite any data at this location and all child locations.\n *\n * The effect of the write will be visible immediately, and the corresponding\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\n * the data to the Firebase servers will also be started, and the returned\n * Promise will resolve when complete. If provided, the `onComplete` callback\n * will be called asynchronously after synchronization has finished.\n *\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\n * all data at this location and all child locations will be deleted.\n *\n * `set()` will remove any priority stored at this location, so if priority is\n * meant to be preserved, you need to use `setWithPriority()` instead.\n *\n * Note that modifying data with `set()` will cancel any pending transactions\n * at that location, so extreme care should be taken if mixing `set()` and\n * `transaction()` to modify the same data.\n *\n * A single `set()` will generate a single \"value\" event at the location where\n * the `set()` was performed.\n *\n * @param ref - The location to write to.\n * @param value - The value to be written (string, number, boolean, object,\n *   array, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function set(ref: DatabaseReference, value: unknown): Promise<void> {\n  ref = getModularInstance(ref);\n  validateWritablePath('set', ref._path);\n  validateFirebaseDataArg('set', value, ref._path, false);\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    ref._path,\n    value,\n    /*priority=*/ null,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Sets a priority for the data at this Database location.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\n * ).\n *\n * @param ref - The location to write to.\n * @param priority - The priority to be written (string, number, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function setPriority(\n  ref: DatabaseReference,\n  priority: string | number | null\n): Promise<void> {\n  ref = getModularInstance(ref);\n  validateWritablePath('setPriority', ref._path);\n  validatePriority('setPriority', priority, false);\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    pathChild(ref._path, '.priority'),\n    priority,\n    null,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Writes data the Database location. Like `set()` but also specifies the\n * priority for that data.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\n * ).\n *\n * @param ref - The location to write to.\n * @param value - The value to be written (string, number, boolean, object,\n *   array, or null).\n * @param priority - The priority to be written (string, number, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function setWithPriority(\n  ref: DatabaseReference,\n  value: unknown,\n  priority: string | number | null\n): Promise<void> {\n  validateWritablePath('setWithPriority', ref._path);\n  validateFirebaseDataArg('setWithPriority', value, ref._path, false);\n  validatePriority('setWithPriority', priority, false);\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw 'setWithPriority failed: ' + ref.key + ' is a read-only object.';\n  }\n\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    ref._path,\n    value,\n    priority,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Writes multiple values to the Database at once.\n *\n * The `values` argument contains multiple property-value pairs that will be\n * written to the Database together. Each child property can either be a simple\n * property (for example, \"name\") or a relative path (for example,\n * \"name/first\") from the current location to the data to update.\n *\n * As opposed to the `set()` method, `update()` can be use to selectively update\n * only the referenced properties at the current location (instead of replacing\n * all the child properties at the current location).\n *\n * The effect of the write will be visible immediately, and the corresponding\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\n * the data to the Firebase servers will also be started, and the returned\n * Promise will resolve when complete. If provided, the `onComplete` callback\n * will be called asynchronously after synchronization has finished.\n *\n * A single `update()` will generate a single \"value\" event at the location\n * where the `update()` was performed, regardless of how many children were\n * modified.\n *\n * Note that modifying data with `update()` will cancel any pending\n * transactions at that location, so extreme care should be taken if mixing\n * `update()` and `transaction()` to modify the same data.\n *\n * Passing `null` to `update()` will remove the data at this location.\n *\n * See\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\n *\n * @param ref - The location to write to.\n * @param values - Object containing multiple values.\n * @returns Resolves when update on server is complete.\n */\nexport function update(ref: DatabaseReference, values: object): Promise<void> {\n  validateFirebaseMergeDataArg('update', values, ref._path, false);\n  const deferred = new Deferred<void>();\n  repoUpdate(\n    ref._repo,\n    ref._path,\n    values as Record<string, unknown>,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Gets the most up-to-date result for this query.\n *\n * @param query - The query to run.\n * @returns A `Promise` which resolves to the resulting DataSnapshot if a value is\n * available, or rejects if the client is unable to return a value (e.g., if the\n * server is unreachable and there is nothing cached).\n */\nexport function get(query: Query): Promise<DataSnapshot> {\n  query = getModularInstance(query) as QueryImpl;\n  const callbackContext = new CallbackContext(() => {});\n  const container = new ValueEventRegistration(callbackContext);\n  return repoGetValue(query._repo, query, container).then(node => {\n    return new DataSnapshot(\n      node,\n      new ReferenceImpl(query._repo, query._path),\n      query._queryParams.getIndex()\n    );\n  });\n}\n/**\n * Represents registration for 'value' events.\n */\nexport class ValueEventRegistration implements EventRegistration {\n  constructor(private callbackContext: CallbackContext) {}\n\n  respondsTo(eventType: string): boolean {\n    return eventType === 'value';\n  }\n\n  createEvent(change: Change, query: QueryContext): DataEvent {\n    const index = query._queryParams.getIndex();\n    return new DataEvent(\n      'value',\n      this,\n      new DataSnapshot(\n        change.snapshotNode,\n        new ReferenceImpl(query._repo, query._path),\n        index\n      )\n    );\n  }\n\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    if (eventData.getEventType() === 'cancel') {\n      return () =>\n        this.callbackContext.onCancel((eventData as CancelEvent).error);\n    } else {\n      return () =>\n        this.callbackContext.onValue((eventData as DataEvent).snapshot, null);\n    }\n  }\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  matches(other: EventRegistration): boolean {\n    if (!(other instanceof ValueEventRegistration)) {\n      return false;\n    } else if (!other.callbackContext || !this.callbackContext) {\n      // If no callback specified, we consider it to match any callback.\n      return true;\n    } else {\n      return other.callbackContext.matches(this.callbackContext);\n    }\n  }\n\n  hasAnyCallback(): boolean {\n    return this.callbackContext !== null;\n  }\n}\n\n/**\n * Represents the registration of a child_x event.\n */\nexport class ChildEventRegistration implements EventRegistration {\n  constructor(\n    private eventType: string,\n    private callbackContext: CallbackContext | null\n  ) {}\n\n  respondsTo(eventType: string): boolean {\n    let eventToCheck =\n      eventType === 'children_added' ? 'child_added' : eventType;\n    eventToCheck =\n      eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n    return this.eventType === eventToCheck;\n  }\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  createEvent(change: Change, query: QueryContext): DataEvent {\n    assert(change.childName != null, 'Child events should have a childName.');\n    const childRef = child(\n      new ReferenceImpl(query._repo, query._path),\n      change.childName\n    );\n    const index = query._queryParams.getIndex();\n    return new DataEvent(\n      change.type as EventType,\n      this,\n      new DataSnapshot(change.snapshotNode, childRef, index),\n      change.prevName\n    );\n  }\n\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    if (eventData.getEventType() === 'cancel') {\n      return () =>\n        this.callbackContext.onCancel((eventData as CancelEvent).error);\n    } else {\n      return () =>\n        this.callbackContext.onValue(\n          (eventData as DataEvent).snapshot,\n          (eventData as DataEvent).prevName\n        );\n    }\n  }\n\n  matches(other: EventRegistration): boolean {\n    if (other instanceof ChildEventRegistration) {\n      return (\n        this.eventType === other.eventType &&\n        (!this.callbackContext ||\n          !other.callbackContext ||\n          this.callbackContext.matches(other.callbackContext))\n      );\n    }\n\n    return false;\n  }\n\n  hasAnyCallback(): boolean {\n    return !!this.callbackContext;\n  }\n}\n\nfunction addEventListener(\n  query: Query,\n  eventType: EventType,\n  callback: UserCallback,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n) {\n  let cancelCallback: ((error: Error) => unknown) | undefined;\n  if (typeof cancelCallbackOrListenOptions === 'object') {\n    cancelCallback = undefined;\n    options = cancelCallbackOrListenOptions;\n  }\n  if (typeof cancelCallbackOrListenOptions === 'function') {\n    cancelCallback = cancelCallbackOrListenOptions;\n  }\n\n  if (options && options.onlyOnce) {\n    const userCallback = callback;\n    const onceCallback: UserCallback = (dataSnapshot, previousChildName) => {\n      repoRemoveEventCallbackForQuery(query._repo, query, container);\n      userCallback(dataSnapshot, previousChildName);\n    };\n    onceCallback.userCallback = callback.userCallback;\n    onceCallback.context = callback.context;\n    callback = onceCallback;\n  }\n\n  const callbackContext = new CallbackContext(\n    callback,\n    cancelCallback || undefined\n  );\n  const container =\n    eventType === 'value'\n      ? new ValueEventRegistration(callbackContext)\n      : new ChildEventRegistration(eventType, callbackContext);\n  repoAddEventCallbackForQuery(query._repo, query, container);\n  return () => repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'value',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName?: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_added',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_changed',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_moved',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_removed',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\nexport { EventType };\n\n/**\n * Detaches a callback previously attached with the corresponding `on*()` (`onValue`, `onChildAdded`) listener.\n * Note: This is not the recommended way to remove a listener. Instead, please use the returned callback function from\n * the respective `on*` callbacks.\n *\n * Detach a callback previously attached with `on*()`. Calling `off()` on a parent listener\n * will not automatically remove listeners registered on child nodes, `off()`\n * must also be called on any child listeners to remove the callback.\n *\n * If a callback is not specified, all callbacks for the specified eventType\n * will be removed. Similarly, if no eventType is specified, all callbacks\n * for the `Reference` will be removed.\n *\n * Individual listeners can also be removed by invoking their unsubscribe\n * callbacks.\n *\n * @param query - The query that the listener was registered with.\n * @param eventType - One of the following strings: \"value\", \"child_added\",\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\n * for the `Reference` will be removed.\n * @param callback - The callback function that was passed to `on()` or\n * `undefined` to remove all callbacks.\n */\nexport function off(\n  query: Query,\n  eventType?: EventType,\n  callback?: (\n    snapshot: DataSnapshot,\n    previousChildName?: string | null\n  ) => unknown\n): void {\n  let container: EventRegistration | null = null;\n  const expCallback = callback ? new CallbackContext(callback) : null;\n  if (eventType === 'value') {\n    container = new ValueEventRegistration(expCallback);\n  } else if (eventType) {\n    container = new ChildEventRegistration(eventType, expCallback);\n  }\n  repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n\n/** Describes the different query constraints available in this SDK. */\nexport type QueryConstraintType =\n  | 'endAt'\n  | 'endBefore'\n  | 'startAt'\n  | 'startAfter'\n  | 'limitToFirst'\n  | 'limitToLast'\n  | 'orderByChild'\n  | 'orderByKey'\n  | 'orderByPriority'\n  | 'orderByValue'\n  | 'equalTo';\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\n * {@link orderByValue}  or {@link equalTo} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\nexport abstract class QueryConstraint {\n  /** The type of this query constraints */\n  abstract readonly type: QueryConstraintType;\n\n  /**\n   * Takes the provided `Query` and returns a copy of the `Query` with this\n   * `QueryConstraint` applied.\n   */\n  abstract _apply<T>(query: QueryImpl): QueryImpl;\n}\n\nclass QueryEndAtConstraint extends QueryConstraint {\n  readonly type = 'endAt';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('endAt', this._value, query._path, true);\n    const newParams = queryParamsEndAt(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'endAt: Starting point was already set (by another call to endAt, ' +\n          'endBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified ending point.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The ending point is inclusive, so children with exactly the specified value\n * will be included in the query. The optional key argument can be used to\n * further limit the range of the query. If it is specified, then children that\n * have exactly the specified value must also have a key name less than or equal\n * to the specified key.\n *\n * You can read more about `endAt()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to end at. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to end at, among the children with the previously\n * specified priority. This argument is only allowed if ordering by child,\n * value, or priority.\n */\nexport function endAt(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('endAt', 'key', key, true);\n  return new QueryEndAtConstraint(value, key);\n}\n\nclass QueryEndBeforeConstraint extends QueryConstraint {\n  readonly type = 'endBefore';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('endBefore', this._value, query._path, false);\n    const newParams = queryParamsEndBefore(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'endBefore: Starting point was already set (by another call to endAt, ' +\n          'endBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The ending point is exclusive. If only a value is provided, children\n * with a value less than the specified value will be included in the query.\n * If a key is specified, then children must have a value less than or equal\n * to the specified value and a key name less than the specified key.\n *\n * @param value - The value to end before. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to end before, among the children with the\n * previously specified priority. This argument is only allowed if ordering by\n * child, value, or priority.\n */\nexport function endBefore(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('endBefore', 'key', key, true);\n  return new QueryEndBeforeConstraint(value, key);\n}\n\nclass QueryStartAtConstraint extends QueryConstraint {\n  readonly type = 'startAt';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('startAt', this._value, query._path, true);\n    const newParams = queryParamsStartAt(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'startAt: Starting point was already set (by another call to startAt, ' +\n          'startBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified starting point.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The starting point is inclusive, so children with exactly the specified value\n * will be included in the query. The optional key argument can be used to\n * further limit the range of the query. If it is specified, then children that\n * have exactly the specified value must also have a key name greater than or\n * equal to the specified key.\n *\n * You can read more about `startAt()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to start at. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start at. This argument is only allowed if\n * ordering by child, value, or priority.\n */\nexport function startAt(\n  value: number | string | boolean | null = null,\n  key?: string\n): QueryConstraint {\n  validateKey('startAt', 'key', key, true);\n  return new QueryStartAtConstraint(value, key);\n}\n\nclass QueryStartAfterConstraint extends QueryConstraint {\n  readonly type = 'startAfter';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('startAfter', this._value, query._path, false);\n    const newParams = queryParamsStartAfter(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'startAfter: Starting point was already set (by another call to startAt, ' +\n          'startAfter, or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The starting point is exclusive. If only a value is provided, children\n * with a value greater than the specified value will be included in the query.\n * If a key is specified, then children must have a value greater than or equal\n * to the specified value and a a key name greater than the specified key.\n *\n * @param value - The value to start after. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start after. This argument is only allowed if\n * ordering by child, value, or priority.\n */\nexport function startAfter(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('startAfter', 'key', key, true);\n  return new QueryStartAfterConstraint(value, key);\n}\n\nclass QueryLimitToFirstConstraint extends QueryConstraint {\n  readonly type = 'limitToFirst';\n\n  constructor(private readonly _limit: number) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    if (query._queryParams.hasLimit()) {\n      throw new Error(\n        'limitToFirst: Limit was already set (by another call to limitToFirst ' +\n          'or limitToLast).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      queryParamsLimitToFirst(query._queryParams, this._limit),\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that if limited to the first specific number\n * of children.\n *\n * The `limitToFirst()` method is used to set a maximum number of children to be\n * synced for a given callback. If we set a limit of 100, we will initially only\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\n * stored in our Database, a `child_added` event will fire for each message.\n * However, if we have over 100 messages, we will only receive a `child_added`\n * event for the first 100 ordered messages. As items change, we will receive\n * `child_removed` events for each item that drops out of the active list so\n * that the total number stays at 100.\n *\n * You can read more about `limitToFirst()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param limit - The maximum number of nodes to include in this query.\n */\nexport function limitToFirst(limit: number): QueryConstraint {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToFirst: First argument must be a positive integer.');\n  }\n  return new QueryLimitToFirstConstraint(limit);\n}\n\nclass QueryLimitToLastConstraint extends QueryConstraint {\n  readonly type = 'limitToLast';\n\n  constructor(private readonly _limit: number) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    if (query._queryParams.hasLimit()) {\n      throw new Error(\n        'limitToLast: Limit was already set (by another call to limitToFirst ' +\n          'or limitToLast).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      queryParamsLimitToLast(query._queryParams, this._limit),\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that is limited to return only the last\n * specified number of children.\n *\n * The `limitToLast()` method is used to set a maximum number of children to be\n * synced for a given callback. If we set a limit of 100, we will initially only\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\n * stored in our Database, a `child_added` event will fire for each message.\n * However, if we have over 100 messages, we will only receive a `child_added`\n * event for the last 100 ordered messages. As items change, we will receive\n * `child_removed` events for each item that drops out of the active list so\n * that the total number stays at 100.\n *\n * You can read more about `limitToLast()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param limit - The maximum number of nodes to include in this query.\n */\nexport function limitToLast(limit: number): QueryConstraint {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToLast: First argument must be a positive integer.');\n  }\n\n  return new QueryLimitToLastConstraint(limit);\n}\n\nclass QueryOrderByChildConstraint extends QueryConstraint {\n  readonly type = 'orderByChild';\n\n  constructor(private readonly _path: string) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByChild');\n    const parsedPath = new Path(this._path);\n    if (pathIsEmpty(parsedPath)) {\n      throw new Error(\n        'orderByChild: cannot pass in empty path. Use orderByValue() instead.'\n      );\n    }\n    const index = new PathIndex(parsedPath);\n    const newParams = queryParamsOrderBy(query._queryParams, index);\n    validateQueryEndpoints(newParams);\n\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by the specified child key.\n *\n * Queries can only order by one key at a time. Calling `orderByChild()`\n * multiple times on the same query is an error.\n *\n * Firebase queries allow you to order your data by any child key on the fly.\n * However, if you know in advance what your indexes will be, you can define\n * them via the .indexOn rule in your Security Rules for better performance. See\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\n * rule for more information.\n *\n * You can read more about `orderByChild()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n *\n * @param path - The path to order by.\n */\nexport function orderByChild(path: string): QueryConstraint {\n  if (path === '$key') {\n    throw new Error(\n      'orderByChild: \"$key\" is invalid.  Use orderByKey() instead.'\n    );\n  } else if (path === '$priority') {\n    throw new Error(\n      'orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.'\n    );\n  } else if (path === '$value') {\n    throw new Error(\n      'orderByChild: \"$value\" is invalid.  Use orderByValue() instead.'\n    );\n  }\n  validatePathString('orderByChild', 'path', path, false);\n  return new QueryOrderByChildConstraint(path);\n}\n\nclass QueryOrderByKeyConstraint extends QueryConstraint {\n  readonly type = 'orderByKey';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByKey');\n    const newParams = queryParamsOrderBy(query._queryParams, KEY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by the key.\n *\n * Sorts the results of a query by their (ascending) key values.\n *\n * You can read more about `orderByKey()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n */\nexport function orderByKey(): QueryConstraint {\n  return new QueryOrderByKeyConstraint();\n}\n\nclass QueryOrderByPriorityConstraint extends QueryConstraint {\n  readonly type = 'orderByPriority';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByPriority');\n    const newParams = queryParamsOrderBy(query._queryParams, PRIORITY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by priority.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\n * for alternatives to priority.\n */\nexport function orderByPriority(): QueryConstraint {\n  return new QueryOrderByPriorityConstraint();\n}\n\nclass QueryOrderByValueConstraint extends QueryConstraint {\n  readonly type = 'orderByValue';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByValue');\n    const newParams = queryParamsOrderBy(query._queryParams, VALUE_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by value.\n *\n * If the children of a query are all scalar values (string, number, or\n * boolean), you can order the results by their (ascending) values.\n *\n * You can read more about `orderByValue()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n */\nexport function orderByValue(): QueryConstraint {\n  return new QueryOrderByValueConstraint();\n}\n\nclass QueryEqualToValueConstraint extends QueryConstraint {\n  readonly type = 'equalTo';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('equalTo', this._value, query._path, false);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'equalTo: Starting point was already set (by another call to startAt/startAfter or ' +\n          'equalTo).'\n      );\n    }\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'equalTo: Ending point was already set (by another call to endAt/endBefore or ' +\n          'equalTo).'\n      );\n    }\n    return new QueryEndAtConstraint(this._value, this._key)._apply(\n      new QueryStartAtConstraint(this._value, this._key)._apply(query)\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` that includes children that match the specified\n * value.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The optional key argument can be used to further limit the range of the\n * query. If it is specified, then children that have exactly the specified\n * value must also have exactly the specified key as their key name. This can be\n * used to filter result sets with many matches for the same value.\n *\n * You can read more about `equalTo()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to match for. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start at, among the children with the\n * previously specified priority. This argument is only allowed if ordering by\n * child, value, or priority.\n */\nexport function equalTo(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('equalTo', 'key', key, true);\n  return new QueryEqualToValueConstraint(value, key);\n}\n\n/**\n * Creates a new immutable instance of `Query` that is extended to also include\n * additional query constraints.\n *\n * @param query - The Query instance to use as a base for the new constraints.\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */\nexport function query(\n  query: Query,\n  ...queryConstraints: QueryConstraint[]\n): Query {\n  let queryImpl = getModularInstance(query) as QueryImpl;\n  for (const constraint of queryConstraints) {\n    queryImpl = constraint._apply(queryImpl);\n  }\n  return queryImpl;\n}\n\n/**\n * Define reference constructor in various modules\n *\n * We are doing this here to avoid several circular\n * dependency issues\n */\nsyncPointSetReferenceConstructor(ReferenceImpl);\nsyncTreeSetReferenceConstructor(ReferenceImpl);\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _FirebaseService,\n  _getProvider,\n  FirebaseApp,\n  getApp\n} from '@firebase/app';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\nimport {\n  getModularInstance,\n  createMockUserToken,\n  EmulatorMockTokenOptions,\n  getDefaultEmulatorHostnameAndPort\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from '../core/AppCheckTokenProvider';\nimport {\n  AuthTokenProvider,\n  EmulatorTokenProvider,\n  FirebaseAuthTokenProvider\n} from '../core/AuthTokenProvider';\nimport { Repo, repoInterrupt, repoResume, repoStart } from '../core/Repo';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { newEmptyPath, pathIsEmpty } from '../core/util/Path';\nimport {\n  warn,\n  fatal,\n  log,\n  enableLogging as enableLoggingImpl\n} from '../core/util/util';\nimport { validateUrl } from '../core/util/validation';\nimport { BrowserPollConnection } from '../realtime/BrowserPollConnection';\nimport { TransportManager } from '../realtime/TransportManager';\nimport { WebSocketConnection } from '../realtime/WebSocketConnection';\n\nimport { ReferenceImpl } from './Reference_impl';\n\nexport { EmulatorMockTokenOptions } from '@firebase/util';\n/**\n * This variable is also defined in the firebase Node.js Admin SDK. Before\n * modifying this definition, consult the definition in:\n *\n * https://github.com/firebase/firebase-admin-node\n *\n * and make sure the two are consistent.\n */\nconst FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\n\n/**\n * Creates and caches `Repo` instances.\n */\nconst repos: {\n  [appName: string]: {\n    [dbUrl: string]: Repo;\n  };\n} = {};\n\n/**\n * If true, any new `Repo` will be created to use `ReadonlyRestClient` (for testing purposes).\n */\nlet useRestClient = false;\n\n/**\n * Update an existing `Repo` in place to point to a new host/port.\n */\nfunction repoManagerApplyEmulatorSettings(\n  repo: Repo,\n  host: string,\n  port: number,\n  tokenProvider?: AuthTokenProvider\n): void {\n  repo.repoInfo_ = new RepoInfo(\n    `${host}:${port}`,\n    /* secure= */ false,\n    repo.repoInfo_.namespace,\n    repo.repoInfo_.webSocketOnly,\n    repo.repoInfo_.nodeAdmin,\n    repo.repoInfo_.persistenceKey,\n    repo.repoInfo_.includeNamespaceInQueryParams,\n    /*isUsingEmulator=*/ true\n  );\n\n  if (tokenProvider) {\n    repo.authTokenProvider_ = tokenProvider;\n  }\n}\n\n/**\n * This function should only ever be called to CREATE a new database instance.\n * @internal\n */\nexport function repoManagerDatabaseFromApp(\n  app: FirebaseApp,\n  authProvider: Provider<FirebaseAuthInternalName>,\n  appCheckProvider?: Provider<AppCheckInternalComponentName>,\n  url?: string,\n  nodeAdmin?: boolean\n): Database {\n  let dbUrl: string | undefined = url || app.options.databaseURL;\n  if (dbUrl === undefined) {\n    if (!app.options.projectId) {\n      fatal(\n        \"Can't determine Firebase Database URL. Be sure to include \" +\n          ' a Project ID when calling firebase.initializeApp().'\n      );\n    }\n\n    log('Using default host for project ', app.options.projectId);\n    dbUrl = `${app.options.projectId}-default-rtdb.firebaseio.com`;\n  }\n\n  let parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n  let repoInfo = parsedUrl.repoInfo;\n\n  let isEmulator: boolean;\n\n  let dbEmulatorHost: string | undefined = undefined;\n  if (typeof process !== 'undefined' && process.env) {\n    dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\n  }\n\n  if (dbEmulatorHost) {\n    isEmulator = true;\n    dbUrl = `http://${dbEmulatorHost}?ns=${repoInfo.namespace}`;\n    parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n    repoInfo = parsedUrl.repoInfo;\n  } else {\n    isEmulator = !parsedUrl.repoInfo.secure;\n  }\n\n  const authTokenProvider =\n    nodeAdmin && isEmulator\n      ? new EmulatorTokenProvider(EmulatorTokenProvider.OWNER)\n      : new FirebaseAuthTokenProvider(app.name, app.options, authProvider);\n\n  validateUrl('Invalid Firebase Database URL', parsedUrl);\n  if (!pathIsEmpty(parsedUrl.path)) {\n    fatal(\n      'Database URL must point to the root of a Firebase Database ' +\n        '(not including a child path).'\n    );\n  }\n\n  const repo = repoManagerCreateRepo(\n    repoInfo,\n    app,\n    authTokenProvider,\n    new AppCheckTokenProvider(app.name, appCheckProvider)\n  );\n  return new Database(repo, app);\n}\n\n/**\n * Remove the repo and make sure it is disconnected.\n *\n */\nfunction repoManagerDeleteRepo(repo: Repo, appName: string): void {\n  const appRepos = repos[appName];\n  // This should never happen...\n  if (!appRepos || appRepos[repo.key] !== repo) {\n    fatal(`Database ${appName}(${repo.repoInfo_}) has already been deleted.`);\n  }\n  repoInterrupt(repo);\n  delete appRepos[repo.key];\n}\n\n/**\n * Ensures a repo doesn't already exist and then creates one using the\n * provided app.\n *\n * @param repoInfo - The metadata about the Repo\n * @returns The Repo object for the specified server / repoName.\n */\nfunction repoManagerCreateRepo(\n  repoInfo: RepoInfo,\n  app: FirebaseApp,\n  authTokenProvider: AuthTokenProvider,\n  appCheckProvider: AppCheckTokenProvider\n): Repo {\n  let appRepos = repos[app.name];\n\n  if (!appRepos) {\n    appRepos = {};\n    repos[app.name] = appRepos;\n  }\n\n  let repo = appRepos[repoInfo.toURLString()];\n  if (repo) {\n    fatal(\n      'Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.'\n    );\n  }\n  repo = new Repo(repoInfo, useRestClient, authTokenProvider, appCheckProvider);\n  appRepos[repoInfo.toURLString()] = repo;\n\n  return repo;\n}\n\n/**\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\n */\nexport function repoManagerForceRestClient(forceRestClient: boolean): void {\n  useRestClient = forceRestClient;\n}\n\n/**\n * Class representing a Firebase Realtime Database.\n */\nexport class Database implements _FirebaseService {\n  /** Represents a `Database` instance. */\n  readonly 'type' = 'database';\n\n  /** Track if the instance has been used (root or repo accessed) */\n  _instanceStarted: boolean = false;\n\n  /** Backing state for root_ */\n  private _rootInternal?: ReferenceImpl;\n\n  /** @hideconstructor */\n  constructor(\n    public _repoInternal: Repo,\n    /** The {@link @firebase/app#FirebaseApp} associated with this Realtime Database instance. */\n    readonly app: FirebaseApp\n  ) {}\n\n  get _repo(): Repo {\n    if (!this._instanceStarted) {\n      repoStart(\n        this._repoInternal,\n        this.app.options.appId,\n        this.app.options['databaseAuthVariableOverride']\n      );\n      this._instanceStarted = true;\n    }\n    return this._repoInternal;\n  }\n\n  get _root(): ReferenceImpl {\n    if (!this._rootInternal) {\n      this._rootInternal = new ReferenceImpl(this._repo, newEmptyPath());\n    }\n    return this._rootInternal;\n  }\n\n  _delete(): Promise<void> {\n    if (this._rootInternal !== null) {\n      repoManagerDeleteRepo(this._repo, this.app.name);\n      this._repoInternal = null;\n      this._rootInternal = null;\n    }\n    return Promise.resolve();\n  }\n\n  _checkNotDeleted(apiName: string) {\n    if (this._rootInternal === null) {\n      fatal('Cannot call ' + apiName + ' on a deleted database.');\n    }\n  }\n}\n\nfunction checkTransportInit() {\n  if (TransportManager.IS_TRANSPORT_INITIALIZED) {\n    warn(\n      'Transport has already been initialized. Please call this function before calling ref or setting up a listener'\n    );\n  }\n}\n\n/**\n * Force the use of websockets instead of longPolling.\n */\nexport function forceWebSockets() {\n  checkTransportInit();\n  BrowserPollConnection.forceDisallow();\n}\n\n/**\n * Force the use of longPolling instead of websockets. This will be ignored if websocket protocol is used in databaseURL.\n */\nexport function forceLongPolling() {\n  checkTransportInit();\n  WebSocketConnection.forceDisallow();\n  BrowserPollConnection.forceAllow();\n}\n\n/**\n * Returns the instance of the Realtime Database SDK that is associated\n * with the provided {@link @firebase/app#FirebaseApp}. Initializes a new instance with\n * with default settings if no instance exists or if the existing instance uses\n * a custom database URL.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned Realtime\n * Database instance is associated with.\n * @param url - The URL of the Realtime Database instance to connect to. If not\n * provided, the SDK connects to the default instance of the Firebase App.\n * @returns The `Database` instance of the provided app.\n */\nexport function getDatabase(\n  app: FirebaseApp = getApp(),\n  url?: string\n): Database {\n  const db = _getProvider(app, 'database').getImmediate({\n    identifier: url\n  }) as Database;\n  if (!db._instanceStarted) {\n    const emulator = getDefaultEmulatorHostnameAndPort('database');\n    if (emulator) {\n      connectDatabaseEmulator(db, ...emulator);\n    }\n  }\n  return db;\n}\n\n/**\n * Modify the provided instance to communicate with the Realtime Database\n * emulator.\n *\n * <p>Note: This method must be called before performing any other operation.\n *\n * @param db - The instance to modify.\n * @param host - The emulator host (ex: localhost)\n * @param port - The emulator port (ex: 8080)\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\n */\nexport function connectDatabaseEmulator(\n  db: Database,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('useEmulator');\n  if (db._instanceStarted) {\n    fatal(\n      'Cannot call useEmulator() after instance has already been initialized.'\n    );\n  }\n\n  const repo = db._repoInternal;\n  let tokenProvider: EmulatorTokenProvider | undefined = undefined;\n  if (repo.repoInfo_.nodeAdmin) {\n    if (options.mockUserToken) {\n      fatal(\n        'mockUserToken is not supported by the Admin SDK. For client access with mock users, please use the \"firebase\" package instead of \"firebase-admin\".'\n      );\n    }\n    tokenProvider = new EmulatorTokenProvider(EmulatorTokenProvider.OWNER);\n  } else if (options.mockUserToken) {\n    const token =\n      typeof options.mockUserToken === 'string'\n        ? options.mockUserToken\n        : createMockUserToken(options.mockUserToken, db.app.options.projectId);\n    tokenProvider = new EmulatorTokenProvider(token);\n  }\n\n  // Modify the repo to apply emulator settings\n  repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider);\n}\n\n/**\n * Disconnects from the server (all Database operations will be completed\n * offline).\n *\n * The client automatically maintains a persistent connection to the Database\n * server, which will remain active indefinitely and reconnect when\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\n * to control the client connection in cases where a persistent connection is\n * undesirable.\n *\n * While offline, the client will no longer receive data updates from the\n * Database. However, all Database operations performed locally will continue to\n * immediately fire events, allowing your application to continue behaving\n * normally. Additionally, each operation performed locally will automatically\n * be queued and retried upon reconnection to the Database server.\n *\n * To reconnect to the Database and begin receiving remote events, see\n * `goOnline()`.\n *\n * @param db - The instance to disconnect.\n */\nexport function goOffline(db: Database): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOffline');\n  repoInterrupt(db._repo);\n}\n\n/**\n * Reconnects to the server and synchronizes the offline Database state\n * with the server state.\n *\n * This method should be used after disabling the active connection with\n * `goOffline()`. Once reconnected, the client will transmit the proper data\n * and fire the appropriate events so that your client \"catches up\"\n * automatically.\n *\n * @param db - The instance to reconnect.\n */\nexport function goOnline(db: Database): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOnline');\n  repoResume(db._repo);\n}\n\n/**\n * Logs debugging information to the console.\n *\n * @param enabled - Enables logging if `true`, disables logging if `false`.\n * @param persistent - Remembers the logging state between page refreshes if\n * `true`.\n */\nexport function enableLogging(enabled: boolean, persistent?: boolean);\n\n/**\n * Logs debugging information to the console.\n *\n * @param logger - A custom logger function to control how things get logged.\n */\nexport function enableLogging(logger: (message: string) => unknown);\n\nexport function enableLogging(\n  logger: boolean | ((message: string) => unknown),\n  persistent?: boolean\n): void {\n  enableLoggingImpl(logger, persistent);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PersistentConnection } from '../core/PersistentConnection';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { Connection } from '../realtime/Connection';\n\nimport { repoManagerForceRestClient } from './Database';\n\nexport const DataConnection = PersistentConnection;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).simpleListen = function (\n  pathString: string,\n  onComplete: (a: unknown) => void\n) {\n  this.sendRequest('q', { p: pathString }, onComplete);\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).echo = function (\n  data: unknown,\n  onEcho: (a: unknown) => void\n) {\n  this.sendRequest('echo', { d: data }, onEcho);\n};\n\n// RealTimeConnection properties that we use in tests.\nexport const RealTimeConnection = Connection;\n\n/**\n * @internal\n */\nexport const hijackHash = function (newHash: () => string) {\n  const oldPut = PersistentConnection.prototype.put;\n  PersistentConnection.prototype.put = function (\n    pathString,\n    data,\n    onComplete,\n    hash\n  ) {\n    if (hash !== undefined) {\n      hash = newHash();\n    }\n    oldPut.call(this, pathString, data, onComplete, hash);\n  };\n  return function () {\n    PersistentConnection.prototype.put = oldPut;\n  };\n};\n\nexport const ConnectionTarget = RepoInfo;\n\n/**\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\n * @internal\n */\nexport const forceRestClient = function (forceRestClient: boolean) {\n  repoManagerForceRestClient(forceRestClient);\n};\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _registerComponent,\n  registerVersion,\n  SDK_VERSION\n} from '@firebase/app';\nimport { Component, ComponentType } from '@firebase/component';\n\nimport { name, version } from '../package.json';\nimport { setSDKVersion } from '../src/core/version';\n\nimport { repoManagerDatabaseFromApp } from './api/Database';\n\nexport function registerDatabase(variant?: string): void {\n  setSDKVersion(SDK_VERSION);\n  _registerComponent(\n    new Component(\n      'database',\n      (container, { instanceIdentifier: url }) => {\n        const app = container.getProvider('app').getImmediate()!;\n        const authProvider = container.getProvider('auth-internal');\n        const appCheckProvider = container.getProvider('app-check-internal');\n        return repoManagerDatabaseFromApp(\n          app,\n          authProvider,\n          appCheckProvider,\n          url\n        );\n      },\n      ComponentType.PUBLIC\n    ).setMultipleInstances(true)\n  );\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n","/**\n * Firebase Realtime Database\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Database } from './api/Database';\nimport { registerDatabase } from './register';\n\nexport * from './api';\n\nregisterDatabase();\n\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    'database': Database;\n  }\n}\n","// Import the functions you need from the SDKs you need:\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getDatabase } from \"firebase/database\";\r\n// TODO: Add SDKs for Firebase products that you want to use (Check link below for more info).\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration.\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional.\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDgskMzt-xsHwiOlengm8nmc0mjJewTEks\",\r\n  authDomain: \"portugo-c7f05.firebaseapp.com\",\r\n  databaseURL: \"https://portugo-c7f05-default-rtdb.europe-west1.firebasedatabase.app\",\r\n  projectId: \"portugo-c7f05\",\r\n  storageBucket: \"portugo-c7f05.appspot.com\",\r\n  messagingSenderId: \"455303617152\",\r\n  appId: \"1:455303617152:web:af1bb8d51e1ebc4bdae465\",\r\n  measurementId: \"G-HXCG8QQPM5\"\r\n};\r\n\r\n// Initializing Firebase:\r\nconst app = initializeApp(firebaseConfig); // Connect this project with Firebase's products.\r\nconst database = getDatabase(app); // Connect this project to the Realtime Database service.\r\n\r\n// Exporting Firebase variables:\r\nexport { app, database };","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n","import { useState } from 'react';\r\nimport './Section7.scss';\r\nimport Button from '../Button/Button';\r\nimport { database } from '../../config/firebase'; \r\nimport { ref, push } from 'firebase/database';\r\n\r\nconst Section7 = ({ title }) => {\r\n    const [formData, setFormData] = useState({\r\n        fullName: '',\r\n        email: '',\r\n        subject: '',\r\n        message: '',\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }));\r\n    }\r\n\r\n    function validateEmail(email) {\r\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        return emailRegex.test(email) && email.length <= 256;\r\n    }\r\n      \r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        // Validating name:\r\n        if (!formData.fullName || formData.fullName.length < 5) {\r\n            return alert('O nome não pode ser muito curto. Escreva seu nome completo.');\r\n        }\r\n        // Validating email:\r\n        if (!validateEmail(formData.email)) {\r\n            return alert('O email inserido não é válido.');\r\n        }\r\n\r\n        const messagesRef = ref(database, 'websiteMessages');\r\n        const newMessage = {\r\n            ...formData,\r\n            timeOfMessage: new Date().toISOString(),\r\n        };\r\n        push(messagesRef, newMessage).then(() => {\r\n            alert('Mensagem enviada com sucesso!'); // User feedback\r\n            setFormData({ // Reset form fields\r\n                fullName: '',\r\n                email: '',\r\n                subject: '',\r\n                message: '',\r\n            });\r\n            // Handle successful submission\r\n        }).catch((error) => {\r\n            console.error('Error saving data: ', error);\r\n            alert('Houve um erro ao enviar a mensagem. Tente novamente.'); // User feedback for errors\r\n            // Handle any errors\r\n        });\r\n\r\n        // Note: It's good practice to provide feedback to the user upon successful submission \r\n        // or inform them of errors. The .then() and .catch() methods are perfect for this.\r\n    }\r\n\r\n    return(\r\n        <section className='section-7'>\r\n            <form className='section-7__form' onSubmit={handleSubmit}>\r\n                <h1 className='section-7__title'>{title}</h1>\r\n                <label className='section-7__form__label'>\r\n                    Preencha o formulário:\r\n                </label>\r\n                <input \r\n                    type='text'\r\n                    name='fullName'\r\n                    placeholder='Primeiro e último nome'\r\n                    value={formData.fullName}\r\n                    onChange={handleChange}\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Endereço de email\"\r\n                    value={formData.email}\r\n                    onChange={handleChange}\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"subject\"\r\n                    placeholder=\"Assunto\"\r\n                    value={formData.subject}\r\n                    onChange={handleChange}\r\n                    required\r\n                />\r\n                <textarea\r\n                    name=\"message\"\r\n                    placeholder=\"Digite sua mensagem...\"\r\n                    value={formData.message}\r\n                    onChange={handleChange}\r\n                    required\r\n                ></textarea>\r\n                <Button \r\n                    type=\"submit\"\r\n                    styleType={'btn--style-1'} \r\n                    text={'Enviar'} \r\n                />\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Section7;","import './App.scss';\nimport Footer from './components/Footer/Footer.js';\nimport Header from './components/Header/Header.js';\nimport Section1 from './components/Section1/Section1.js';\nimport Section2 from './components/Section2/Section2.js';\nimport Section3 from './components/Section3/Section3.js';\nimport Section4 from './components/Section4/Section4.js';\nimport Section5 from './components/Section5/Section5.js';\nimport Section6 from './components/Section6/Section6.js';\nimport Section7 from './components/Section7/Section7.js';\n\n\nconst App = () => {\n  return (\n    <div className='app'>\n      <meta name='viewport' content='initial-scale=1, width=device-width' />\n      <Header />\n      <Section1 \n        title={'Rápido, fácil e justo'}\n      />\n      <Section2 \n        title={'Quem somos nós?'}\n        imgSrc={'images/pexels-element-digital-1051071.jpg'}\n        imgName={'Mulher a conduzir'}\n      />\n      <div className='app__gradient-1'>\n        <Section3 \n          title={'Conduza e seja seu próprio patrão!'}\n        />\n        <Section4\n          title={'Nossos resultados:'}\n        />\n      </div>\n      <Section5 \n        title={'Operamos em todo Portugal'}\n      />\n      <Section6 />\n      <Section7\n        title={'Entre em contacto conosco'}\n      />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"names":["FUNC_ERROR_TEXT","NAN","symbolTag","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","freeGlobal","global","Object","freeSelf","self","root","Function","objectToString","prototype","toString","nativeMax","Math","max","nativeMin","min","now","Date","debounce","func","wait","options","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","undefined","apply","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","setTimeout","remainingWait","debounced","isInvoking","arguments","this","leadingEdge","toNumber","isObject","cancel","clearTimeout","flush","value","type","isObjectLike","call","isSymbol","other","valueOf","replace","isBinary","test","slice","module","exports","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","props","propName","componentName","location","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","aa","ca","p","a","b","c","length","encodeURIComponent","da","Set","ea","fa","ha","add","ia","window","document","createElement","ja","hasOwnProperty","ka","la","ma","v","d","e","f","g","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","removeEmptyString","z","split","forEach","toLowerCase","ra","sa","toUpperCase","ta","pa","isNaN","qa","oa","removeAttribute","setAttribute","setAttributeNS","xlinkHref","ua","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","va","Symbol","for","wa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","iterator","Ka","La","A","assign","Ma","stack","trim","match","Na","Oa","prepareStackTrace","defineProperty","set","Reflect","construct","l","h","k","displayName","includes","Pa","tag","render","Qa","$$typeof","_context","_payload","_init","Ra","Sa","Ta","nodeName","Va","_valueTracker","getOwnPropertyDescriptor","constructor","get","configurable","enumerable","getValue","setValue","stopTracking","Ua","Wa","checked","Xa","activeElement","body","Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","Za","initialValue","controlled","ab","bb","cb","db","ownerDocument","eb","Array","isArray","fb","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","children","hb","ib","jb","textContent","kb","lb","mb","nb","namespaceURI","innerHTML","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","ob","lastChild","nodeType","nodeValue","pb","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","qb","rb","sb","style","indexOf","setProperty","keys","charAt","substring","tb","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","source","track","wbr","ub","vb","is","wb","xb","target","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","push","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","addEventListener","removeEventListener","Nb","m","onError","Ob","Pb","Qb","Rb","Sb","Tb","Vb","alternate","return","flags","Wb","memoizedState","dehydrated","Xb","Zb","child","sibling","current","Yb","$b","ac","unstable_scheduleCallback","bc","unstable_cancelCallback","cc","unstable_shouldYield","dc","unstable_requestPaint","B","unstable_now","ec","unstable_getCurrentPriorityLevel","fc","unstable_ImmediatePriority","gc","unstable_UserBlockingPriority","hc","unstable_NormalPriority","ic","unstable_LowPriority","jc","unstable_IdlePriority","kc","lc","oc","clz32","pc","qc","log","LN2","rc","sc","tc","uc","pendingLanes","suspendedLanes","pingedLanes","entangledLanes","entanglements","vc","xc","yc","zc","Ac","eventTimes","Cc","C","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Map","Pc","Qc","Rc","Sc","delete","pointerId","Tc","nativeEvent","blockedOn","domEventName","eventSystemFlags","targetContainers","Vc","Wc","priority","isDehydrated","containerInfo","Xc","Yc","dispatchEvent","shift","Zc","$c","ad","bd","cd","ReactCurrentBatchConfig","dd","ed","transition","fd","gd","hd","id","Uc","stopPropagation","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","isTrusted","td","ud","view","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Jd","Ld","data","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","key","String","fromCharCode","code","repeat","locale","which","Rd","Td","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","ie","le","color","date","datetime","email","month","password","range","search","tel","text","url","week","me","ne","oe","event","listeners","pe","qe","re","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","offset","nextSibling","Le","contains","compareDocumentPosition","Me","HTMLIFrameElement","contentWindow","href","Ne","contentEditable","Oe","focusedElem","selectionRange","documentElement","start","end","selectionStart","selectionEnd","defaultView","getSelection","extend","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","left","scrollLeft","top","scrollTop","focus","Pe","Qe","Re","Se","Te","Ue","Ve","We","animationend","animationiteration","animationstart","transitionend","Xe","Ye","Ze","animation","$e","af","bf","cf","df","ef","ff","gf","hf","lf","mf","concat","nf","Ub","instance","listener","D","of","has","pf","qf","rf","random","sf","bind","capture","passive","n","t","J","x","u","w","F","tf","uf","parentWindow","vf","wf","na","xa","$a","ba","je","char","ke","unshift","xf","yf","zf","Af","Bf","Cf","Df","Ef","__html","Ff","Gf","Hf","Promise","Jf","queueMicrotask","resolve","then","catch","If","Kf","Lf","Mf","previousSibling","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","E","G","Vf","H","Wf","Xf","Yf","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Zf","childContextTypes","$f","ag","bg","getChildContext","cg","__reactInternalMemoizedMergedChildContext","dg","eg","fg","gg","hg","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","ug","vg","wg","xg","yg","I","zg","Ag","Bg","deletions","Cg","pendingProps","overflow","treeContext","retryLane","Dg","mode","Eg","Fg","Gg","memoizedProps","Hg","Ig","Jg","Kg","Lg","defaultProps","Mg","Ng","Og","Pg","Qg","Rg","_currentValue","Sg","childLanes","Tg","dependencies","firstContext","lanes","Ug","Vg","context","memoizedValue","next","Wg","Xg","Yg","interleaved","Zg","$g","ah","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","bh","ch","eventTime","lane","payload","callback","dh","K","eh","fh","gh","q","r","y","hh","ih","jh","Component","refs","kh","nh","isMounted","_reactInternals","enqueueSetState","L","lh","mh","enqueueReplaceState","enqueueForceUpdate","oh","shouldComponentUpdate","isPureReactComponent","ph","contextType","state","updater","qh","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","rh","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","sh","ref","_owner","_stringRef","th","join","uh","vh","index","wh","xh","yh","implementation","zh","Ah","done","Bh","Ch","Dh","Eh","Fh","Gh","Hh","Ih","tagName","Jh","Kh","Lh","M","Mh","revealOrder","Nh","Oh","_workInProgressVersionPrimary","Ph","ReactCurrentDispatcher","Qh","Rh","N","O","P","Sh","Th","Uh","Vh","Q","Wh","Xh","Yh","Zh","$h","ai","bi","ci","baseQueue","queue","di","ei","fi","lastRenderedReducer","action","hasEagerState","eagerState","lastRenderedState","dispatch","gi","hi","ii","ji","ki","getSnapshot","li","mi","R","ni","lastEffect","stores","oi","pi","qi","ri","create","destroy","deps","si","ti","ui","vi","wi","xi","yi","zi","Ai","Bi","Ci","Di","Ei","Fi","Gi","Hi","Ii","Ji","readContext","useCallback","useContext","useEffect","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","useDeferredValue","useTransition","useMutableSource","useSyncExternalStore","useId","unstable_isNewReconciler","identifierPrefix","Ki","message","digest","Li","Mi","console","error","Ni","WeakMap","Oi","Pi","Qi","Ri","getDerivedStateFromError","componentDidCatch","Si","componentStack","Ti","pingCache","Ui","Vi","Wi","Xi","ReactCurrentOwner","Yi","Zi","$i","aj","bj","compare","cj","dj","ej","baseLanes","cachePool","transitions","fj","gj","hj","ij","jj","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","kj","lj","pendingContext","mj","Aj","Bj","Cj","Dj","nj","oj","pj","fallback","qj","rj","tj","dataset","dgst","uj","vj","_reactRetry","sj","subtreeFlags","wj","xj","isBackwards","rendering","renderingStartTime","last","tail","tailMode","yj","Ej","S","Fj","Gj","wasMultiple","multiple","suppressHydrationWarning","onClick","onclick","size","createElementNS","autoFocus","createTextNode","T","Hj","Ij","Jj","Kj","U","Lj","WeakSet","V","Mj","W","Nj","Oj","Qj","Rj","Sj","Tj","Uj","Vj","Wj","insertBefore","_reactRootContainer","Xj","X","Yj","Zj","ak","onCommitFiberUnmount","componentWillUnmount","bk","ck","dk","ek","fk","isHidden","gk","hk","display","ik","jk","kk","lk","__reactInternalSnapshotBeforeUpdate","src","Wk","mk","ceil","nk","ok","pk","Y","Z","qk","rk","sk","tk","uk","Infinity","vk","wk","xk","yk","zk","Ak","Bk","Ck","Dk","Ek","callbackNode","expirationTimes","expiredLanes","wc","callbackPriority","ig","Fk","Gk","Hk","Ik","Jk","Kk","Lk","Mk","Nk","Ok","Pk","finishedWork","finishedLanes","Qk","timeoutHandle","Rk","Sk","Tk","Uk","Vk","mutableReadLanes","Bc","Pj","onCommitFiberRoot","mc","onRecoverableError","Xk","onPostCommitFiberRoot","Yk","Zk","al","isReactComponent","pendingChildren","bl","mutableSourceEagerHydrationData","cl","cache","pendingSuspenseBoundaries","el","fl","gl","hl","il","jl","zj","$k","ll","reportError","ml","_internalRoot","nl","ol","pl","ql","sl","rl","unmount","unstable_scheduleHydration","splice","querySelectorAll","JSON","stringify","form","tl","usingClientEntryPoint","Events","ul","findFiberByHostInstance","bundleType","version","rendererPackageName","vl","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setErrorHandler","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","wl","isDisabled","supportsFiber","inject","createPortal","dl","createRoot","unstable_strictMode","findDOMNode","flushSync","hydrate","hydrateRoot","hydratedSources","_getVersion","_source","unmountComponentAtNode","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","checkDCE","_createClass","defineProperties","i","descriptor","writable","Constructor","protoProps","staticProps","_react2","_interopRequireDefault","_scrollLink2","obj","__esModule","default","ButtonElement","_React$Component","_classCallCheck","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","subClass","superClass","setPrototypeOf","_inherits","_extends","_scrollElement2","_propTypes2","ElementWrapper","_this2","newProps","parentBindings","domNode","propTypes","LinkElement","_ref","_temp","_this","_len","_key","_Link2","_Button2","_Element2","_scroller2","_scrollEvents2","_scrollSpy2","_animateScroll2","_Helpers2","React","scrollSpy","defaultScroller","scrollHash","protoTypes","to","containerId","container","activeClass","spy","smooth","delay","isDynamic","duration","absolute","onSetActive","onSetInactive","ignoreCancelEvents","hashSpy","spyThrottle","Helpers","customScroller","warn","scroller","_initialiseProps","active","getElementById","scrollSpyContainer","getScrollSpyContainer","mount","mapContainer","addStateHandler","stateHandler","addSpyHandler","spyHandler","setState","className","prop","handleClick","scrollTo","getActiveLink","isInitialized","elemTopBound","elemBottomBound","containerTop","getBoundingClientRect","cords","offsetY","isInside","floor","isOutside","activeLink","setActiveLink","getHash","changeHash","updateStates","Element","_React$Component2","_this3","childBindings","registerElems","prevProps","unregister","register","_smooth2","_cancelEvents2","getAnimationType","defaultEasing","requestAnimationFrameHelper","requestAnimationFrame","webkitRequestAnimationFrame","currentWindowProperties","getTime","currentPositionX","containerElement","supportPageOffset","pageXOffset","isCSS1Compat","compatMode","currentPositionY","pageYOffset","animateScroll","easing","timestamp","delta","round","targetPosition","startPosition","progress","percent","currentPosition","horizontal","easedAnimate","registered","setContainer","animateTopScroll","scrollOffset","delayTimeout","subscribe","parseFloat","proceedOptions","scrollToTop","scrollToBottom","scrollWidth","offsetWidth","html","clientWidth","scrollContainerWidth","scrollHeight","offsetHeight","clientHeight","scrollContainerHeight","toPosition","scrollMore","_passiveEventListeners","events","cancelEvent","addPassiveEventListener","eventName","listenerName","attachedListeners","supportsPassiveOption","opts","removePassiveEventListener","scrollEvent","evtName","remove","_utils","_utils2","mountFlag","initialized","containers","handleHashChange","initStateFromHash","hash","isInit","saveHashHistory","updateHash","_scrollHash2","activeStyle","Link","_React$PureComponent","PureComponent","elemLeftBound","elemRightBound","containerLeft","offsetX","_cords","_props$saveHashHistor","_props$saveHashHistor2","_saveHashHistory","_lodash","_lodash2","spyCallbacks","spySetState","scrollSpyContainers","throttle","eventHandler","throttleAmount","eventThrottler","scrollHandler","handler","s","update","__mapped","__activeLink","getElementsByName","getElementsByClassName","pow","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","getElementOffsetInfoUntil","predicate","offsetTop","currentOffsetParent","offsetParent","historyUpdate","hashVal","hashToUpdate","curLoc","urlToPush","pathname","history","pushState","replaceState","filterElementInContainer","scrollX","getComputedStyle","position","offsetLeft","scrollY","_getElementOffsetInfo","isDocument","__self","__source","Fragment","jsx","jsxs","forceUpdate","escape","_status","_result","Children","map","count","toArray","only","Profiler","StrictMode","Suspense","cloneElement","createContext","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","createFactory","createRef","forwardRef","isValidElement","lazy","memo","startTransition","unstable_act","pop","sortIndex","performance","setImmediate","startTime","expirationTime","priorityLevel","navigator","scheduling","isInputPending","MessageChannel","port2","port1","onmessage","postMessage","unstable_Profiling","unstable_continueExecution","unstable_forceFrameRate","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_runWithPriority","unstable_wrapCallback","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","o","chunkId","all","reduce","promises","miniCssF","globalThis","inProgress","dataWebpackPrefix","script","needAttach","scripts","getElementsByTagName","getAttribute","charset","timeout","nc","onScriptComplete","prev","onerror","onload","doneFns","fn","head","toStringTag","installedChunks","j","installedChunkData","promise","reject","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","some","chunkLoadingGlobal","Footer","facebookIcon","setFacebookIcon","linkedInIcon","setLinkedInIcon","instagramIcon","setInstagramIcon","twitterIcon","setTwitterIcon","discordIcon","setDiscordIcon","handleIcons","innerWidth","_jsxs","_jsx","alt","icSection1","xmlns","viewBox","icSection2","icSection3","icSection4","icSection5","icSection6","icSection7","guestUserIcon","fill","NavMenu","_Fragment","onToggle","isOpen","setIsOpen","setOpenedState","styleType","icon","Header","isMenuOpen","setIsMenuOpen","headerRef","lastScrollY","setLastScrollY","cumulativeUpScroll","setCumulativeUpScroll","logo","setLogo","headerStyle","setHeaderStyle","hamburguerColor","setHamburguerColor","toggleBodyScroll","shouldScroll","toggleMenu","handleScroll","currentScrollY","upScroll","Button","BurguerMenu","title","imgSrc","imgName","PortugalMap","setHeight","setWidth","handleResize","stroke","Section6","CONSTANTS","assert","assertion","assertionError","stringToByteArray$1","str","out","charCodeAt","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","webSafe","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","encodeString","btoa","decodeString","bytes","pos","c1","c2","c3","byteArrayToString","decodeStringToByteArray","charToByteMap","byte4","DecodeBase64StringError","base64Encode","utf8Bytes","base64urlEncodeWithoutPadding","base64Decode","deepCopy","deepExtend","getDefaultsFromGlobal","getGlobal","__FIREBASE_DEFAULTS__","getDefaults","getDefaultsFromEnvVariable","process","defaultsJsonString","parse","getDefaultsFromCookie","cookie","decoded","info","getDefaultEmulatorHostnameAndPort","productName","host","_a","_b","emulatorHosts","getDefaultEmulatorHost","separatorIndex","lastIndexOf","port","getDefaultAppConfig","config","Deferred","wrapCallback","getUA","isMobileCordova","isNodeSdk","FirebaseError","customData","super","captureStackTrace","ErrorFactory","service","serviceName","errors","fullCode","template","PATTERN","_","replaceTemplate","fullMessage","jsonEval","decode","token","header","claims","signature","parts","safeGet","isEmpty","contextObj","res","deepEqual","aKeys","bKeys","aProp","bProp","thing","Sha1","chain_","buf_","W_","pad_","inbuf_","total_","blockSize","reset","compress_","buf","lengthMinusBlock","inbuf","totalBits","errorPrefix","fnName","argName","stringLength","getModularInstance","_delegate","instanceFactory","multipleInstances","serviceProps","instantiationMode","onInstanceCreated","setInstantiationMode","setMultipleInstances","setServiceProps","setInstanceCreatedCallback","DEFAULT_ENTRY_NAME","component","instances","instancesDeferred","instancesOptions","onInitCallbacks","identifier","normalizedIdentifier","normalizeInstanceIdentifier","deferred","shouldAutoInitialize","getOrInitializeService","instanceIdentifier","getImmediate","optional","getComponent","setComponent","isComponentEager","instanceDeferred","entries","clearInstance","services","from","values","filter","INTERNAL","_delete","isComponentSet","getOptions","initialize","onInit","existingCallbacks","existingInstance","invokeOnInitCallbacks","callbacks","ComponentContainer","providers","addComponent","provider","getProvider","addOrOverwriteComponent","getProviders","LogLevel","levelStringToEnum","DEBUG","VERBOSE","INFO","WARN","ERROR","SILENT","defaultLogLevel","ConsoleMethod","defaultLogHandler","logType","logLevel","toISOString","method","Logger","_logLevel","_logHandler","_userLogHandler","val","setLogLevel","logHandler","userLogHandler","debug","_len2","_key2","_len3","_key3","_len4","_key4","_len5","_key5","_len6","_key6","instanceOfAny","constructors","idbProxyableTypes","cursorAdvanceMethods","cursorRequestMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","idbProxyTraps","receiver","IDBTransaction","objectStoreNames","objectStore","wrap","wrapFunction","IDBDatabase","transaction","IDBCursor","advance","continue","continuePrimaryKey","unwrap","storeNames","tx","sort","transformCachableValue","unlisten","complete","DOMException","cacheDonePromiseForTransaction","IDBObjectStore","IDBIndex","Proxy","IDBRequest","success","promisifyRequest","newValue","readMethods","writeMethods","cachedMethods","getMethod","targetFuncName","useIndex","isWrite","async","storeName","store","oldTraps","PlatformLoggerServiceImpl","getPlatformInfoString","isVersionServiceProvider","library","logString","logger","PLATFORM_LOG_STRING","name$o","_apps","_components","_addComponent","app","_registerComponent","_getProvider","heartbeatController","triggerHeartbeat","ERROR_FACTORY","FirebaseAppImpl","_isDeleted","_options","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","checkDestroyed","isDeleted","appName","initializeApp","rawConfig","existingApp","newApp","registerVersion","libraryKeyOrName","variant","libraryMismatch","versionMismatch","warning","DB_NAME","DB_VERSION","STORE_NAME","dbPromise","getDbPromise","blocked","upgrade","blocking","terminated","indexedDB","open","openPromise","oldVersion","newVersion","openDB","createObjectStore","originalErrorMessage","writeHeartbeatsToIndexedDB","heartbeatObject","put","computeKey","idbGetError","appId","HeartbeatServiceImpl","_heartbeatsCache","_storage","HeartbeatStorageImpl","_heartbeatsCachePromise","read","agent","getUTCDateString","heartbeats","lastSentHeartbeatDate","singleDateHeartbeat","hbTimestamp","overwrite","getHeartbeatsHeader","heartbeatsToSend","unsentEntries","heartbeatsCache","maxSize","heartbeatEntry","find","dates","countBytes","extractHeartbeatsForHeader","headerString","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","isIndexedDBAvailable","preExist","DB_CHECK_NAME","onsuccess","close","deleteDatabase","onupgradeneeded","idbHeartbeatObject","readHeartbeatsFromIndexedDB","heartbeatsObject","existingHeartbeatsObject","version$1","SDK_VERSION","setSDKVersion","DOMStorageWrapper","domStorage_","prefix_","removeItem","prefixedName_","setItem","storedVal","getItem","MemoryStorage","cache_","isInMemoryStorage","createStoragefor","domStorageName","domStorage","PersistentStorage","SessionStorage","logClient","LUIDGenerator","sha1","high","stringToByteArray","sha1Bytes","buildLogMessage_","arg","firstLog_","enableLogging$1","logger_","persistent","varArgs","logWrapper","prefix","fatal","isInvalidJSONNumber","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","MIN_NAME","MAX_NAME","nameCompare","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","ObjectToUniqueKey","splitStringBySize","segsize","len","dataSegs","each","doubleToIEEE754String","bias","ln","abs","bits","reverse","hexByteString","hexByte","substr","INTEGER_REGEXP_","RegExp","intVal","exceptionGuard","setTimeoutNonBlocking","Deno","unrefTimer","AppCheckTokenProvider","appName_","appCheckProvider","appCheck","getToken","forceRefresh","addTokenChangeListener","addTokenListener","notifyForInvalidToken","FirebaseAuthTokenProvider","firebaseOptions_","authProvider_","auth_","auth","addAuthTokenListener","removeTokenChangeListener","removeAuthTokenListener","errorMessage","EmulatorTokenProvider","accessToken","OWNER","PROTOCOL_VERSION","FORGE_DOMAIN_RE","APP_CHECK_TOKEN_PARAM","WEBSOCKET","LONG_POLLING","RepoInfo","secure","namespace","webSocketOnly","nodeAdmin","persistenceKey","includeNamespaceInQueryParams","isUsingEmulator","_host","_domain","internalHost","isCacheableHost","isCustomHost","newHost","toURLString","protocol","query","repoInfoConnectionURL","repoInfo","params","connURL","repoInfoNeedsQueryParam","pairs","StatsCollection","counters_","incrementCounter","amount","collections","reporters","statsManagerGetCollection","hashString","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","handleResponse","requestNum","toProcess","FIREBASE_LONGPOLL_START_PARAM","BrowserPollConnection","connId","applicationId","appCheckToken","authToken","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","readyState","called","wrappedFn","executeWhenDOMReady","scriptTagHolder","FirebaseIFrameScriptHolder","command","arg1","arg2","arg3","arg4","incrementIncomingBytes_","sendNewPolls","pN","urlParams","uniqueCallbackIdentifier","hostname","connectURL","addTag","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","Windows","UI","markConnectionHealthy","shutdown_","myDisconnFrame","send","dataStr","base64data","MAX_URL_DATA_SIZE","enqueueSegment","pw","commandCB","onMessageCB","outstandingRequests","pendingSegs","currentSerial","myIFrame","createIFrame_","domain","iframeContents","doc","write","iframe","contentDocument","alive","myID","myPW","newRequest_","theURL","curDataString","theSeg","seg","ts","addLongPollTag_","segnum","totalsegs","serial","doNewRequest","keepaliveTimeout","readyStateCB","loadCB","doNodeLongPoll","newScript","onreadystatechange","rstate","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","headers","platform","env","proxy","origin","mySock","onopen","onclose","handleIncomingFrame","isOldAndroid","userAgent","oldAndroidRegex","oldAndroidMatch","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","mess","resetKeepAlive","remainingData","sendString_","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","ALL_TRANSPORTS","IS_TRANSPORT_INITIALIZED","globalTransportInitialized_","isWebSocketsAvailable","isSkipPollConnection","transports_","transports","transport","initialTransport","upgradeTransport","Connection","repoInfo_","applicationId_","appCheckToken_","authToken_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","msg","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","handshakePayload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","reason","ServerActions","pathString","onComplete","merge","refreshAuthToken","refreshAppCheckToken","onDisconnectPut","onDisconnectMerge","onDisconnectCancel","reportStats","stats","EventEmitter","allowedEvents_","listeners_","trigger","eventType","on","validateEventType_","eventData","getInitialEvent","off","et","OnlineMonitor","online_","getInstance","currentlyOnline","MAX_PATH_DEPTH","MAX_PATH_LENGTH_BYTES","Path","pathOrString","pieceNum","pieces_","copyTo","pieceNum_","newEmptyPath","pathGetFront","path","pathGetLength","pathPopFront","pathGetBack","pathSlice","begin","pathParent","pieces","pathChild","childPathObj","childPieces","pathIsEmpty","newRelativePath","outerPath","innerPath","outer","inner","pathEquals","pathContains","ValidationPath","errorPrefix_","parts_","byteLength_","validationPathCheckValid","validationPath","validationPathToErrorString","VisibilityMonitor","hidden","visibilityChange","visible_","visible","RECONNECT_MIN_DELAY","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","appCheckTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens","outstandingPuts_","outstandingGets_","outstandingPutCount_","outstandingGetCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","forceTokenRefresh_","invalidAuthTokenCount_","invalidAppCheckTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","onVisible_","onOnline_","onResponse","curReqNum","initConnection_","outstandingGet","_path","_queryObject","sendGet_","listen","currentHashFn","queryId","_queryIdentifier","_queryParams","isDefault","loadsAllData","listenSpec","hashFn","sendListen_","req","status","warnOnListenWarnings_","removeListen_","warnings","indexSpec","getIndex","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","isAdmin","tryAppCheck","authMethod","isValidFormat","requestData","cred","onAuthRevoked_","onAppCheckRevoked_","sendUnlisten_","queryObj","sendOnDisconnect_","response","putInternal","sendPut_","queued","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","handleTimestamp_","sendConnectStats_","restoreState_","scheduleConnect_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage","onReady","nextConnectionId_","canceled","connection","closeFn","sendRequestFn","interrupt","resume","serverTimeOffset","normalizedPathString","statusCode","explanation","queries","clientName","NamedNode","Wrap","Index","getCompare","indexedValueChanged","oldNode","newNode","oldWrapped","newWrapped","minPost","MIN","__EMPTY_NODE","KeyIndex","isDefinedOn","maxPost","makePost","indexValue","KEY_INDEX","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","cmp","right","getNext","hasNext","peek","LLRBNode","RED","SortedMap","EMPTY_NODE","copy","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nr","checkMaxDepth_","blackDepth","check_","BLACK","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","MAX_NODE$2","priorityHashText","validatePriorityNode","priorityNode","isLeafNode","getPriority","__childrenNodeConstructor","nodeFromJSON$1","MAX_NODE$1","LeafNode","value_","priorityNode_","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","exportFormat","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","equals","PRIORITY_INDEX","aPriority","bPriority","indexCmp","LOG_2","Base12Num","num","current_","mask","bits_","nextBitIsOne","buildChildSet","childList","keyFn","mapSortFn","buildBalancedTree","low","namedNode","middle","base12","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","buildFrom12Array","_defaultIndexMap","fallbackObject","IndexMap","indexes_","indexSet_","Default","indexKey","sortedMap","hasIndex","indexDefinition","addIndex","existingChildren","sawIndexedValue","iter","newIndex","indexName","newIndexSet","newIndexes","addToIndexes","indexedChildren","existingSnap","newChildren","removeFromIndexes","ChildrenNode","children_","indexMap_","newIndexMap","newPriority","newImmediateChild","numKeys","allIntegerKeys","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","endPost","MAX_NODE","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MAX","setMaxNode","USE_HINZE","nodeFromJSON","json","childData","childrenHavePriority","childSet","sortedChildSet","setNodeFromJSON","PathIndex","indexPath_","extractChild","snap","aChild","bChild","valueNode","VALUE_INDEX","changeValue","snapshotNode","changeChildAdded","changeChildRemoved","changeChildChanged","oldSnap","QueryParams","limitSet_","startSet_","startNameSet_","startAfterSet_","endSet_","endNameSet_","endBeforeSet_","limit_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","index_","hasStart","isViewFromLeft","getIndexStartValue","getIndexStartName","hasEnd","getIndexEndValue","getIndexEndName","hasLimit","hasAnchoredLimit","getLimit","queryParamsToRestQueryStringParameters","queryParams","qs","orderBy","startParam","endParam","queryParamsGetQueryObject","viewFrom","ReadonlyRestClient","listens_","getListenId_","listenId","thisListen","queryStringParameters","restRequest_","querystringParams","arrayVal","querystring","xhr","XMLHttpRequest","responseText","SnapshotHolder","rootNode_","getNode","updateSnapshot","newSnapshotNode","newSparseSnapshotTree","sparseSnapshotTreeRemember","sparseSnapshotTree","clear","childKey","sparseSnapshotTreeForEachTree","prefixPath","tree","sparseSnapshotTreeForEachChild","StatsListener","collection_","last_","newStats","stat","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","reportedStats","haveStatsToReport","OperationType","newOperationSourceServerTaggedQuery","fromUser","fromServer","tagged","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","operationForChild","subtree","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","node_","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","eventGeneratorGenerateEventsForType","eventGenerator","changes","registrations","eventCache","filteredChanges","change","aWrapped","bWrapped","eventGeneratorCompareChanges","materializedChange","prevName","eventGeneratorMaterializeSingleChange","registration","respondsTo","createEvent","query_","newViewCache","serverCache","viewCacheUpdateEventSnap","viewCache","eventSnap","filtered","viewCacheUpdateServerSnap","serverSnap","viewCacheGetCompleteEventSnap","viewCacheGetCompleteServerSnap","emptyChildrenSingleton","ImmutableTree","fromObject","childPath","childSnap","findRootMostMatchingPathAndValue","relativePath","childExistingPathAndValue","findRootMostValueAndPath","toSet","newChild","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","nextChild","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","CompoundWrite","writeTree_","empty","compoundWriteAddWrite","compoundWrite","rootmost","rootMostPath","newWriteTree","compoundWriteAddWrites","updates","newWrite","compoundWriteRemoveWrite","compoundWriteHasCompleteWrite","compoundWriteGetCompleteNode","compoundWriteGetCompleteChildren","compoundWriteChildCompoundWrite","shadowingNode","compoundWriteIsEmpty","compoundWriteApply","applySubtreeWrite","writeTree","priorityWrite","writeTreeChildWrites","newWriteTreeRef","writeTreeRemoveWrite","writeId","allWrites","findIndex","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","writeTreeRecordContainsPath_","visibleWrites","writeTreeLayerTree_","writeTreeDefaultFilter_","lastWriteId","writeTreeResetTree_","writeRecord","writes","treeRoot","writePath","deepNode","writeTreeCalcCompleteEventCache","treePath","completeServerCache","writeIdsToExclude","includeHiddenWrites","subMerge","writeTreeRefCalcCompleteEventCache","writeTreeRef","writeTreeRefCalcCompleteEventChildren","completeServerChildren","completeChildren","topLevelSet","writeTreeCalcCompleteEventChildren","writeTreeRefCalcEventCacheAfterServerOverwrite","existingEventSnap","existingServerSnap","childMerge","writeTreeCalcEventCacheAfterServerOverwrite","writeTreeRefShadowingWrite","writeTreeShadowingWrite","writeTreeRefCalcIndexedSlice","completeServerData","toIterate","nodes","writeTreeCalcIndexedSlice","writeTreeRefCalcCompleteChild","existingServerCache","writeTreeCalcCompleteChild","writeTreeRefChild","ChildChangeAccumulator","changeMap","trackChildChange","oldChange","oldType","getChanges","NO_COMPLETE_CHILD_SOURCE","getCompleteChild","getChildAfterChild","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","viewProcessorApplyOperation","viewProcessor","oldViewCache","operation","writesCache","completeCache","accumulator","filterServerNode","viewProcessorApplyUserOverwrite","viewProcessorApplyServerOverwrite","changedChildren","curViewCache","viewProcessorCacheHasChild","viewProcessorApplyUserMerge","viewProcessorApplyServerMerge","ackUserWrite","oldEventCache","newEventCache","serverChildren","updateFullNode","filtersNodes","viewProcessorRevertUserWrite","ackPath","mergePath","serverCachePath","viewProcessorAckUserWrite","LISTEN_COMPLETE","oldServerNode","viewProcessorGenerateEventCacheAfterServerEvent","viewProcessorListenComplete","isLeafOrEmpty","oldCompleteSnap","viewProcessorMaybeAddValueEvent","changePath","oldEventSnap","completeEventChildren","completeNode","oldEventNode","updatedPriority","childChangePath","newEventChild","eventChildUpdate","changedSnap","oldServerSnap","newServerCache","serverFilter","getIndexedFilter","newServerNode","oldChild","viewProcessorApplyMerge","viewMergeTree","childMergeTree","isUnknownDeepMerge","viewGetCompleteServerCache","viewApplyOperation","processor_","viewGenerateEventsForChanges_","eventRegistration","eventRegistrations_","eventRegistrations","moves","eventGeneratorGenerateEventsForChanges","eventGenerator_","referenceConstructor$1","referenceConstructor","syncPointApplyOperation","syncPoint","optCompleteServerCache","views","syncPointGetCompleteServerCache","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","syncTreeApplyUserOverwrite","syncTree","newData","writeTreeAddOverwrite","syncTreeApplyOperationToSyncPoints_","syncTreeAckUserWrite","record","writeTreeGetWrite","syncTreeApplyServerOverwrite","syncTreeApplyTaggedQueryOverwrite","queryKey","syncTreeQueryKeyForTag_","syncTreeParseQueryKey_","queryPath","syncTreeApplyTaggedOperation_","syncTreeCalcCompleteEventCache","syncTreeApplyOperationHelper_","syncPointTree","syncTreeApplyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","splitIndex","ExistingValueProvider","DeferredValueProvider","syncTree_","path_","generateWithValues","resolveDeferredLeafValue","existingVal","serverValues","resolveScalarDeferredValue","resolveComplexDeferredValue","op","existing","unused","existingNode","resolveDeferredValueTree","resolveDeferredValue","resolveDeferredValueSnapshot","rawPri","leafNode","childrenNode","Tree","parent","childCount","treeSubTree","pathObj","treeGetValue","treeSetValue","treeUpdateParents","treeHasChildren","treeForEachChild","treeForEachDescendant","includeSelf","childrenFirst","treeGetPath","childEmpty","treeIsEmpty","childExists","treeUpdateChild","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","MAX_LEAF_SIZE_","isValidKey","isValidPathString","validateFirebaseDataArg","validateFirebaseData","hasDotValue","hasActualChild","validationPathPush","validationPathPop","validatePathString","argumentName","validateRootPathString","validateWritablePath","validateUrl","parsedUrl","isValidRootPathString","EventQueue","eventLists_","recursionDepth_","eventQueueQueueEvents","eventQueue","eventDataList","currList","getPath","eventQueueRaiseEventsForChangedPath","changedPath","eventQueueRaiseQueuedEventsMatchingPredicate","eventPath","sentAll","eventList","eventListRaise","eventFn","getEventRunner","INTERRUPT_REASON","MAX_TRANSACTION_RETRIES","Repo","forceRestClient_","appCheckProvider_","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","transactionQueueTree_","persistentConnection_","repoStart","repo","authOverride","isMerge","repoOnDataUpdate","repoOnConnectStatus","connectStatus","repoUpdateInfo","repoOnServerInfoUpdate","statsReporter_","creatorFunction","statsManagerGetOrCreateReporter","infoData_","infoSyncTree_","startListening","infoEvents","stopListening","serverSyncTree_","repoServerTime","repoGenerateServerValues","taggedChildren","raw","changeTree","syncTreeApplyTaggedQueryMerge","taggedSnap","syncTreeApplyServerMerge","affectedPath","repoRerunTransactions","repoLog","resolvedOnDisconnectTree","resolved","repoAbortTransactions","repoRunOnDisconnectEvents","repoGetNextWriteId","repoSetWithPriority","newVal","newNodeUnresolved","clearEvents","repoCallOnCompleteCallback","repoInterrupt","_key7","repoGetLatestState","excludeSets","repoSendReadyTransactions","repoPruneCompletedTransactionsBelowNode","repoBuildTransactionQueue","every","setsToIgnore","txn","currentWriteId","latestState","snapToSend","latestHash","retryCount","currentOutputSnapshotRaw","dataToSend","pathToSend","currentOutputSnapshotResolved","unwatcher","abortReason","repoSendTransactionQueue","rootMostTransactionNode","repoGetAncestorTransactionNode","txnsToRerun","abortTransaction","currentNode","currentInputSnapshot","newDataNode","oldWriteId","newNodeResolved","applyLocally","repoRerunTransactionQueue","transactionNode","transactionQueue","repoAggregateTransactionQueuesForNode","nodeQueue","treeForEachAncestor","repoAbortTransactionsOnNode","lastSent","parseRepoInfo","dataURL","parseDatabaseURL","scheme","subdomain","colonInd","slashInd","questionMarkInd","pathStringDecoded","piece","decodeURIComponent","decodePath","queryString","results","segment","kv","decodeQuery","hostWithoutPort","dotInd","PUSH_CHARS","nextPushId","lastPushTime","lastRandChars","duplicateTime","timeStampChars","QueryImpl","_repo","_orderByCalled","ReferenceImpl","isEqual","sameRepo","samePath","sameQueryIdentifier","toJSON","pathToUrlEncodedString","parentPath","_checkNotDeleted","_root","syncPointSetReferenceConstructor","syncTreeSetReferenceConstructor","FIREBASE_DATABASE_EMULATOR_HOST_VAR","repos","useRestClient","repoManagerDatabaseFromApp","authProvider","dbUrl","databaseURL","projectId","isEmulator","dbEmulatorHost","authTokenProvider","appRepos","repoManagerCreateRepo","Database","_repoInternal","_instanceStarted","_rootInternal","repoManagerDeleteRepo","apiName","simpleListen","echo","onEcho","_ref2","registerDatabase","database","getApp","emulator","tokenProvider","mockUserToken","uid","project","iat","sub","user_id","iss","aud","exp","auth_time","firebase","sign_in_provider","identities","alg","createMockUserToken","repoManagerApplyEmulatorSettings","connectDatabaseEmulator","getDatabase","apiKey","authDomain","storageBucket","messagingSenderId","measurementId","formData","setFormData","fullName","subject","handleChange","prevState","onSubmit","alert","thennablePushRef","pushRef","timeOfMessage","placeholder","onChange","required","App","content","Section1","Section2","Section3","Section4","Section5","Section7","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","reportWebVitals"],"sourceRoot":""}